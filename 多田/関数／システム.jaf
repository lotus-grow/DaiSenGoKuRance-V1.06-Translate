void 音楽／コマンド画面()
{
	if (◆予備０８ == 1 && EV("天界／ランス行動開始", -2147483648) == true)
	{
		音楽(84, 0, false);
		return;
	}
	if (◆予備０８ == 1 && (EV("ホーネット派／やりたい", -2147483648) == true || 勢力[25].状態 == 2 || 勢力[29].状態 == 2))
	{
		音楽(19, 0, false);
		return;
	}
	if (◆予備０８ == 1 && (EV("ヘルマン／ログ攻略", -2147483648) == true || 勢力[26].状態 == 2 || 勢力[27].状態 == 2 || 勢力[28].状態 == 2))
	{
		音楽(96, 0, false);
		return;
	}
	if (◆予備０８ == 1 && 勢力[30].状態 == 2)
	{
		音楽(74, 0, false);
		return;
	}
	if (◆予備０８ == 1)
	{
		音楽(13, 0, false);
		return;
	}
	if (ＧＦ[140] == 1)
	{
		音楽(2, 0, false);
		return;
	}
	音楽(1, 0, false);
}

void 音楽／合戦合戦(lint fg)
{
	if (fg == 1 && ＦＰ技能総数取得(368, 1) > 0)
	{
		音楽(41, 0, false);
	}
	if (fg == 1 && ＦＰ技能総数取得(369, 1) > 0)
	{
		音楽(9, 0, false);
	}
	if (◆特定戦闘 == 1 || ◆特定戦闘 == 8 || ◆特定戦闘 == 51)
	{
		if (fg == 0)
		{
			音楽(60, 0, false);
		}
		if (fg == 1)
		{
			音楽(11, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 4 || ◆特定戦闘 == 10 || ◆特定戦闘 == 12 || ◆特定戦闘 == 15)
	{
		if (fg == 0)
		{
			音楽(58, 0, false);
		}
		if (fg == 1)
		{
			音楽(9, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 81)
	{
		if (fg == 1)
		{
			音楽(21, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 82 || ◆特定戦闘 == 89 || ◆特定戦闘 == 90 || ◆特定戦闘 == 91 || ◆特定戦闘 == 92 || ◆特定戦闘 == 98)
	{
		if (fg == 1)
		{
			音楽(21, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 93)
	{
		if (fg == 1)
		{
			音楽(71, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 95)
	{
		if (fg == 0)
		{
			音楽(57, 0, false);
		}
		if (fg == 1)
		{
			音楽(64, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 97)
	{
		if (fg == 0)
		{
		}
		if (fg == 1)
		{
			音楽(85, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 99)
	{
		if (fg == 0)
		{
		}
		if (fg == 1)
		{
			音楽(15, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 100)
	{
		if (fg == 0)
		{
		}
		if (fg == 1)
		{
			音楽(90, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 101)
	{
		if (fg == 0)
		{
		}
		if (fg == 1)
		{
			音楽(92, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 102)
	{
		if (fg == 0)
		{
			音楽(60, 0, false);
		}
		if (fg == 1)
		{
			音楽(11, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 103)
	{
		if (fg == 0)
		{
			音楽(57, 0, false);
		}
		if (fg == 1)
		{
			音楽(8, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 104)
	{
		if (fg == 0)
		{
		}
		if (fg == 1)
		{
			音楽(41, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 105)
	{
		if (fg == 0)
		{
		}
		if (fg == 1)
		{
			音楽(91, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 107)
	{
		if (fg == 0)
		{
		}
		if (fg == 1)
		{
			音楽(91, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 108)
	{
		if (fg == 0)
		{
			音楽(89, 0, false);
		}
		if (fg == 1)
		{
			音楽(91, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 106)
	{
		if (fg == 0)
		{
			音楽(89, 0, false);
		}
		if (fg == 1)
		{
			音楽(90, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 96)
	{
		if (fg == 0)
		{
			音楽(57, 0, false);
		}
		if (fg == 1)
		{
			音楽(64, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 94)
	{
		return;
	}
	if (◆特定戦闘 == 83)
	{
		if (fg == 1)
		{
			音楽(45, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 84)
	{
		if (fg == 1)
		{
			音楽(65, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 85)
	{
		if (fg == 1)
		{
			音楽(65, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 86)
	{
		if (fg == 1)
		{
			音楽(15, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 87)
	{
		音楽(68, 0, false);
		return;
	}
	if (◆特定戦闘 == 88)
	{
		音楽(15, 0, false);
		return;
	}
	if (◆特定戦闘 == 16)
	{
		if (fg == 0)
		{
			音楽(59, 0, false);
		}
		if (fg == 1)
		{
			音楽(10, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 43)
	{
		if (fg == 0)
		{
			音楽(52, 0, false);
		}
		if (fg == 1)
		{
			音楽(3, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 46)
	{
		if (fg == 0)
		{
			音楽(59, 0, false);
		}
		if (fg == 1)
		{
			音楽(10, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 50)
	{
		if (fg == 0)
		{
			音楽(60, 0, false);
		}
		if (fg == 1)
		{
			音楽(11, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 52)
	{
		if (fg == 0)
		{
			音楽(54, 0, false);
		}
		if (fg == 1)
		{
			音楽(5, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 53)
	{
		if (fg == 0)
		{
			音楽(60, 0, false);
		}
		if (fg == 1)
		{
			音楽(11, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 60)
	{
		return;
	}
	if (◆特定戦闘 == 80)
	{
		if (fg == 1)
		{
			音楽(15, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 61)
	{
		if (fg == 1)
		{
			音楽(3, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 63)
	{
		if (fg == 0)
		{
			音楽(55, 0, false);
		}
		if (fg == 1)
		{
			音楽(6, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 64)
	{
		if (fg == 0)
		{
			音楽(53, 0, false);
		}
		if (fg == 1)
		{
			音楽(4, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 65)
	{
		if (fg == 0)
		{
			音楽(53, 0, false);
		}
		if (fg == 1)
		{
			音楽(4, 0, false);
		}
		return;
	}
	if (◆特定戦闘 == 31 || ◆特定戦闘 == 32 || ◆特定戦闘 == 33 || ◆特定戦闘 == 34 || ◆特定戦闘 == 35)
	{
		if (fg == 0)
		{
			音楽(55, 0, false);
		}
		if (fg == 1)
		{
			音楽(6, 0, false);
		}
		return;
	}
	if (◆特定戦闘 != 0)
	{
		if (fg == 0)
		{
			音楽(57, 0, false);
		}
		if (fg == 1)
		{
			音楽(8, 0, false);
		}
		return;
	}
	if (◆迷宮戦闘 == 1 && ◆予備０８ == 1 && EV("二部ラストバトル／準備", -2147483648) == true)
	{
		if (fg == 0)
		{
			音楽(86, 0, false);
		}
		if (fg == 1)
		{
			音楽(86, 0, false);
		}
		return;
	}
	if (◆迷宮戦闘 == 1 && ◆予備０８ == 1)
	{
		if (fg == 0)
		{
			音楽(80, 0, false);
		}
		if (fg == 1)
		{
			音楽(81, 0, false);
		}
		return;
	}
	if (◆迷宮戦闘 == 1)
	{
		if (fg == 0)
		{
			音楽(56, 0, false);
		}
		if (fg == 1)
		{
			音楽(7, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ＧＦ[152] == 1)
	{
		if (fg == 0)
		{
			音楽(53, 0, false);
		}
		if (fg == 1)
		{
			音楽(4, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 22)
	{
		if (fg == 0)
		{
			音楽(25, 0, false);
		}
		if (fg == 1)
		{
			音楽(23, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 23)
	{
		if (fg == 0)
		{
			音楽(25, 0, false);
		}
		if (fg == 1)
		{
			音楽(23, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 24)
	{
		if (fg == 0)
		{
			音楽(25, 0, false);
		}
		if (fg == 1)
		{
			音楽(23, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 25)
	{
		if (fg == 0)
		{
			音楽(66, 0, false);
		}
		if (fg == 1)
		{
			音楽(63, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 29)
	{
		if (fg == 0)
		{
			音楽(66, 0, false);
		}
		if (fg == 1)
		{
			音楽(63, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 30)
	{
		if (fg == 0)
		{
			音楽(120, 0, false);
		}
		if (fg == 1)
		{
			音楽(121, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 26)
	{
		if (fg == 0)
		{
			音楽(25, 0, false);
		}
		if (fg == 1)
		{
			音楽(43, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 27)
	{
		if (fg == 0)
		{
			音楽(25, 0, false);
		}
		if (fg == 1)
		{
			音楽(43, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 28)
	{
		if (fg == 0)
		{
			音楽(25, 0, false);
		}
		if (fg == 1)
		{
			音楽(43, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 31)
	{
		if (fg == 0)
		{
			音楽(84, 0, false);
		}
		if (fg == 1)
		{
			音楽(76, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 33)
	{
		if (fg == 0)
		{
			音楽(62, 0, false);
		}
		if (fg == 1)
		{
			音楽(47, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 35)
	{
		if (fg == 0)
		{
			音楽(25, 0, false);
		}
		if (fg == 1)
		{
			音楽(23, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 36)
	{
		if (fg == 0)
		{
			音楽(25, 0, false);
		}
		if (fg == 1)
		{
			音楽(23, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1 && ◆戦場対戦国 == 40)
	{
		if (fg == 0)
		{
			音楽(25, 0, false);
		}
		if (fg == 1)
		{
			音楽(20, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 1)
	{
		if (fg == 0)
		{
			音楽(52, 0, false);
		}
		if (fg == 1)
		{
			音楽(3, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 22)
	{
		if (fg == 0)
		{
			音楽(26, 0, false);
		}
		if (fg == 1)
		{
			音楽(28, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 23)
	{
		if (fg == 0)
		{
			音楽(36, 0, false);
		}
		if (fg == 1)
		{
			音楽(30, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 24)
	{
		if (fg == 0)
		{
			音楽(32, 0, false);
		}
		if (fg == 1)
		{
			音楽(35, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 25)
	{
		if (fg == 0)
		{
			音楽(55, 0, false);
		}
		if (fg == 1)
		{
			音楽(49, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 26)
	{
		if (fg == 0)
		{
			音楽(37, 0, false);
		}
		if (fg == 1)
		{
			音楽(38, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 27)
	{
		if (fg == 0)
		{
			音楽(37, 0, false);
		}
		if (fg == 1)
		{
			音楽(38, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 28)
	{
		if (fg == 0)
		{
			音楽(37, 0, false);
		}
		if (fg == 1)
		{
			音楽(44, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 25)
	{
		if (fg == 0)
		{
			音楽(55, 0, false);
		}
		if (fg == 1)
		{
			音楽(6, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 29)
	{
		if (fg == 0)
		{
			音楽(55, 0, false);
		}
		if (fg == 1)
		{
			音楽(6, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 30)
	{
		if (fg == 0)
		{
			音楽(122, 0, false);
		}
		if (fg == 1)
		{
			音楽(123, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 31)
	{
		if (fg == 0)
		{
			音楽(75, 0, false);
		}
		if (fg == 1)
		{
			音楽(76, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 33)
	{
		if (fg == 0)
		{
			音楽(18, 0, false);
		}
		if (fg == 1)
		{
			音楽(20, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 35)
	{
		if (fg == 0)
		{
			音楽(26, 0, false);
		}
		if (fg == 1)
		{
			音楽(28, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 36)
	{
		if (fg == 0)
		{
			音楽(26, 0, false);
		}
		if (fg == 1)
		{
			音楽(28, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 40)
	{
		if (fg == 0)
		{
			音楽(26, 0, false);
		}
		if (fg == 1)
		{
			音楽(128, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 != 2)
	{
		if (fg == 0)
		{
			音楽(54, 0, false);
		}
		if (fg == 1)
		{
			音楽(5, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 2 && ◆戦場対戦国 == 2)
	{
		if (fg == 0)
		{
			音楽(55, 0, false);
		}
		if (fg == 1)
		{
			音楽(6, 0, false);
		}
		return;
	}
	if (◆攻防タイプ == 3)
	{
		if (fg == 0)
		{
			音楽(54, 0, false);
		}
		if (fg == 1)
		{
			音楽(5, 0, false);
		}
		return;
	}
}

void 音楽／戦闘画面()
{
	音楽／合戦合戦(1);
}

void 音楽／参加選択画面(lint フラグ)
{
	音楽／合戦合戦(0);
}

void 宣戦布告(lint ii2)
{
	▲文字列 = "宣戦布告";
	▲文字列２ = 勢力[ii2].名前 + "と合戦状態になりました";
}

void 能力ＵＰ(lint iic, lint フラグ)
{
	lint ii = ◆Ｐｉｉ;
	lint rr = 0;
	lint aa = 0;
	lint bb = 0;
	lint a1 = 0;
	lint a2 = 0;
	lint キャラ = 0;
	if (ii == 0)
	{
		return;
	}
	if (iic == 0)
	{
		return;
	}
	if (iic > 999)
	{
		iic = ＧＳ番号取得(iic, ii);
	}
	if (iic == 0)
	{
		return;
	}
	bb = 100;
	キャラ = gs[ii][iic].番号;
	汎用１(iic, 999);
	if (フラグ == 0)
	{
		ＳＭ(5007, 0, 0);
	}
	if (フラグ == 1)
	{
		ＳＭ(5073, 0, 0);
	}
	if (フラグ == 2)
	{
		ＳＭ(5075, 0, 0);
	}
	for (; ; )
	{
		選択肢(0, gs[ii][iic].名前 + "　パワーアップ");
		選択肢(1, "ステータスＵＰ");
		if (技能１処理(1, iic) == 1)
		{
			if (gs[ii][iic].技１ != 0)
			{
				選択肢(21, 行動名前[gs[ii][iic].技１] + "：を変更");
			}
			else
			{
				選択肢(21, "技能を取得");
			}
		}
		if (技能３処理(1, iic) == 1)
		{
			if (gs[ii][iic].技３ != 0)
			{
				選択肢(23, 行動名前[gs[ii][iic].技３] + "：を変更");
			}
			else
			{
				選択肢(23, "技能を取得");
			}
		}
		if (技能４処理(1, iic) == 1)
		{
			if (gs[ii][iic].技４ != 0)
			{
				選択肢(24, 行動名前[gs[ii][iic].技４] + "：を変更");
			}
			else
			{
				選択肢(24, "技能を取得");
			}
		}
		if (技能５処理(1, iic) == 1)
		{
			if (gs[ii][iic].技能 != 0)
			{
				選択肢(25, 行動名前[gs[ii][iic].技能] + "：を変更");
			}
			else
			{
				選択肢(25, "技能を取得");
			}
		}
		選択肢(4, "兵数＋" + string(bb) + "名");
		if (gs[ii][iic].Ｓレベル + 1 < gs[ii][iic].Ｓレベル上限)
		{
			選択肢(5, "レベルを２ＵＰ（" + string(gs[ii][iic].Ｓレベル) + "／" + string(gs[ii][iic].Ｓレベル上限) + "）");
		}
		rr = 選択(false, 0, 0);
		if (rr == 5)
		{
			ＣＳレベル加算(2, iic, 999);
			汎用１(iic, 999);
			ＳＭ(5008, 0, 0);
			return;
		}
		if (rr == 4)
		{
			Ｃ兵数追加(bb, iic, 999);
			汎用１(iic, 999);
			ＳＭ(5048, bb, 0);
			return;
		}
		if (rr == 1)
		{
			aa = 1;
			aa += ＧＦ[84];
			選択肢(0, "ステータスをＵＰします");
			a1 = gs[ii][iic].攻撃;
			lint ＳＴ上限 = 9;
			if (上級職チェック(ii, iic) == true)
			{
				ＳＴ上限 = 12;
			}
			else if (◆予備０８ == 1)
			{
				ＳＴ上限 = 10;
			}
			else
			{
				ＳＴ上限 = 9;
			}
			if (a1 < 7)
			{
				選択肢(1, "攻撃　" + string(a1) + "＞" + string(a1 + 1) + "　");
			}
			if (a1 > 6 && a1 < ＳＴ上限)
			{
				選択肢(2, "攻撃　" + string(a1) + "＞" + string(a1 + 1) + "（コスト＋" + string(aa) + "）");
			}
			a1 = gs[ii][iic].防御;
			if (a1 < 7)
			{
				選択肢(3, "防御　" + string(a1) + "＞" + string(a1 + 1) + "　");
			}
			if (a1 > 6 && a1 < ＳＴ上限)
			{
				選択肢(4, "防御　" + string(a1) + "＞" + string(a1 + 1) + "（コスト＋" + string(aa) + "）");
			}
			a1 = gs[ii][iic].知力;
			if (a1 < 7)
			{
				選択肢(5, "知力　" + string(a1) + "＞" + string(a1 + 1) + "　");
			}
			if (a1 > 6 && a1 < ＳＴ上限)
			{
				選択肢(6, "知力　" + string(a1) + "＞" + string(a1 + 1) + "（コスト＋" + string(aa) + "）");
			}
			a1 = gs[ii][iic].早さ;
			if (a1 < 7)
			{
				選択肢(7, "早さ　" + string(a1) + "＞" + string(a1 + 1) + "　");
			}
			if (a1 > 6 && a1 < ＳＴ上限)
			{
				選択肢(8, "早さ　" + string(a1) + "＞" + string(a1 + 1) + "（コスト＋" + string(aa) + "）");
			}
			選択肢(9, "別のにする");
			rr = 選択(true, 0, 0);
			if (rr == 1)
			{
				gs[ii][iic].攻撃基礎値++;
				ＧＳ基礎値計算(ii, iic);
				汎用１(iic, 999);
				ＳＭ(5027, 0, 0);
				return;
			}
			if (rr == 2)
			{
				gs[ii][iic].基礎国力 += aa;
				gs[ii][iic].攻撃基礎値++;
				ＧＳ基礎値計算(ii, iic);
				汎用１(iic, 999);
				ＳＭ(5027, 0, 0);
				return;
			}
			if (rr == 3)
			{
				gs[ii][iic].防御基礎値++;
				ＧＳ基礎値計算(ii, iic);
				汎用１(iic, 999);
				ＳＭ(5028, 0, 0);
				return;
			}
			if (rr == 4)
			{
				gs[ii][iic].基礎国力 += aa;
				gs[ii][iic].防御基礎値++;
				ＧＳ基礎値計算(ii, iic);
				汎用１(iic, 999);
				ＳＭ(5028, 0, 0);
				return;
			}
			if (rr == 5)
			{
				gs[ii][iic].知力基礎値++;
				ＧＳ基礎値計算(ii, iic);
				汎用１(iic, 999);
				ＳＭ(5029, 0, 0);
				return;
			}
			if (rr == 6)
			{
				gs[ii][iic].基礎国力 += aa;
				gs[ii][iic].知力基礎値++;
				ＧＳ基礎値計算(ii, iic);
				汎用１(iic, 999);
				ＳＭ(5029, 0, 0);
				return;
			}
			if (rr == 7)
			{
				gs[ii][iic].早さ基礎値++;
				ＧＳ基礎値計算(ii, iic);
				汎用１(iic, 999);
				ＳＭ(5030, 0, 0);
				return;
			}
			if (rr == 8)
			{
				gs[ii][iic].基礎国力 += aa;
				gs[ii][iic].早さ基礎値++;
				ＧＳ基礎値計算(ii, iic);
				汎用１(iic, 999);
				ＳＭ(5030, 0, 0);
				return;
			}
			continue;
		}
		if (rr == 21)
		{
			if (技能１処理(0, iic) == 1)
			{
				return;
			}
			continue;
		}
		if (rr == 23)
		{
			if (技能３処理(0, iic) == 1)
			{
				return;
			}
			continue;
		}
		if (rr == 24)
		{
			if (技能４処理(0, iic) == 1)
			{
				return;
			}
			continue;
		}
		if (rr == 25)
		{
			if (技能５処理(0, iic) == 1)
			{
				return;
			}
			continue;
		}
	}
}

lint 能力ＵＰ技能(lint fg, lint ii, lint iic, lint 番号)
{
	if (fg == 1)
	{
		return 1;
	}
	if (gs[ii][iic].技１ == 番号)
	{
		return 0;
	}
	if (gs[ii][iic].技３ == 番号)
	{
		return 0;
	}
	if (gs[ii][iic].技４ == 番号)
	{
		return 0;
	}
	if (gs[ii][iic].技能 == 番号)
	{
		return 0;
	}
	選択肢(番号, 行動名前[番号]);
	return 0;
}

lint 技能１処理(lint fg, lint iic)
{
	lint ck = 0;
	lint rr = 0;
	lint ii = 0;
	ii = ◆Ｐｉｉ;
	if (fg == 0)
	{
		if (gs[ii][iic].技１ != 0)
		{
			選択肢(0, 行動名前[gs[ii][iic].技１] + "を変更");
		}
		else
		{
			選択肢(0, "技能を取得");
		}
	}
	if (gs[ii][iic].兵種 == 1 || gs[ii][iic].兵種 == 34 || gs[ii][iic].兵種 == 62 || gs[ii][iic].兵種 == 64 || gs[ii][iic].兵種 == 73)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 96);
	}
	if (gs[ii][iic].兵種 == 3 || gs[ii][iic].兵種 == 63)
	{
		if (gs[ii][iic].技１ == 21)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 22);
		}
		if (gs[ii][iic].技１ == 21)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 23);
		}
	}
	if (gs[ii][iic].兵種 == 2 || gs[ii][iic].兵種 == 69 || gs[ii][iic].兵種 == 70 || gs[ii][iic].兵種 == 71 || gs[ii][iic].兵種 == 72)
	{
		if (gs[ii][iic].技１ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 25);
		}
		if (gs[ii][iic].技１ == 25)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 20);
		}
	}
	if (gs[ii][iic].兵種 == 9 || gs[ii][iic].兵種 == 60)
	{
		if (gs[ii][iic].技１ == 50)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 52);
		}
		if (gs[ii][iic].技１ == 50)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 51);
		}
		if (gs[ii][iic].技１ == 51)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 141);
		}
	}
	if (gs[ii][iic].兵種 == 7)
	{
		if (gs[ii][iic].技１ == 58)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 126);
		}
	}
	if (gs[ii][iic].兵種 == 6 || gs[ii][iic].兵種 == 66)
	{
		if (gs[ii][iic].技１ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 37);
		}
		if (gs[ii][iic].技１ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 154);
		}
		if (gs[ii][iic].技１ == 154)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 155);
		}
		if (gs[ii][iic].技１ == 155)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 156);
		}
	}
	if (gs[ii][iic].兵種 == 8)
	{
		if (gs[ii][iic].技１ == 3)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 143);
		}
	}
	if (gs[ii][iic].兵種 == 13)
	{
		if (gs[ii][iic].技１ == 63)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 62);
		}
		if (gs[ii][iic].技１ == 62)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 61);
		}
		if (gs[ii][iic].技１ == 62)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 135);
		}
		if (gs[ii][iic].技１ == 135)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 60);
		}
	}
	if (gs[ii][iic].兵種 == 4)
	{
		if (gs[ii][iic].技１ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 2);
		}
	}
	if (gs[ii][iic].兵種 == 10)
	{
		if (gs[ii][iic].技１ == 21)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 22);
		}
		if (gs[ii][iic].技１ == 21)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 23);
		}
	}
	if (fg == 0)
	{
		選択肢(999, "別のにする");
		rr = 選択(true, 0, 0);
		if (rr != 999 && rr != 0)
		{
			Ｃ技能変更(rr, 1, iic, 999, 0);
			return 1;
		}
		return 0;
	}
	return ck;
}

lint 技能３処理(lint fg, lint iic)
{
	lint ck = 0;
	lint rr = 0;
	lint ii = 0;
	lint キャラ = 0;
	ii = ◆Ｐｉｉ;
	キャラ = gs[ii][iic].番号;
	if (fg == 0)
	{
		if (gs[ii][iic].技３ != 0)
		{
			選択肢(0, 行動名前[gs[ii][iic].技３] + "を変更");
		}
		else
		{
			選択肢(0, "技能を取得");
		}
	}
	if (gs[ii][iic].兵種 == 1 || gs[ii][iic].兵種 == 34 || gs[ii][iic].兵種 == 62 || gs[ii][iic].兵種 == 64 || gs[ii][iic].兵種 == 73)
	{
		if (gs[ii][iic].技３ == 11)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 182);
		}
		if (gs[ii][iic].技３ == 182)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 215);
		}
	}
	if (gs[ii][iic].兵種 == 3 || gs[ii][iic].兵種 == 63)
	{
		if (gs[ii][iic].技３ == 131)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 184);
		}
	}
	if (gs[ii][iic].兵種 == 5 || gs[ii][iic].兵種 == 65)
	{
		if (gs[ii][iic].技３ == 31)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 30);
		}
	}
	if (gs[ii][iic].兵種 == 9 || gs[ii][iic].兵種 == 60)
	{
		if (gs[ii][iic].技３ == 31)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 30);
		}
	}
	if (gs[ii][iic].兵種 == 7)
	{
		if (gs[ii][iic].技３ == 10)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 35);
		}
	}
	if (gs[ii][iic].兵種 == 6 || gs[ii][iic].兵種 == 66)
	{
		if (gs[ii][iic].技３ == 33)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 157);
		}
	}
	if (gs[ii][iic].兵種 == 2 || gs[ii][iic].兵種 == 69 || gs[ii][iic].兵種 == 70 || gs[ii][iic].兵種 == 71 || gs[ii][iic].兵種 == 72)
	{
		if (gs[ii][iic].技３ == 13)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 165);
		}
	}
	if (gs[ii][iic].兵種 == 8)
	{
		if (gs[ii][iic].技３ == 40)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 162);
		}
	}
	if (gs[ii][iic].兵種 == 13)
	{
		if (gs[ii][iic].技３ == 31)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 30);
		}
	}
	if (gs[ii][iic].技３ != 171 && キャラ == 1026)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 171);
	}
	if (gs[ii][iic].技３ == 30 && (キャラ == 1122 || キャラ == 1123))
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 171);
	}
	if (gs[ii][iic].技３ != 159 && キャラ == 1002)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 159);
	}
	if (fg == 0)
	{
		選択肢(999, "別のにする");
		rr = 選択(true, 0, 0);
		if (rr != 999 && rr != 0)
		{
			Ｃ技能変更(rr, 3, iic, 999, 0);
			return 1;
		}
		return 0;
	}
	return ck;
}

lint 技能４処理(lint fg, lint iic)
{
	lint ck = 0;
	lint rr = 0;
	lint ii = 0;
	lint キャラ = 0;
	ii = ◆Ｐｉｉ;
	キャラ = gs[ii][iic].番号;
	if (fg == 0)
	{
		if (gs[ii][iic].技４ != 0)
		{
			選択肢(0, 行動名前[gs[ii][iic].技４] + "を変更");
		}
		else
		{
			選択肢(0, "技能を取得");
		}
	}
	if (gs[ii][iic].兵種 == 1 || gs[ii][iic].兵種 == 34 || gs[ii][iic].兵種 == 62 || gs[ii][iic].兵種 == 64 || gs[ii][iic].兵種 == 73)
	{
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 12);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 16);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 19);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 18);
		}
		if (gs[ii][iic].技４ == 18)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 80);
		}
	}
	if (gs[ii][iic].兵種 == 3 || gs[ii][iic].兵種 == 63)
	{
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 132);
		}
		if (gs[ii][iic].技４ == 132)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 138);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 27);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 26);
		}
	}
	if (gs[ii][iic].兵種 == 2 || gs[ii][iic].兵種 == 69 || gs[ii][iic].兵種 == 70 || gs[ii][iic].兵種 == 71 || gs[ii][iic].兵種 == 72)
	{
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 133);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 15);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 89);
		}
	}
	if (gs[ii][iic].兵種 == 5 || gs[ii][iic].兵種 == 65)
	{
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 151);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 139);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 140);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 152);
		}
		if (gs[ii][iic].技４ == 152)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 87);
		}
	}
	if (gs[ii][iic].兵種 == 9 || gs[ii][iic].兵種 == 60)
	{
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 97);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 70);
		}
	}
	if (gs[ii][iic].兵種 == 7)
	{
		if (gs[ii][iic].技４ == 73)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 142);
		}
		if (gs[ii][iic].技４ == 73)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 160);
		}
		if (gs[ii][iic].技４ == 160)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 161);
		}
	}
	if (gs[ii][iic].兵種 == 6 || gs[ii][iic].兵種 == 66)
	{
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 34);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 85);
		}
		if (gs[ii][iic].技４ == 85)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 86);
		}
	}
	if (gs[ii][iic].兵種 == 8)
	{
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 41);
		}
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 42);
		}
		if (gs[ii][iic].技４ == 42)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 43);
		}
	}
	if (gs[ii][iic].兵種 == 13)
	{
		if (gs[ii][iic].技４ == 70)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 71);
		}
		if (gs[ii][iic].技４ == 71)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 72);
		}
		if (gs[ii][iic].技４ == 70)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 5);
		}
		if (gs[ii][iic].技４ == 5)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 150);
		}
		if (gs[ii][iic].技４ == 70)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 38);
		}
		if (gs[ii][iic].技４ == 38)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 39);
		}
	}
	if (gs[ii][iic].兵種 == 4)
	{
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 59);
		}
		if (gs[ii][iic].技４ == 59 && gs[ii][iic].技数基礎値 > 1)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 153);
		}
	}
	if (gs[ii][iic].兵種 == 12)
	{
		if (gs[ii][iic].技４ == 0)
		{
			ck = 能力ＵＰ技能(fg, ii, iic, 9);
		}
	}
	if (gs[ii][iic].技４ == 0 && キャラ == 1002)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 86);
	}
	if (gs[ii][iic].技４ == 0 && キャラ == 1026)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 91);
	}
	if (gs[ii][iic].技４ != 7 && キャラ == 1008)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 7);
	}
	if (gs[ii][iic].技４ == 0 && キャラ == 1009)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 47);
	}
	if (gs[ii][iic].技４ == 0 && キャラ == 1007)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 46);
	}
	if (gs[ii][iic].技４ == 94 && キャラ == 1065)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 158);
	}
	if (gs[ii][iic].技４ == 168 && キャラ == 1033 && EV("川之江譲／龍馬ゲット", -2147483648) == true)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 169);
	}
	if (gs[ii][iic].技４ == 168 && キャラ == 1034 && EV("川之江美禰／龍馬ゲット", -2147483648) == true)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 169);
	}
	if (gs[ii][iic].技４ == 0 && キャラ == 1325)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 751);
	}
	if (fg == 0)
	{
		選択肢(999, "別のにする");
		rr = 選択(true, 0, 0);
		if (rr != 999 && rr != 0)
		{
			Ｃ技能変更(rr, 4, iic, 999, 0);
			return 1;
		}
		return 0;
	}
	return ck;
}

lint 技能５処理(lint fg, lint iic)
{
	lint ck = 0;
	lint rr = 0;
	lint ii = 0;
	ii = ◆Ｐｉｉ;
	lint キャラ = 0;
	キャラ = gs[ii][iic].番号;
	if (fg == 1 && gs[ii][iic].技能 == 107)
	{
		return 0;
	}
	if (fg == 1 && gs[ii][iic].技能 == 100)
	{
		return 0;
	}
	if (fg == 1 && gs[ii][iic].技能 == 128)
	{
		return 0;
	}
	if (fg == 1 && gs[ii][iic].技能 == 112)
	{
		return 0;
	}
	if (fg == 1 && gs[ii][iic].技能 == 104)
	{
		return 0;
	}
	if (fg == 0)
	{
		if (gs[ii][iic].技能 != 0)
		{
			選択肢(0, 行動名前[gs[ii][iic].技能] + "を変更");
		}
		else
		{
			選択肢(0, "技能を取得");
		}
	}
	if (キャラ == 1300)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 124);
	}
	ck = 能力ＵＰ技能(fg, ii, iic, 119);
	ck = 能力ＵＰ技能(fg, ii, iic, 120);
	ck = 能力ＵＰ技能(fg, ii, iic, 121);
	ck = 能力ＵＰ技能(fg, ii, iic, 122);
	ck = 能力ＵＰ技能(fg, ii, iic, 111);
	ck = 能力ＵＰ技能(fg, ii, iic, 117);
	ck = 能力ＵＰ技能(fg, ii, iic, 137);
	if (gs[ii][iic].技能 == 0 && ◆予備０８ == 0)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 149);
	}
	if (gs[ii][iic].兵種 == 3 || gs[ii][iic].兵種 == 63)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 127);
	}
	if (gs[ii][iic].兵種 == 6 || gs[ii][iic].兵種 == 66)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 146);
	}
	if (gs[ii][iic].兵種 == 6 || gs[ii][iic].兵種 == 66)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 213);
	}
	if (gs[ii][iic].兵種 == 9 || gs[ii][iic].兵種 == 60)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 123);
	}
	if (gs[ii][iic].兵種 == 9 || gs[ii][iic].兵種 == 60)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 214);
	}
	if (gs[ii][iic].兵種 != 3)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 147);
	}
	if (◆◆ == 1)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 113);
	}
	if (◆◆ == 1)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 114);
	}
	if (◆◆ == 2)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 115);
	}
	if (◆◆ == 2)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 116);
	}
	if (◆◆ == 3)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 118);
	}
	if (◆◆ == 3 && (gs[ii][iic].兵種 == 3 || gs[ii][iic].兵種 == 1 || gs[ii][iic].兵種 == 7))
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 108);
	}
	if (◆◆ == 4)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 125);
	}
	if (◆◆ == 4)
	{
		ck = 能力ＵＰ技能(fg, ii, iic, 136);
	}
	if (fg == 0)
	{
		選択肢(999, "別のにする");
		rr = 選択(true, 0, 0);
		if (rr != 999 && rr != 0)
		{
			Ｃ技能変更(rr, 5, iic, 999, 0);
			return 1;
		}
		return 0;
	}
	return ck;
}

void ゲーム進行情報()
{
	字枠(1);
	文字サイズ(12);
	文字色(0, 0, 200);
	'ゲームクリア履歴情報　　・（まだ未達成）　　　●（達成）' R;
	'　　この画面は商品発売後にクリア記録を確認したいという要望が多くありましたので追加した物です' R;
	'■■ルート達成■■' R;
	CKK(1);
	'正史ルート　' CKK(2);
	'謙信ルート　' CKK(3);
	'五十六ルート　' CKK(4);
	'蘭ルート　' CKC(101);
	'★　　　' CKC(102);
	'★★　　' CKC(103);
	'★★★★★' R;
	CKC(110);
	'全国編　　';
	if (ＧＳＡＶＥ[111] == 1)
	{
		CKC(111);
		'文禄の役　';
	}
	if (ＧＳＡＶＥ[112] == 1)
	{
		CKC(112);
		'日露戦争　';
	}
	if (ＧＳＡＶＥ[104] == 0)
	{
		ＧＳＡＶＥ[104] = 999;
	}
	R();
	文字色(255, 0, 100);
	'最短クリアターン（' N(ＧＳＡＶＥ[104], -1, 0);
	'）　エロ日記記録（' N(ＧＳＡＶＥ[105], -1, 0);
	'名）' R;
	文字色(0, 0, 200);
	'■■キャラクリ■■' R;
	CKC(1);
	'鈴女　　　　　　' CKC(2);
	'見当かなみ　　　' CKC(3);
	'マリア　　　　　' CKC(4);
	'レイラ　　　　　' CKC(5);
	'リズナ　　　　　' CKC(6);
	'ウルザ　　　　　' CKC(7);
	'マジック　　　　' R;
	CKC(8);
	'乱丸　　　　　　' CKC(9);
	'阿樹姫　　　　　' CKC(10);
	'柚原柚美　　　　' CKC(11);
	'雪姫　　　　　　' CKC(12);
	'戦姫　　　　　　' CKC(13);
	'沖田のぞみ　　　' CKC(14);
	'大道寺小松　　　' R;
	CKC(15);
	'毛利てる　　　　' CKC(16);
	'吉川きく　　　　' CKC(17);
	'小早川ちぬ　　　' CKC(18);
	'山中子鹿　　　　' CKC(19);
	'直江愛　　　　　' CKC(20);
	'川之江美禰　　　' CKC(21);
	'川之江譲　　　　' R;
	CKC(22);
	'名取　　　　　　' CKC(23);
	'玉籤風華　　　　' CKC(24);
	'アギレダ　　　　' CKC(25);
	'野菊　　　　　　' CKC(26);
	'折女　　　　　　' CKC(27);
	'ノワール　　　　' CKC(28);
	'お町　　　　　　' R;
	CKC(29);
	'小川健太郎　　　' CKC(30);
	'柴田勝家　　　　' CKC(31);
	'足利超神　　　　' CKC(32);
	'犬飼　　　　　　' CKC(33);
	'原昌示　　　　　' CKC(34);
	'種子島重彦　　　' CKC(35);
	'朝倉義景　　　　' R;
	CKC(36);
	'発禁堕山　　　　' CKC(37);
	'徳川家康　　　　' CKC(38);
	'毛利元就　　　　' CKC(39);
	'真田透琳　　　　' CKC(40);
	'山県昌景　　　　' CKC(41);
	'馬場彰炎　　　　' CKC(42);
	'高坂義風　　　　' R;
	CKC(43);
	'坂本龍馬　　　　' CKC(44);
	'ゴン　　　　　　' CKC(45);
	'明石風丸　　　　' CKC(46);
	'性眼　　　　　　' CKC(47);
	'言裏　　　　　　' CKC(48);
	'島津ヨシヒサ　　' CKC(49);
	'島津カズヒサ　　' R;
	CKC(50);
	'島津トシヒサ　　' CKC(51);
	'島津イエヒサ　　' CKC(52);
	'独眼流政宗　　　' CKC(53);
	'一休　　　　　　' CKC(54);
	'井伊直政　　　　' CKC(55);
	'本多忠勝　　　　' CKC(56);
	'榊原康政　　　　' R;
	CKC(57);
	'酒井忠次　　　　' CKC(58);
	'服部半蔵　　　　' CKC(59);
	'北条早雲　　　　' CKC(60);
	'南条蘭　　　　　' CKC(61);
	'月光　　　　　　' CKC(62);
	'　　　　　　　　' CKC(63);
	'　　　　　　　　' R;
	R();
	文字色(0, 0, 200);
	'■■各種特殊状況発生チェック■■　※これらデータは、ゲームクリア時に登録されます' R;
	CKC(200);
	'足利陥落　　　　' CKC(201);
	'足利降伏　　　　' CKC(202);
	'　　　　　　　　' CKC(203);
	'　　　　　　　　' CKC(204);
	'　　　　　　　　' CKC(205);
	'まむし油田　　　' CKC(206);
	'竜宮城　　　　　' R;
	CKC(210);
	'伊賀陥落　　　　' CKC(211);
	'伊賀復興　　　　' CKC(212);
	'伊賀降伏　　　　' CKC(213);
	'　　　　　　　　' CKC(214);
	'　　　　　　　　' CKC(215);
	'　　　　　　　　' CKC(216);
	'平城京　　　　　' R;
	CKC(220);
	'原陥落　　　　　' CKC(221);
	'原降伏　　　　　' CKC(222);
	'餅漬の切腹　　　' CKC(223);
	'　　　　　　　　' CKC(224);
	'　　　　　　　　' CKC(225);
	'　　　　　　　　' CKC(226);
	'真珠迷宮　　　' R;
	CKC(230);
	'種子島陥落　　　' CKC(231);
	'種子島降伏　　　' CKC(232);
	'鉄砲隊の購入　　' CKC(233);
	'　　　　　　　　' CKC(234);
	'　　　　　　　　' CKC(235);
	'虎の穴　　　　　' CKC(236);
	'丹波鉱山　　　　' R;
	CKC(240);
	'浅井朝倉陥落　　' CKC(241);
	'浅井朝倉降伏　　' CKC(242);
	'雪姫の末路　　　' CKC(243);
	'　　　　　　　　' CKC(244);
	'　　　　　　　　' CKC(245);
	'　　　　　　　　' CKC(246);
	'勉強穴　　　　　' R;
	CKC(250);
	'徳川陥落　　　　' CKC(251);
	'徳川降伏　　　　' CKC(252);
	'徳川反乱　　　　' CKC(253);
	'配下家康を始末　' CKC(254);
	'　　　　　　　　' CKC(255);
	'味噌カツ迷宮　　' CKC(256);
	'徳川埋蔵金　　　' R;
	CKC(260);
	'今川陥落　　　　' CKC(261);
	'上洛阻止　　　　' CKC(262);
	'あんこエロ　　　' CKC(263);
	'　　　　　　　　' CKC(264);
	'　　　　　　　　' CKC(265);
	'　　　　　　　　' CKC(266);
	'カ・グヤを空へ　' R;
	CKC(270);
	'北条陥落（蘭）　' CKC(271);
	'北条陥落（早雲）' CKC(272);
	'北条陥落（マサ）' CKC(273);
	'捕虜小松陵辱　　' CKC(274);
	'　　　　　　　　' CKC(275);
	'里見帝国　　　　' CKC(276);
	'魔界都市　　　　' R;
	CKC(280);
	'毛利陥落（人）　' CKC(281);
	'毛利陥落（呪）　' CKC(282);
	'大決戦　　　　　' CKC(283);
	'三姉妹エロ　　　' CKC(284);
	'ビキニ観賞　　　' CKC(285);
	'黄泉平坂　　　　' CKC(286);
	'赤壁迷宮　　　　' R;
	CKC(290);
	'上杉陥落　　　　' CKC(291);
	'上杉陥落（県政）' CKC(292);
	'謙信陵辱　　　　' CKC(293);
	'　　　　　　　　' CKC(294);
	'　　　　　　　　' CKC(295);
	'佐渡金山　　　　' CKC(296);
	'ＳＭ迷宮　　　　' R;
	CKC(300);
	'武田陥落　　　　' CKC(301);
	'信玄暗殺計画　　' CKC(302);
	'　　　　　　　　' CKC(303);
	'　　　　　　　　' CKC(304);
	'　　　　　　　　' CKC(305);
	'　　　　　　　　' CKC(306);
	'貝塚　　　　　　' R;
	CKC(310);
	'タクガ陥落　　　' CKC(311);
	'死国門封鎖　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' R;
	CKC(320);
	'巫女機関陥落　　' CKC(321);
	'オロチ退治　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' R;
	CKC(330);
	'明石陥落　　　　' CKC(331);
	'明石降伏　　　　' CKC(332);
	'安倍の死　　　　' CKC(333);
	'朝比奈の死　　　' CKC(334);
	'ヒゲ　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' R;
	CKC(340);
	'天志教陥落　　　' CKC(341);
	'天志教降伏　　　' CKC(342);
	'　　　　　　　　' CKC(343);
	'　　　　　　　　' CKC(344);
	'　　　　　　　　' CKC(345);
	'蜜柑農園　　　　' CKC(346);
	'梅田地下街　　　' R;
	CKC(350);
	'島津陥落　　　　' CKC(351);
	'島津陥落（嬲）　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' CKC(0);
	'　　　　　　　　' R;
	CKC(360);
	'独眼流陥落　　　' CKC(361);
	'　　　　　　　　' CKC(362);
	'　　　　　　　　' CKC(363);
	'　　　　　　　　' CKC(364);
	'　　　　　　　　' CKC(365);
	'　　　　　　　　' CKC(366);
	'６大秘宝　　　　' R;
	文字色(0, 0, 200);
	'■■クリア時、仲間にいた武将■■' R;
	CKC(400);
	'カスミ　　　　　' CKC(401);
	'前田利家　　　　' CKC(402);
	'前田慶次　　　　' CKC(403);
	'明智光秀　　　　' CKC(404);
	'丹羽長秀　　　　' CKC(405);
	'ハチスカ棟梁　　' CKC(406);
	'滝川一益　　　　' R;
	CKC(407);
	'山口多聞　　　　' CKC(408);
	'井上成美　　　　' CKC(409);
	'聖徳太子　　　　' CKC(410);
	'勝子　　　　　　' CKC(411);
	'虎子　　　　　　' CKC(412);
	'本多正信　　　　' CKC(413);
	'ゴエモン　　　　' R;
	CKC(414);
	'相馬疾風　　　　' CKC(415);
	'卑弥呼　　　　　' CKC(416);
	'ﾓｽｸﾜ冬将軍　　　' CKC(417);
	'油娘道三　　　　' CKC(418);
	'公家京子　　　　' CKC(419);
	'公家強子　　　　' CKC(420);
	'説得法師　　　　' R;
	CKC(421);
	'ガラシャ　　　　' CKC(422);
	'松尾芭蕉　　　　' CKC(423);
	'足利義輝　　　　' CKC(424);
	'淀君５歳　　　　' CKC(425);
	'上泉信綱　　　　' CKC(426);
	'塚原卜伝　　　　' CKC(427);
	'色部エロ子　　　' R;
	A();
	文字サイズ(-1);
	文字色(-1, -1, -1);
}

void CKK(lint no)
{
	if (ＧＭ[no] == 0)
	{
		文字色(0, 0, 0);
		'・';
	}
	if (ＧＭ[no] == 1)
	{
		文字色(255, 0, 100);
		'●';
	}
}

void CKC(lint no)
{
	if (ＧＳＡＶＥ[no] == 0)
	{
		文字色(0, 0, 0);
		'・';
	}
	if (ＧＳＡＶＥ[no] == 1)
	{
		文字色(255, 0, 100);
		'●';
	}
}

void 完ＧＳＡＶＥ()
{
	if (ＧＦ[84] == 1)
	{
		ＧＳＡＶＥ[101] = 1;
	}
	if (ＧＦ[84] == 2)
	{
		ＧＳＡＶＥ[102] = 1;
	}
	if (ＧＦ[84] == 3)
	{
		ＧＳＡＶＥ[103] = 1;
	}
	if (EV("足利／陥落", -2147483648) == true)
	{
		ＧＳＡＶＥ[200] = 1;
	}
	if (EV("足利／降伏受け入れ", -2147483648) == true)
	{
		ＧＳＡＶＥ[201] = 1;
	}
	if (EV("美濃／まむし油田／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[205] = 1;
	}
	if (EV("竜宮城エロ３", -2147483648) == true)
	{
		ＧＳＡＶＥ[206] = 1;
	}
	if (EV("伊賀／陥落", -2147483648) == true)
	{
		ＧＳＡＶＥ[210] = 1;
	}
	if (EV("伊賀／復活", -2147483648) == true)
	{
		ＧＳＡＶＥ[211] = 1;
	}
	if (EV("伊賀／降伏受け入れ", -2147483648) == true)
	{
		ＧＳＡＶＥ[212] = 1;
	}
	if (EV("大和／平城京／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[216] = 1;
	}
	if (EV("神原／陥落Ａ", -2147483648) == true)
	{
		ＧＳＡＶＥ[220] = 1;
	}
	if (EV("神原／降伏受け入れ", -2147483648) == true)
	{
		ＧＳＡＶＥ[221] = 1;
	}
	if (EV("神原／餅漬", -2147483648) == true)
	{
		ＧＳＡＶＥ[222] = 1;
	}
	if (EV("伊勢／真珠迷宮／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[226] = 1;
	}
	if (EV("種子島／陥落", -2147483648) == true)
	{
		ＧＳＡＶＥ[230] = 1;
	}
	if (EV("種子島／降伏受け入れ", -2147483648) == true)
	{
		ＧＳＡＶＥ[231] = 1;
	}
	if (EV("種子島／織田に販売／買う", -2147483648) == true)
	{
		ＧＳＡＶＥ[232] = 1;
	}
	if (EV("姫路／虎の穴／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[235] = 1;
	}
	if (EV("丹波／丹波鉱山／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[236] = 1;
	}
	if (EV("ＡＡ／陥落", -2147483648) == true)
	{
		ＧＳＡＶＥ[240] = 1;
	}
	if (EV("ＡＡ／降伏受け入れ", -2147483648) == true)
	{
		ＧＳＡＶＥ[241] = 1;
	}
	if (EV("雪姫／その後", -2147483648) == true)
	{
		ＧＳＡＶＥ[242] = 1;
	}
	if (EV("テキサス／お勉強穴／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[246] = 1;
	}
	if (EV("徳川／陥落Ａ", -2147483648) == true || EV("徳川／陥落Ａ２", -2147483648) == true)
	{
		ＧＳＡＶＥ[250] = 1;
	}
	if (EV("徳川／降伏受け入れ", -2147483648) == true)
	{
		ＧＳＡＶＥ[251] = 1;
	}
	if (EV("徳川／反旗", -2147483648) == true || EV("徳川／織田に宣戦布告", -2147483648) == true)
	{
		ＧＳＡＶＥ[252] = 1;
	}
	if (EV("徳川／支配下５", -2147483648) == true)
	{
		ＧＳＡＶＥ[253] = 1;
	}
	if (EV("迷宮／味噌カツ迷宮／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[255] = 1;
	}
	if (EV("三河／徳川埋蔵金／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[256] = 1;
	}
	if (EV("今川／陥落／情報無し", -2147483648) == true || EV("今川／陥落／情報有りＡ", -2147483648) == true)
	{
		ＧＳＡＶＥ[260] = 1;
	}
	if (EV("今川／上洛計画３Ｂ", -2147483648) == true)
	{
		ＧＳＡＶＥ[261] = 1;
	}
	if (EV("あんこ／奴隷大奥１回目", -2147483648) == true)
	{
		ＧＳＡＶＥ[262] = 1;
	}
	if (EV("三河／宇宙人３", -2147483648) == true)
	{
		ＧＳＡＶＥ[266] = 1;
	}
	if (EV("北条／陥落／蘭健在", -2147483648) == true)
	{
		ＧＳＡＶＥ[270] = 1;
	}
	if (EV("北条／陥落／早雲健在", -2147483648) == true)
	{
		ＧＳＡＶＥ[271] = 1;
	}
	if (EV("北条／陥落", -2147483648) == true)
	{
		ＧＳＡＶＥ[272] = 1;
	}
	if (EV("小松／陵辱", -2147483648) == true)
	{
		ＧＳＡＶＥ[273] = 1;
	}
	if (EV("上総／里見帝国／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[275] = 1;
	}
	if (EV("江戸／魔界都市／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[276] = 1;
	}
	if (EV("毛利／陥落Ａ", -2147483648) == true)
	{
		ＧＳＡＶＥ[280] = 1;
	}
	if (EV("毛利／陥落／呪い付きＡ", -2147483648) == true)
	{
		ＧＳＡＶＥ[281] = 1;
	}
	if (EV("毛利／大決戦Ｂ", -2147483648) == true)
	{
		ＧＳＡＶＥ[282] = 1;
	}
	if (EV("毛利姉妹４Ｐ", -2147483648) == true)
	{
		ＧＳＡＶＥ[283] = 1;
	}
	if (EV("戦艦長門／ビキニ観賞／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[284] = 1;
	}
	if (EV("出雲／黄泉平坂／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[285] = 1;
	}
	if (EV("赤ヘル／赤壁迷宮／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[286] = 1;
	}
	if (EV("上杉／陥落", -2147483648) == true)
	{
		ＧＳＡＶＥ[290] = 1;
	}
	if (EV("上杉／陥落／謙信無し", -2147483648) == true)
	{
		ＧＳＡＶＥ[291] = 1;
	}
	if (EV("上杉／反乱軍その後", -2147483648) == true)
	{
		ＧＳＡＶＥ[292] = 1;
	}
	if (EV("佐渡／佐渡金山／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[295] = 1;
	}
	if (EV("ＭＡＺＯ／ＳＭ迷宮／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[296] = 1;
	}
	if (EV("武田／陥落１", -2147483648) == true)
	{
		ＧＳＡＶＥ[300] = 1;
	}
	if (EV("武田／信玄の居場所", -2147483648) == true)
	{
		ＧＳＡＶＥ[301] = 1;
	}
	if (EV("貝／貝塚／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[306] = 1;
	}
	if (EV("タクガ／陥落Ａ", -2147483648) == true)
	{
		ＧＳＡＶＥ[310] = 1;
	}
	if (EV("タクガ／死国門封鎖Ｂ", -2147483648) == true)
	{
		ＧＳＡＶＥ[311] = 1;
	}
	if (EV("巫女／陥落", -2147483648) == true)
	{
		ＧＳＡＶＥ[320] = 1;
	}
	if (EV("オロチと対決Ｄ", -2147483648) == true)
	{
		ＧＳＡＶＥ[321] = 1;
	}
	if (EV("明石／陥落", -2147483648) == true)
	{
		ＧＳＡＶＥ[330] = 1;
	}
	if (EV("明石／降伏受け入れ", -2147483648) == true)
	{
		ＧＳＡＶＥ[331] = 1;
	}
	if (EV("明石／安部平三の死", -2147483648) == true)
	{
		ＧＳＡＶＥ[332] = 1;
	}
	if (EV("明石／朝比奈百万の死", -2147483648) == true)
	{
		ＧＳＡＶＥ[333] = 1;
	}
	if (EV("明石／陥落Ｄ", -2147483648) == true)
	{
		ＧＳＡＶＥ[334] = 1;
	}
	if (EV("天志教／陥落／信長", -2147483648) == true || EV("天志教／陥落", -2147483648) == true)
	{
		ＧＳＡＶＥ[340] = 1;
	}
	if (EV("天志教／降伏受け入れ", -2147483648) == true)
	{
		ＧＳＡＶＥ[341] = 1;
	}
	if (EV("蜜柑／蜜柑農園／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[345] = 1;
	}
	if (EV("なにわ／梅田地下街／クリア", -2147483648) == true)
	{
		ＧＳＡＶＥ[346] = 1;
	}
	if (EV("島津／陥落Ｂ", -2147483648) == true)
	{
		ＧＳＡＶＥ[350] = 1;
	}
	if (EV("島津／陥落Ｃ", -2147483648) == true)
	{
		ＧＳＡＶＥ[351] = 1;
	}
	if (EV("伊達／ラストバトルＡ", -2147483648) == true)
	{
		ＧＳＡＶＥ[360] = 1;
	}
	if (EV("６大秘宝", -2147483648) == true)
	{
		ＧＳＡＶＥ[366] = 1;
	}
	if (ＧＦ[369] == 0)
	{
		ＧＳＡＶＥ[702] = 1;
	}
	if (ＧＦ[369] == 1)
	{
		ＧＳＡＶＥ[703] = 1;
	}
	if (ＧＦ[369] == 2)
	{
		ＧＳＡＶＥ[704] = 1;
	}
	if (ＧＦ[369] == 3)
	{
		ＧＳＡＶＥ[705] = 1;
	}
	if (Ｃ確認(1145, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[400] = 1;
	}
	if (Ｃ確認(1116, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[401] = 1;
	}
	if (Ｃ確認(1117, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[402] = 1;
	}
	if (Ｃ確認(1115, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[403] = 1;
	}
	if (Ｃ確認(1114, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[404] = 1;
	}
	if (Ｃ確認(1154, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[405] = 1;
	}
	if (Ｃ確認(1155, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[406] = 1;
	}
	if (Ｃ確認(1122, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[407] = 1;
	}
	if (Ｃ確認(1123, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[408] = 1;
	}
	if (Ｃ確認(1172, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[409] = 1;
	}
	if (Ｃ確認(1108, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[410] = 1;
	}
	if (Ｃ確認(1109, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[411] = 1;
	}
	if (Ｃ確認(1047, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[412] = 1;
	}
	if (Ｃ確認(1147, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[413] = 1;
	}
	if (Ｃ確認(1148, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[414] = 1;
	}
	if (Ｃ確認(1169, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[415] = 1;
	}
	if (Ｃ確認(1170, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[416] = 1;
	}
	if (Ｃ確認(1198, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[417] = 1;
	}
	if (Ｃ確認(1163, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[418] = 1;
	}
	if (Ｃ確認(1164, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[419] = 1;
	}
	if (Ｃ確認(1177, 0, 0, 0) == 1)
	{
		ＧＳＡＶＥ[420] = 1;
	}
	if (Ｃ確認Ｍ("ガラシャ", 999) == 1)
	{
		ＧＳＡＶＥ[421] = 1;
	}
	if (Ｃ確認Ｍ("松尾芭蕉", 999) == 1)
	{
		ＧＳＡＶＥ[422] = 1;
	}
	if (Ｃ確認Ｍ("足利義輝", 999) == 1)
	{
		ＧＳＡＶＥ[423] = 1;
	}
	if (Ｃ確認Ｍ("淀君５歳", 999) == 1)
	{
		ＧＳＡＶＥ[424] = 1;
	}
	if (Ｃ確認Ｍ("上泉信綱", 999) == 1)
	{
		ＧＳＡＶＥ[425] = 1;
	}
	if (Ｃ確認Ｍ("塚原卜伝", 999) == 1)
	{
		ＧＳＡＶＥ[426] = 1;
	}
	if (Ｃ確認Ｍ("色部エロ子", 999) == 1)
	{
		ＧＳＡＶＥ[427] = 1;
	}
	if (ＧＳＡＶＥ[104] == 0)
	{
		ＧＳＡＶＥ[104] = 999;
	}
	if (ＧＳＡＶＥ[104] > ◆ターン)
	{
		ＧＳＡＶＥ[104] = ◆ターン;
	}
	if (ＧＦ[143] > ＧＳＡＶＥ[105])
	{
		ＧＳＡＶＥ[105] = ＧＦ[143];
	}
	lint item = -1;
	for (item = 91; item < 181; item++)
	{
		if (アイテム確認(item, 0, 999) > 0)
		{
			ＧＳＡＶＥ[500 + item] = 1;
		}
	}
}

