void 味方勢力ターン()
{
	勢力キャラ行動初期化(◆Ｐｉｉ);
	勢力隣接状況再計算(◆Ｐｉｉ);
	if (◆予備０１ == 0)
	{
		◆コマンド実行数 = ◆コマンド実行数最大;
		◆ターン勢力 = ◆Ｐｉｉ;
		織田ＴＯＰ();
	}
	if (◆予備０１ == 1)
	{
		◆コマンド実行数 = 2;
		◆ターン勢力 = ◆Ｐｉｉ;
		織田ＴＯＰ／全国();
	}
	jump 味方勢力ターン／ループ;
}

#味方勢力ターン／ループ()
{
	lint rr = 0;
	lint ii = 0;
	lint iim = 0;
	lint ii2 = 0;
	lint aa = 0;
	lint iic = 0;
	ii = ◆Ｐｉｉ;
	if (◆予備０１ == 0)
	{
		iim = Ｐ地域／場所選択();
		if (iim == 0)
		{
			iic = アイテム保有者番号(86);
			if (iic != 0)
			{
				合戦／独立部隊(iic);
			}
			iic = アイテム保有者番号(87);
			if (iic != 0)
			{
				合戦／独立部隊(iic);
			}
			iic = アイテム保有者番号(88);
			if (iic != 0)
			{
				合戦／独立部隊(iic);
			}
			iic = アイテム保有者番号(89);
			if (iic != 0)
			{
				合戦／独立部隊(iic);
			}
			iic = アイテム保有者番号(90);
			if (iic != 0)
			{
				合戦／独立部隊(iic);
			}
			jump メインループ／終了;
		}
		ii2 = 国[iim].支配国;
		rr = Ｐ地域／コマンド();
		織田選択グループ(rr, iim);
		◆コマンド実行数--;
		aa = アイテム保有者番号(50);
		if (ＧＦ[25] == 0 && aa != 0 && gs[ii][aa].行動 == 1)
		{
			ＧＦ[25] = 1;
			gs[ii][aa].行動 = 0;
			汎用１(aa, 999);
			ＳＭ(5050, 0, 0);
		}
	}
	if (◆予備０１ == 1)
	{
		iim = Ｐ地域／場所選択();
		if (iim == 0)
		{
			jump 全国版メイン２;
		}
		ii2 = 国[iim].支配国;
		rr = Ｐ地域／コマンド();
		織田選択グループ(rr, iim);
		◆コマンド実行数--;
	}
	jump 味方勢力ターン／ループ;
}

void 勢力スタート(lint ii2)
{
	if (勢力[ii2].活動中 == 1)
	{
		return;
	}
	勢力[ii2].活動中 = 1;
	if (ii2 == 13)
	{
		ＡＣ(1025, 1);
		ＡＣ(1027, 1);
		ＡＣ(1026, 1);
	}
}

lint 地域／迷宮探索(lint iim)
{
	lint rr = 0;
	lint ra = 0;
	lint aa = 0;
	lint loop = 0;
	lint 平均数 = 0;
	lint iic = 0;
	lint ii2 = 0;
	lint ii = 0;
	lint aa1 = 0;
	lint aa2 = 0;
	lint bb = 0;
	lint 特殊戦闘 = 0;
	lint exit = 0;
	lint 今回踏破階数 = 0;
	ＧＦ[100] = 0;
	ＧＦ[373] = 0;
	ＧＦ[394] = RAND(30);
	ＧＦ[395] = 0;
	ＧＦ[396] = 0;
	国[iim].迷宮深度 = 国[iim].迷宮クリア;
	if (国[iim].迷宮深度 >= 国[iim].迷宮階数)
	{
		国[iim].迷宮深度 = 国[iim].迷宮階数 - 1;
	}
	for (; ; )
	{
		if (◆予備０８ == 0 && iim == 18 && EV("大和／平城京／初", -2147483648) == false && キャラ確認(1001, 0, 0, 0) == 1)
		{
			大和／平城京／初();
			break;
		}
		if (◆予備０８ == 0 && iim == 23 && ＧＦ[7] == 0 && EV("元就／妖怪の秘密／竜馬", -2147483648) == true && キャラ確認(1031, 1001, 0, 0) == 1)
		{
			出雲／黄泉平坂／だいだーら／入り口();
			break;
		}
		if (◆予備０８ == 0 && iim == 13 && EV("早雲／石油穴で発見Ａ", -2147483648) == false && EV("蘭／約束", -2147483648) == true && キャラ確認(1051, 0, 0, 0) == 1)
		{
			美濃／まむし油田／早雲探し();
			break;
		}
		if (◆予備０８ == 1 && iim == 20 && EV("天界／アマテラス救出", -2147483648) == true && EV("天界／突入１", -2147483648) == false && EV("ヘルマン／マルグリッド迷宮天界", -2147483648) == false)
		{
			ヘルマン／マルグリッド迷宮天界();
			break;
		}
		迷宮前／汎用();
		break;
	}
	◆迷宮戦闘 = 1;
	ＦＰ初期化();
	rr = Ｐ武将／参加選択(5, iim, 0, 0, 9, 10357);
	if (rr == 0)
	{
		◆迷宮戦闘 = 0;
		return 1;
	}
	ＧＦ[101]--;
	for (; ; )
	{
		特殊戦闘 = 0;
		if (iim == 23 && ＧＦ[7] == 0 && EV("元就／妖怪の秘密／竜馬", -2147483648) == true && 国[iim].迷宮深度 > 5 && キャラ確認(1031, 0, 0, 0) == 1)
		{
			特殊戦闘 = 1;
		}
		◆特定戦闘 = 0;
		迷宮／モンスター(iim, 国[iim].迷宮深度 + 1, 特殊戦闘);
		◆戦闘タイプ = 1;
		◆迷宮戦闘 = 1;
		◆戦場タイプ = 7;
		◆戦場国タイプ = iim;
		◆戦場対戦国 = 0;
		◆攻防タイプ = 3;
		◆戦闘時間制限 = 1;
		if (◆予備０８ == 1 && RAND(10) >= 1 && 今回踏破階数 >= 0)
		{
			rr = 1;
		}
		else
		{
			rr = 合戦処理(3);
		}
		◆戦闘タイプ = 0;
		◆特定戦闘 = 0;
		◆戦闘時間制限 = 0;
		for (iic = 11; iic < 17; iic++)
		{
			gs[ii][iic].迷宮技数 = gs[ii][iic].現在技数;
		}
		exit = 0;
		if (rr == 1)
		{
			今回踏破階数++;
			ＧＦ[28]++;
			ＧＦ[396] = 今回踏破階数;
			国[iim].迷宮深度++;
			if (国[iim].迷宮深度 > 国[iim].迷宮階数)
			{
				国[iim].迷宮深度 = 国[iim].迷宮階数;
			}
			exit = 迷宮／勝利後(iim, 特殊戦闘);
			if (exit == 0)
			{
				rr = Ｐ迷宮／選択(iim);
				if (rr != 1)
				{
					if (◆予備０８ == 0)
					{
						ra = RAND(7);
						汎用１(乱ＦＰ取得(), 0);
						if (ra == 1)
						{
							ＳＭ(5019, 12, 0);
						}
						if (ra == 2)
						{
							ＳＭ(5019, 13, 0);
						}
						if (ra == 3)
						{
							ＳＭ(5019, 14, 0);
						}
						if (ra == 4)
						{
							ＳＭ(5019, 15, 0);
						}
						if (ra == 5)
						{
							ＳＭ(5019, 8, 0);
						}
						if (ra == 6)
						{
							ＳＭ(5019, 9, 0);
						}
						if (ra == 7)
						{
							ＳＭ(5019, 11, 0);
						}
					}
					aa = 今回踏破階数 / 3;
					if (aa == 0)
					{
						aa = 1;
					}
					if (国[iim].迷宮階数 > 国[iim].迷宮クリア)
					{
						国[iim].迷宮クリア += 1;
					}
					if (◆予備０８ == 1)
					{
						国[iim].迷宮クリア += 今回踏破階数 - 1;
					}
					for (; ; )
					{
						if (◆予備０８ == 0 && iim == 13 && EV("早雲／石油穴で発見Ａ", -2147483648) == false && EV("蘭／約束", -2147483648) == true && キャラ確認(1051, 0, 0, 0) == 1)
						{
							迷宮／脱出／早雲探し();
							break;
						}
						迷宮内／脱出();
						break;
					}
					exit = 1;
				}
			}
		}
		if (rr == 2)
		{
			迷宮内／脱出();
			宝箱_最終廃棄処理();
			exit = 1;
		}
		if (exit != 0)
		{
			if (exit == 1)
			{
				汎用１(乱ＦＰ取得(), 0);
				ＧＦ[373] = 0;
				if (今回踏破階数 > 2 && ◆予備０８ == 0)
				{
					if (今回踏破階数 > 4)
					{
						ＳＭ(5019, 9, 0);
					}
					else
					{
						ＳＭ(5019, 8, 0);
					}
				}
				if (◆予備０８ == 1)
				{
					宝箱_最終入手処理();
				}
			}
			ＦＰ戻し();
			if (exit == 2)
			{
				ＳＭ(5060, 0, 0);
				for (iic = 1; iic < 32; iic++)
				{
					if (gs[◆Ｐｉｉ][iic].番号 != 0)
					{
						aa = ＣＳレベル加算(1, iic, 999);
					}
				}
			}
			◆迷宮戦闘 = 0;
			return 1;
		}
	}
	◆迷宮戦闘 = 0;
	return 0;
}

lint 迷宮／勝利後(lint iim, lint 特殊戦闘)
{
	lint aa = 0;
	lint aa1 = 0;
	lint rr = 0;
	lint iic = 0;
	汎用１(乱ＦＰ取得(), 0);
	if (◆予備０８ == 1)
	{
		if (iim == 5)
		{
			if (国[iim].迷宮階数 == 10 || 国[iim].迷宮階数 == 20 || 国[iim].迷宮階数 == 30 || 国[iim].迷宮階数 == 40 || 国[iim].迷宮階数 == 50 || 国[iim].迷宮階数 == 60)
			{
				ＳＭ(5060, 0, 0);
				for (iic = 1; iic < 32; iic++)
				{
					if (gs[◆Ｐｉｉ][iic].番号 != 0)
					{
						int aa = ＣＳレベル加算(1, iic, 999);
					}
				}
			}
		}
		if (iim == 12 && 国[iim].迷宮深度 == 205 && EV("二部ラストバトル／回想１", -2147483648) == false)
		{
			二部ラストバトル／回想１();
		}
		if (iim == 12 && 国[iim].迷宮深度 == 210 && EV("二部ラストバトル／回想２", -2147483648) == false)
		{
			二部ラストバトル／回想２();
		}
		if (iim == 12 && 国[iim].迷宮深度 == 215 && EV("二部ラストバトル／回想３", -2147483648) == false)
		{
			二部ラストバトル／回想３();
		}
		if (iim == 20 && ＦＰ確認(1002, 0, 0, 0) == 1 && EV("ヘルマン／マルグリッド神の扉発見", -2147483648) == false && EV("天界／突入１", -2147483648) == false && EV("天界／アマテラス事情を聞く", -2147483648) == false)
		{
			ヘルマン／マルグリッド神の扉発見();
		}
		if (国[iim].迷宮深度 == 国[iim].迷宮階数 && 国[iim].迷宮クリア != 国[iim].迷宮深度)
		{
			if (◆予備０８ == 1)
			{
				宝箱_最終入手処理();
			}
			国[iim].迷宮クリア = 国[iim].迷宮深度;
			if (iim == 1 && EV("九州／ジャブロー迷宮完了", -2147483648) == false)
			{
				九州／ジャブロー迷宮完了();
			}
			if (iim == 2 && EV("本州／大蛇の穴跡地完了", -2147483648) == false)
			{
				本州／大蛇の穴跡地完了();
				ＳＭ(5000, 5, 0);
			}
			if (iim == 3 && EV("奥州／黄金郷完了", -2147483648) == false)
			{
				奥州／黄金郷完了();
			}
			if (iim == 4 && EV("火星／火星迷宮完了", -2147483648) == false)
			{
				火星／火星迷宮完了();
			}
			if (iim == 5 && EV("ラグナード迷宮／完了", -2147483648) == false)
			{
				ラグナード迷宮／完了();
				敵ＦＰ強制登録(1090, 1088, 1020, 1022, 1099, 1089);
				gs[0][25].Ｓレベル = 200;
				gs[0][25].早さ基礎値 = 7;
				◆特定戦闘 = 4;
				rr = イベント戦闘処理(0, 0, 0);
				if (rr == 0)
				{
					戯骸／ランスゲット();
					ＳＭ(5001, 5, 0);
				}
				if (rr != 0)
				{
					ＧＳＡＶＥ[503] = 1;
					ＳＭ(5000, 5, 0);
				}
			}
			if (iim == 6 && EV("ポルトガル／リスポン迷宮完了", -2147483648) == false)
			{
				ポルトガル／リスポン迷宮完了();
				敵ＦＰ強制登録(1000, 1000, 1000, 1000, 1000, 1000);
				gs[0][21].Ｓレベル = 55;
				gs[0][22].Ｓレベル = 55;
				gs[0][23].Ｓレベル = 55;
				gs[0][24].Ｓレベル = 55;
				gs[0][25].Ｓレベル = 55;
				gs[0][26].Ｓレベル = 55;
				◆特定戦闘 = 103;
				rr = イベント戦闘処理(0, 0, 0);
				if (rr == 0)
				{
					ＧＡＭＥＯＶＥＲ(1);
				}
			}
			if (iim == 35 && EV("魔王城深部／対決ガイ", -2147483648) == false)
			{
				魔王城深部／対決ガイ();
				敵ＦＰ強制登録(0, 1401, 0, 0, 0, 0);
				gs[0][22].名前 = "魔王ガイ（幻影）";
				◆特定戦闘 = 100;
				rr = イベント戦闘処理(0, 0, 0);
				if (rr == 0)
				{
					ＧＡＭＥＯＶＥＲ(0);
				}
				魔王城深部／ガイ勝利();
			}
			if (iim == 7 && EV("デンジャラスホール完了", -2147483648) == false)
			{
				自由都市／デンジャラスホール完了();
				ＳＭ(5000, 5, 0);
				効果音(116, false);
				ＰＳＭ(5558, "ウェンリーナー効果@電撃戦を強化", "やっちゃうよー。", "");
			}
			if (iim == 8 && EV("ランスの家／完了", -2147483648) == false)
			{
				ランスの家／完了();
				ＳＭ(5000, 5, 0);
				武将強制登録(1, 1324, 5);
				ＳＭ(5002, 0, 0);
			}
			if (iim == 9 && EV("大なぐりまくりたわぁ／完了", -2147483648) == false)
			{
				大なぐりまくりたわぁ／完了();
				ＧＳＡＶＥ[504] = 1;
				ＳＭ(5000, 5, 0);
			}
			if (iim == 10 && EV("自由都市／解呪の泉完了", -2147483648) == false)
			{
				自由都市／解呪の泉完了();
				ＳＭ(5000, 5, 0);
			}
			if (iim == 11 && EV("ジオ／デン完了", -2147483648) == false)
			{
				ジオ／デン完了();
			}
			if (iim == 13 && EV("ロックアース／大魔王の棺完了", -2147483648) == false)
			{
				ロックアース／大魔王の棺完了();
			}
			if (iim == 65 && EV("リーザス／離れ宮島完了", -2147483648) == false)
			{
				リーザス／離れ宮島完了();
			}
			if (iim == 16 && EV("ボルゴＺ／ボルゴ監獄完了", -2147483648) == false)
			{
				ボルゴＺ／ボルゴ監獄完了();
			}
			if (iim == 19 && EV("コサック／天敵の迷宮完了", -2147483648) == false)
			{
				コサック／天敵の迷宮完了();
			}
			if (iim == 20 && EV("アークグラード／マルグリッド迷宮完了", -2147483648) == false)
			{
				アークグラード／マルグリッド迷宮完了();
			}
			if (iim == 23 && EV("ロゼス／ショッピングモール完了", -2147483648) == false)
			{
				ロゼス／ショッピングモール完了();
			}
			if (iim == 24 && EV("シベリア／雪の迷宮完了", -2147483648) == false)
			{
				シベリア／雪の迷宮完了();
			}
			if (iim == 26 && EV("ラング・バウ／デトナ・ルーカ遺構完了", -2147483648) == false)
			{
				ラング・バウ／デトナ・ルーカ遺構完了();
			}
			if (iim == 31 && EV("番裏の砦Ａ／イシキリ迷宮完了", -2147483648) == false)
			{
				番裏の砦Ａ／イシキリ迷宮完了();
			}
			if (iim == 32 && EV("悪の塔／いつわりの迷宮完了", -2147483648) == false)
			{
				悪の塔／いつわりの迷宮完了();
			}
			if (iim == 47 && EV("魔王ジル派／ケイブリス死亡", -2147483648) == false && EV("魔王ジル派／ケイブリス迷宮対決", -2147483648) == false)
			{
				魔王ジル派／ケイブリス迷宮対決();
				敵ＦＰ強制登録(0, 1345, 0, 1413, 0, 1414);
				◆特定戦闘 = 84;
				rr = イベント戦闘処理(0, 0, 0);
				if (rr == 0)
				{
					ＧＡＭＥＯＶＥＲ(1);
				}
				捕虜登録(1413, 0);
				捕虜登録(1414, 0);
				捕虜登録(1345, 0);
			}
			if (iim == 50 && EV("赤の家／モスの迷宮完了", -2147483648) == false)
			{
				赤の家／モスの迷宮完了();
			}
			if (iim == 51 && EV("ケッセルリンク城／メイド墓地完了", -2147483648) == false)
			{
				ケッセルリンク城／メイド墓地完了();
			}
			if (iim == 52 && EV("青の家／レックスの迷宮完了", -2147483648) == false)
			{
				青の家／レックスの迷宮完了();
				汎用１(1311, 999);
				▲文字列 = "ベゼルアイぱーんち　ダメージ＋１００";
				▲文字列２ = "ちょっと本気出すわ。";
				ＧＦ[384] += 100;
				ＳＭ(5054, 0, 0);
			}
			if (iim == 12 && EV("二部ラストバトル／ＡＬＩＣＥ対決", -2147483648) == false)
			{
				ＧＦ[373] = 0;
				二部ラストバトル／ＡＬＩＣＥ対決();
			label0:
				勢力キャラ行動初期化(999);
				◆特定戦闘 = 97;
				ＦＰ初期化();
				敵ＦＰ強制登録(0, 1377, 0, 0, 0, 0);
				敗戦補正();
				Ｐ武将／参加選択(5, 0, 0, 0, 9, 10357);
				if (ＧＦ[467] == 1)
				{
					二部ラストバトル／イントロ２();
				}
				else
				{
					二部ラストバトル／イントロ();
				}
				rr = イベント戦闘処理(0, 1, 0);
				if (ＧＦ[467] == 1 && rr == 0)
				{
					ＧＡＭＥＯＶＥＲ(0);
				}
				if (rr == 0)
				{
					敗戦処理(0);
					goto label0;
				}
				if (Ｃ技能総数取得(518, 999) > 0 && EV("自由都市／デンジャラスホール完了", -2147483648) == true && EV("ベゼルアイ／聖女を集めた", -2147483648) == true)
				{
					二部ラストバトル／戦後１();
					ＳＭ(5003, 5, 6210);
					二部ラストバトル／戦後２();
					ＧＦ[371] = 1;
					エンディングロール();
					二部エピローグ();
					第二部完();
				}
				else
				{
					二部ラストバトル／戦後１Ｂ();
					ＧＦ[371] = 2;
					エンディングロール();
					二部エピローグＢ();
					第二部完();
				}
			}
			if (iim == 15 && (EV("魔人サイゼル／サイゼル単独", -2147483648) == false && EV("魔人サイゼル／ＶＳラ姉妹", -2147483648) == false))
			{
				if (EV("魔人サイゼル／ランスの閃き", -2147483648) == true)
				{
					魔人サイゼル／ＶＳラ姉妹();
					敵ＦＰ強制登録(1313, 0, 1312, 0, 0, 0);
					◆特定戦闘 = 90;
					rr = イベント戦闘処理(0, 0, 0);
					if (rr == 0)
					{
						ＧＡＭＥＯＶＥＲ(1);
					}
					ＳＭ(5000, 7, 0);
					キャラ消去(1313, 29);
					キャラ消去(1312, 29);
					捕虜登録(1313, 0);
					捕虜登録(1312, 0);
					ＰＳＭ(100, "魔人ハウゼルを撃破　魔人の戦力ダウン", "やりましたな。", "");
					ホーネット派兵力減少();
				}
				else
				{
					魔人サイゼル／サイゼル単独();
					武将強制登録(1, 1312, 0);
					ＳＭ(5002, 0, 0);
				}
			}
			if (iim == 30 && EV("ヘルマン／巨大戦艦完", -2147483648) == false)
			{
				ヘルマン／巨大戦艦完();
				ＳＭ(5021, 19, 1);
				ＳＭ(5021, 20, 1);
				ＳＭ(5021, 12, 3);
			}
			if (国[iim].お宝１ != 0)
			{
				if (アイテム確認(国[iim].お宝１, 0, 999) == 1)
				{
					ＧＦ[159]++;
					if (ＧＦ[159] > 3)
					{
						ＧＦ[159] = 0;
					}
					if (ＧＦ[159] == 0)
					{
						国[iim].お宝１ = 10;
					}
					if (ＧＦ[159] == 1)
					{
						国[iim].お宝１ = 21;
					}
					if (ＧＦ[159] == 2)
					{
						国[iim].お宝１ = 22;
					}
					if (ＧＦ[159] == 3)
					{
						国[iim].お宝１ = 23;
					}
				}
				ＳＭ(5019, 国[iim].お宝１, 0);
				国[iim].お宝１ = 0;
			}
			return 2;
		}
	}
	if (国[iim].迷宮深度 == 国[iim].迷宮階数 && 国[iim].迷宮クリア != 国[iim].迷宮深度)
	{
		国[iim].迷宮クリア = 国[iim].迷宮深度;
		if (国[iim].お宝１ != 0)
		{
			if (アイテム確認(国[iim].お宝１, 0, 999) == 1)
			{
				ＧＦ[159]++;
				if (ＧＦ[159] > 3)
				{
					ＧＦ[159] = 0;
				}
				if (ＧＦ[159] == 0)
				{
					国[iim].お宝１ = 10;
				}
				if (ＧＦ[159] == 1)
				{
					国[iim].お宝１ = 21;
				}
				if (ＧＦ[159] == 2)
				{
					国[iim].お宝１ = 22;
				}
				if (ＧＦ[159] == 3)
				{
					国[iim].お宝１ = 23;
				}
			}
			ＳＭ(5019, 国[iim].お宝１, 0);
			国[iim].お宝１ = 0;
		}
		if (iim == 15 && キャラ確認(1001, 0, 0, 0) == 1)
		{
			迷宮／味噌カツ迷宮／クリア();
		}
		if (iim == 16 && キャラ確認(1001, 0, 0, 0) == 1)
		{
			伊勢／真珠迷宮／クリア();
			ＳＭ(5020, 98, 0);
		}
		if (iim == 12 && キャラ確認(1001, 0, 0, 0) == 1)
		{
			テキサス／お勉強穴／クリア();
			ＧＦ[33] += 5;
			汎用１(31, 999);
			ＳＭ(5058, ＧＦ[33], 0);
		}
		if (iim == 26 && キャラ確認(1001, 0, 0, 0) == 1)
		{
			赤ヘル／赤壁迷宮／クリア();
		}
		if (iim == 14 && キャラ確認(1072, 0, 0, 0) == 1)
		{
			三河／徳川埋蔵金／クリア();
			ＳＭ(5020, 99, 0);
		}
		if (iim == 18 && キャラ確認(1001, 0, 0, 0) == 1)
		{
			大和／平城京／クリア();
		}
		if (iim == 21)
		{
			なにわ／梅田地下街／クリア();
		}
		if (iim == 3)
		{
			佐渡／佐渡金山／クリア();
			ＳＭ(5017, 5000, 0);
		}
		if (iim == 10)
		{
			ＭＡＺＯ／ＳＭ迷宮／クリア();
			if (ＦＰ確認(1000, 0, 0, 0) == 1)
			{
				ＣＳレベル加算(2, 1000, 0);
				汎用１(1000, 0);
				ＳＭ(5008, 0, 0);
			}
			if (ＦＰ確認(1000, 0, 0, 0) == 0)
			{
				ＣＳレベル加算(2, 1000, 1);
				汎用１(1000, 1);
				ＳＭ(5008, 0, 0);
			}
		}
		if (iim == 5)
		{
			上総／里見帝国／クリア();
			if (ＦＰ確認(1000, 0, 0, 0) == 1)
			{
				ＣＳレベル加算(2, 1000, 0);
				汎用１(1000, 0);
				ＳＭ(5008, 0, 0);
			}
			if (ＦＰ確認(1000, 0, 0, 0) == 0)
			{
				ＣＳレベル加算(2, 1000, 1);
				汎用１(1000, 1);
				ＳＭ(5008, 0, 0);
			}
		}
		if (iim == 6)
		{
			江戸／魔界都市／クリア();
		}
		if (iim == 8)
		{
			貝／貝塚／クリア();
		}
		if (iim == 20)
		{
			丹波／丹波鉱山／クリア();
		}
		if (iim == 22)
		{
			姫路／虎の穴／クリア();
			ＳＭ(5019, 13, 0);
			ＳＭ(5019, 13, 0);
			ＳＭ(5019, 13, 0);
		}
		if (iim == 27)
		{
			戦艦長門／ビキニ観賞／クリア();
		}
		if (iim == 17)
		{
			蜜柑／蜜柑農園／クリア();
		}
		if (iim == 23)
		{
			出雲／黄泉平坂／クリア();
		}
		if (iim == 13)
		{
			美濃／まむし油田／クリア();
			ＳＭ(5019, 12, 0);
			ＳＭ(5019, 12, 0);
			ＳＭ(5019, 12, 0);
		}
		if (iim == 19)
		{
			竜宮城エロ１();
			ＳＭ(5000, 1, 0);
		}
		if (iim == 4)
		{
			Ｓラストバトル／蘭ルート();
		}
		if (iim == 11 && EV("夕張／信頼Ｂ", -2147483648) == true && EV("オロチと対決Ａ", -2147483648) == false)
		{
			キャラ消去(1079, 999);
			キャラ消去(1079, 0);
			オロチと対決Ａ();
			選択肢(0, "オロチと戦いますか？");
			選択肢(1, "やっぱり辞める");
			選択肢(2, "戦う");
			rr = 選択(false, 0, 0);
			if (rr == 1)
			{
				オロチと対決Ｂ();
				return 2;
			}
			if (rr == 2)
			{
				オロチと対決Ｃ();
				ＦＰ戻し();
				ＳオロチＶＳ();
				return 2;
			}
		}
		LOG_TADA("　迷宮最下層まで来ました クリア\n");
		return 2;
	}
	if (iim == 23 && ◆予備０８ == 0)
	{
		if (特殊戦闘 == 1)
		{
			ＧＦ[7] = 1;
			出雲／黄泉平坂／だいだーら();
			return 0;
		}
		if (EV("黄泉平坂／帝の剣", -2147483648) == false && EV("名取／オロチの説明", -2147483648) == true && 国[iim].迷宮深度 > 7)
		{
			黄泉平坂／帝の剣();
			ＳＭ(5019, 34, 0);
			return 0;
		}
	}
	if (iim == 26 && ◆予備０８ == 0)
	{
		if (EV("ゴン／信頼", -2147483648) == false && EV("ゴン／妖怪情報", -2147483648) == true && 国[iim].迷宮深度 > 4 && ＦＰ確認(1032, 0, 0, 0) == 0)
		{
			ゴン／信頼();
			キャラ関係変更(4, 1032, 999);
			能力ＵＰ(1032, 0);
			Ｃ昆布変更(1, 1032, 999);
			return 0;
		}
	}
	if (iim == 13 && ◆予備０８ == 0)
	{
		if (EV("早雲／石油穴で発見Ａ", -2147483648) == false && EV("蘭／約束", -2147483648) == true && 国[iim].迷宮深度 > 5 && キャラ確認(1051, 0, 0, 0) == 1)
		{
			ＡＣＦ(1050, 2);
			早雲／石油穴で発見Ａ();
			if (◆ルート == 0 && ◆章 == 2 && ◆ゲームモード == 1)
			{
				早雲／石油穴で発見Ｃ();
				if (ＦＰ確認(1051, 0, 0, 0) == 1)
				{
					キャラ重要変更(1, 1051, 0);
				}
				キャラ重要変更(1, 1051, 999);
				◆ルート = 30;
				g_sMap.create();
				◆章 = 3;
				◆ターン３ = ◆ターン;
				ＧＦ[140] = 1;
				ＳＭ(5072, 0, 0);
			}
			else
			{
				早雲／石油穴で発見Ｂ();
				キャラ消去(1051, 0);
				キャラ消去(1051, 999);
				ＡＣ(1022, 1);
			}
			return 1;
		}
	}
	if (iim == 17 && ◆予備０８ == 0)
	{
		if (EV("健太郎／地下蜜柑農園にて", -2147483648) == false && EV("健太郎／ヒラミレモン危機", -2147483648) == true && ◆特殊 == 4 && 国[iim].迷宮深度 > 5)
		{
			健太郎／地下蜜柑農園にて();
			return 0;
		}
	}
	if (iim == 8 && ◆予備０８ == 0)
	{
		if (EV("ランス／貝塚でうはうは１", -2147483648) == false && キャラ確認(1001, 0, 0, 0) == 1 && 国[iim].迷宮深度 > 1)
		{
			ランス／貝塚でうはうは１();
			ＳＭ(5020, 49, 0);
			ＳＭ(5000, 5, 0);
			return 0;
		}
		if (EV("ランス／貝塚でうはうは２", -2147483648) == false && キャラ確認(1001, 0, 0, 0) == 1 && 国[iim].迷宮深度 > 2)
		{
			ランス／貝塚でうはうは２();
			ＳＭ(5020, 50, 0);
			ＳＭ(5000, 5, 0);
			return 0;
		}
		if (EV("ランス／貝塚でうはうは３", -2147483648) == false && キャラ確認(1001, 0, 0, 0) == 1 && 国[iim].迷宮深度 > 3)
		{
			ランス／貝塚でうはうは３();
			ＳＭ(5020, 51, 0);
			ＳＭ(5000, 5, 0);
			return 0;
		}
	}
	if (iim == 19 && ◆予備０８ == 0)
	{
		if (EV("竜宮城エロ３", -2147483648) == false && EV("竜宮城エロ１", -2147483648) == true)
		{
			if (EV("竜宮城エロ２", -2147483648) == true)
			{
				竜宮城エロ３();
				ＳＭ(5000, 5, 0);
				if (アイテム確認(63, 0, 999) == 0)
				{
					ＳＭ(5019, 63, 0);
				}
				else
				{
					ＳＭ(5019, 21, 0);
				}
				return 1;
			}
			竜宮城エロ１Ａ();
			return 1;
		}
	}
	if (iim == 11 && ◆ルート == 10 && ◆予備０８ == 0)
	{
		aa1 = 8;
		if (EV("ザビエル／大蛇迷宮１", -2147483648) == true)
		{
			aa1 = 10;
		}
		if (EV("ザビエル／大蛇迷宮２", -2147483648) == true)
		{
			aa1 = 15;
		}
		if (EV("ザビエル／大蛇迷宮３", -2147483648) == true)
		{
			aa1 = 18;
		}
		if (EV("ザビエルの最後の作戦", -2147483648) == true && 国[iim].迷宮深度 >= aa1)
		{
			Ｓラストバトル／謙信ルート();
			return 0;
		}
	}
	if (iim == 11 && EV("夕張／信頼Ｂ", -2147483648) == true && ◆予備０８ == 0)
	{
		if (EV("オロチの穴／夕張の異変", -2147483648) == false && 国[iim].迷宮深度 > 10)
		{
			オロチの穴／夕張の異変();
			return 0;
		}
	}
	if (iim == 4 && ◆予備０８ == 0)
	{
		if (EV("蘭／セキメイの墓／初", -2147483648) == false)
		{
			蘭／セキメイの墓／初();
			return 0;
		}
	}
	if (iim == 16 && ◆予備０８ == 0)
	{
		if (EV("伊勢／真珠迷宮／クリア", -2147483648) == true && ＧＦ[120] == 0)
		{
			汎用１(1001, 999);
			ＳＭ(5020, 120, 0);
		}
	}
	aa = 0;
	if (EV("ランス／ひらめき１", -2147483648) == false && ◆ターン > 10 && キャラ確認(1001, 0, 0, 0) == 1 && ＧＦ[100] == 0)
	{
		ＧＦ[100] = 1;
		ランス／ひらめき１();
		return 0;
	}
	if (EV("ランス／ひらめき２", -2147483648) == false && ◆ターン > 20 && キャラ確認(1001, 0, 0, 0) == 1 && ＧＦ[100] == 0)
	{
		ＧＦ[100] = 1;
		ランス／ひらめき２();
		return 0;
	}
	if (EV("ランス／ひらめき３", -2147483648) == false && ◆ターン > 30 && キャラ確認(1001, 0, 0, 0) == 1 && ＧＦ[100] == 0)
	{
		ＧＦ[100] = 1;
		ランス／ひらめき３();
		return 0;
	}
	if (EV("ランス／ひらめき４", -2147483648) == false && EV("鈴女／大奥性欲絶倫", -2147483648) == true && キャラ確認(1002, 0, 0, 0) == 1 && ＧＦ[100] == 0)
	{
		ＧＦ[100] = 1;
		ランス／ひらめき４();
		return 0;
	}
	if (EV("鈴女／迷宮ヒント", -2147483648) == false && ＦＰ確認(1002, 0, 0, 0) == 1 && Ｃ技能総数取得(146, 999) == 0 && ◆ターン > 10)
	{
		鈴女／迷宮ヒント();
		return 0;
	}
	if (国[iim].お宝３ != 0 && 国[iim].迷宮深度 > 3 && RAND(3) == 1)
	{
		ＳＭ(5019, 国[iim].お宝３, 0);
		国[iim].お宝３ = 0;
		return 0;
	}
	if (国[iim].お宝６ != 0 && 国[iim].迷宮深度 > 6 && RAND(3) == 1)
	{
		ＳＭ(5019, 国[iim].お宝６, 0);
		国[iim].お宝６ = 0;
		return 0;
	}
	aa = 5;
	if (iim == 21)
	{
		aa = 2;
	}
	if (EV("三河／宇宙人１", -2147483648) == true && ＧＦ[103] == 0 && RAND(aa) == 1)
	{
		ＳＭ(5020, 103, 0);
		return 0;
	}
	if (EV("三河／宇宙人１", -2147483648) == true && ＧＦ[104] == 0 && RAND(aa) == 1)
	{
		ＳＭ(5020, 104, 0);
		return 0;
	}
	if (EV("三河／宇宙人１", -2147483648) == true && ＧＦ[105] == 0 && RAND(aa) == 1)
	{
		ＳＭ(5020, 105, 0);
		return 0;
	}
	if (ＧＦ[40] == 0 && EV("のぞみ／信頼", -2147483648) == true && RAND(aa) == 1)
	{
		ＳＭ(5020, 40, 0);
		return 0;
	}
	if (ＧＦ[41] == 0 && EV("てる／信頼", -2147483648) == true && RAND(aa) == 1)
	{
		ＳＭ(5020, 41, 0);
		return 0;
	}
	if (ＧＦ[89] == 0 && EV("リズナ／基本接触２", -2147483648) == true && RAND(aa) == 1)
	{
		ＳＭ(5020, 89, 0);
		return 0;
	}
	if (ＧＦ[391] == 0 && iim == 35 && EV("魔人サテラ／三つの難題", -2147483648) == true && 国[iim].迷宮深度 > 9)
	{
		ＳＭ(5020, 391, 0);
		return 0;
	}
	if (◆予備０８ == 1)
	{
		if (宝箱_拾得抽選() == true)
		{
			宝箱_開ける(国[iim].迷宮深度);
		}
		else
		{
			宝箱_拾得確率上昇(国[iim].迷宮深度);
		}
		return 0;
	}
	ＳＭ(5019, 5, 0);
	return 0;
}

void 迷宮／モンスター(lint iim, lint 階数, lint フラグ)
{
	lint グループ = 0;
	lint 発生数 = 0;
	lint loop = 0;
	lint aa = 0;
	lint bb = 0;
	lint rr = 0;
	lint ra = 0;
	lint iic = 0;
	lint ii = 0;
	array@lint 配置[10];
	LOG_TADA("　迷宮／モンスター()　" + 国[iim].名前 + "　" + string(階数) + "階　\n");
	if (◆予備０８ == 1)
	{
		if (iim == 12)
		{
			ＧＦ[373] = 1;
			if (階数 < 205)
			{
				モンスターズ２(0, 0, 1378, 45, 0, 0, 0, 0, 0, 0, 0, 0);
			}
			else if (階数 < 210)
			{
				モンスターズ２(1378, 50, 0, 0, 1378, 50, 0, 0, 0, 0, 0, 0);
			}
			else if (階数 < 215)
			{
				モンスターズ２(1378, 55, 1378, 55, 1378, 55, 0, 0, 0, 0, 0, 0);
			}
			else
			{
				モンスターズ２(0, 0, 1378, 85, 0, 0, 0, 0, 1378, 99, 0, 0);
			}
		}
		if (iim == 1 || iim == 2 || iim == 3 || iim == 4 || iim == 5 || iim == 6 || iim == 7 || iim == 8 || iim == 9 || iim == 10 || iim == 11 || iim == 13 || iim == 14 || iim > 14)
		{
			int rndm1 = 迷宮／モンスター二部ランダム(階数);
			int rndm2 = 迷宮／モンスター二部ランダム(階数);
			int rndm3 = 迷宮／モンスター二部ランダム(階数);
			int mlvl1 = RAND(階数) / 2 + 10;
			int mlvl2 = RAND(階数) / 2 + 10;
			int mlvl3 = RAND(階数);
			if (iim > 30)
			{
				mlvl1 += 20;
				mlvl2 += 20;
				mlvl3 += RAND(60);
			}
			else
			{
				mlvl1 += 10;
				mlvl2 += 10;
				mlvl3 += RAND(40);
			}
			if (階数 == 10 || 階数 == 20 || 階数 == 30 || 階数 == 40 || 階数 == 50 || 階数 == 60)
			{
				mlvl3 = mlvl3 * RAND(2);
				if (RAND(13) == 1)
				{
					mlvl3 = mlvl3 * RAND(5);
					if (RAND(13) == 1)
					{
						mlvl3 = mlvl3 * RAND(5);
					}
				}
			}
			if (ＦＰ技能取得(146, 1) > 0)
			{
				rndm1 = 0;
				mlvl1 = 0;
			}
			モンスターズ２(rndm1, mlvl1, 0, 0, rndm2, mlvl2, 0, 0, rndm3, mlvl3, 0, 0);
		}
		return;
	}
	if (iim == 3)
	{
		if (階数 == 1)
		{
			モンスターズ(3, 0, 13, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(3, 14, 14, 0, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(3, 0, 20, 0, 17, 0, 17);
		}
		if (階数 == 4)
		{
			モンスターズ(3, 0, 21, 0, 0, 25, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(3, 0, 24, 0, 24, 0, 30);
		}
		if (階数 == 6)
		{
			モンスターズ(3, 27, 18, 18, 0, 0, 0);
		}
		if (階数 == 7)
		{
			モンスターズ(3, 23, 25, 23, 0, 0, 0);
		}
		if (階数 == 8)
		{
			モンスターズ(3, 0, 24, 0, 26, 0, 30);
		}
		if (階数 == 9)
		{
			モンスターズ(3, 35, 20, 30, 0, 0, 0);
		}
		if (階数 == 10)
		{
			モンスターズ２(1228, 40, 1228, 40, 1228, 40, 0, 0, 1231, 55, 0, 0);
			gs[0][25].名前 = "佐渡爺";
		}
	}
	if (iim == 10)
	{
		if (階数 == 1)
		{
			モンスターズ(1, 0, 5, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(1, 5, 10, 5, 5, 5, 5);
		}
		if (階数 == 3)
		{
			モンスターズ(1, 15, 0, 13, 0, 7, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(1, 0, 20, 22, 0, 0, 25);
		}
		if (階数 == 5)
		{
			モンスターズ(1, 0, 35, 0, 5, 0, 5);
		}
		if (階数 == 6)
		{
			モンスターズ(1, 5, 11, 5, 0, 20, 0);
		}
		if (階数 == 7)
		{
			モンスターズ(1, 0, 20, 0, 20, 0, 10);
		}
		if (階数 == 8)
		{
			モンスターズ(1, 13, 0, 13, 0, 0, 0);
		}
		if (階数 == 9)
		{
			モンスターズ(1, 7, 7, 8, 10, 0, 15);
		}
		if (階数 == 10)
		{
			モンスターズ２(0, 0, 1238, 65, 0, 0, 0, 0, 0, 0, 0, 0);
		}
	}
	if (iim == 12)
	{
		if (階数 == 1)
		{
			モンスターズ(2, 1, 3, 4, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(2, 0, 7, 0, 8, 0, 9);
		}
		if (階数 == 3)
		{
			モンスターズ(2, 15, 15, 15, 0, 20, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(2, 17, 5, 0, 8, 5, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(2, 18, 19, 20, 0, 0, 0);
		}
		if (階数 == 6)
		{
			モンスターズ(2, 15, 13, 17, 0, 0, 0);
		}
		if (階数 == 7)
		{
			モンスターズ(2, 22, 5, 22, 5, 0, 10);
		}
		if (階数 == 8)
		{
			モンスターズ２(1231, 58, 1231, 62, 0, 0, 0, 0, 0, 0, 0, 0);
		}
	}
	if (iim == 4)
	{
		if (階数 == 1)
		{
			モンスターズ(4, 0, 10, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(4, 0, 10, 0, 0, 20, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(4, 20, 0, 20, 0, 10, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(4, 0, 0, 0, 30, 30, 10);
		}
		if (階数 == 5)
		{
			モンスターズ(4, 0, 15, 10, 0, 0, 0);
		}
		if (階数 == 6)
		{
			モンスターズ(4, 0, 7, 0, 0, 7, 0);
		}
		if (階数 == 7)
		{
			モンスターズ(4, 11, 12, 13, 14, 15, 16);
		}
		if (階数 == 8)
		{
			モンスターズ(4, 0, 40, 0, 10, 10, 10);
		}
		if (階数 == 9)
		{
			モンスターズ(4, 1, 1, 1, 1, 1, 1);
		}
		if (階数 == 10)
		{
			モンスターズ(4, 7, 8, 7, 0, 10, 0);
		}
		if (階数 == 11)
		{
			モンスターズ(4, 22, 10, 22, 0, 0, 0);
		}
		if (階数 == 12)
		{
			モンスターズ(4, 33, 10, 33, 10, 10, 10);
		}
	}
	if (iim == 5)
	{
		if (階数 == 1)
		{
			モンスターズ２(1208, 10, 1196, 12, 0, 0, 0, 0, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ２(1208, 10, 1196, 22, 0, 0, 0, 0, 0, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ２(1208, 10, 1196, 32, 0, 0, 0, 0, 0, 0, 0, 0);
		}
		if (階数 == 4)
		{
			モンスターズ２(1208, 10, 1196, 42, 0, 0, 0, 0, 0, 0, 0, 0);
		}
		if (階数 == 5)
		{
			モンスターズ２(1208, 10, 1196, 52, 0, 0, 0, 0, 0, 0, 0, 0);
		}
		if (階数 == 6)
		{
			モンスターズ２(1208, 10, 1196, 62, 0, 0, 0, 0, 0, 0, 0, 0);
		}
		if (階数 == 7)
		{
			モンスターズ２(1208, 10, 1196, 72, 0, 0, 0, 0, 0, 0, 0, 0);
		}
		if (階数 == 8)
		{
			モンスターズ２(1208, 10, 1196, 82, 0, 0, 0, 0, 0, 0, 0, 0);
		}
	}
	if (iim == 6)
	{
		if (階数 == 1)
		{
			モンスターズ(2, 0, 43, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(2, 15, 15, 15, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(2, 18, 18, 18, 0, 0, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(2, 25, 25, 25, 0, 0, 0);
		}
		if (階数 == 5)
		{
			モンスターズ２(1086, 40, 1087, 50, 1086, 40, 1211, 25, 1211, 15, 1211, 20);
			gs[0][21].名前 = "シブヤ鬼";
			gs[0][22].名前 = "シンジュク鬼";
			gs[0][23].名前 = "メグロ鬼";
		}
	}
	if (iim == 8)
	{
		if (階数 == 1)
		{
			モンスターズ(1, 0, 33, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(1, 0, 25, 0, 25, 0, 25);
		}
		if (階数 == 3)
		{
			モンスターズ(1, 20, 20, 20, 25, 25, 25);
		}
		if (階数 == 4)
		{
			モンスターズ(1, 30, 30, 30, 0, 25, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(1, 40, 37, 40, 45, 0, 50);
		}
	}
	if (iim == 14)
	{
		if (階数 == 1)
		{
			モンスターズ(1, 0, 10, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(1, 8, 8, 8, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(1, 0, 9, 0, 0, 9, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(1, 12, 12, 12, 0, 0, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(1, 0, 20, 0, 0, 0, 0);
		}
		if (階数 == 6)
		{
			モンスターズ(1, 0, 20, 0, 21, 0, 7);
		}
		if (階数 == 7)
		{
			モンスターズ(1, 0, 25, 0, 11, 0, 11);
		}
		if (階数 == 8)
		{
			モンスターズ(1, 0, 25, 0, 20, 0, 20);
		}
		if (階数 == 9)
		{
			モンスターズ(1, 0, 30, 0, 10, 10, 10);
		}
		if (階数 == 10)
		{
			モンスターズ(1, 10, 10, 10, 0, 0, 0);
		}
		if (階数 == 11)
		{
			モンスターズ(1, 25, 10, 25, 0, 20, 0);
		}
		if (階数 == 12)
		{
			モンスターズ(1, 5, 5, 5, 25, 25, 25);
		}
		if (階数 == 13)
		{
			モンスターズ２(1235, 30, 1220, 13, 1235, 30, 1213, 10, 1211, 20, 1213, 10);
		}
	}
	if (iim == 15)
	{
		if (階数 == 1)
		{
			モンスターズ(2, 3, 0, 3, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(2, 0, 8, 0, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(2, 4, 5, 4, 0, 0, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(2, 0, 10, 0, 0, 10, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(2, 3, 5, 3, 0, 8, 0);
		}
		if (階数 == 6)
		{
			モンスターズ２(1208, 5, 1208, 3, 1208, 5, 1213, 5, 1229, 25, 1213, 5);
		}
	}
	if (iim == 13)
	{
		if (階数 == 1)
		{
			モンスターズ(4, 5, 3, 5, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(4, 3, 17, 0, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(4, 0, 5, 0, 20, 0, 20);
		}
		if (階数 == 4)
		{
			モンスターズ(5, 7, 0, 0, 10, 0, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(4, 30, 0, 0, 0, 0, 0);
		}
		if (階数 == 6)
		{
			モンスターズ(4, 15, 15, 15, 20, 20, 20);
		}
		if (階数 == 7)
		{
			モンスターズ２(1229, 30, 1229, 30, 1229, 30, 1229, 35, 1229, 25, 1213, 40);
		}
	}
	if (iim == 11)
	{
		if (階数 == 1)
		{
			モンスターズ(5, 0, 10, 0, 0, 10, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(5, 0, 15, 0, 0, 15, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(5, 0, 20, 0, 0, 20, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(5, 0, 25, 0, 0, 25, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(5, 0, 15, 0, 15, 0, 15);
		}
		if (階数 == 6)
		{
			モンスターズ(5, 0, 20, 0, 7, 0, 7);
		}
		if (階数 == 7)
		{
			モンスターズ(5, 20, 20, 20, 7, 7, 7);
		}
		if (階数 == 8)
		{
			モンスターズ(5, 0, 30, 0, 0, 30, 0);
		}
		if (階数 == 9)
		{
			モンスターズ(5, 7, 7, 7, 0, 0, 0);
		}
		if (階数 == 10)
		{
			モンスターズ(5, 0, 35, 0, 0, 35, 0);
		}
		if (階数 == 11)
		{
			モンスターズ(5, 10, 0, 10, 0, 20, 0);
		}
		if (階数 == 12)
		{
			モンスターズ(5, 1, 1, 1, 0, 0, 0);
		}
		if (階数 == 13)
		{
			モンスターズ(5, 1, 1, 1, 0, 0, 0);
		}
		if (階数 == 14)
		{
			モンスターズ(5, 1, 1, 1, 0, 0, 0);
		}
		if (階数 == 15)
		{
			モンスターズ(5, 0, 40, 0, 0, 40, 0);
		}
		if (階数 == 16)
		{
			モンスターズ(5, 20, 20, 20, 0, 0, 0);
		}
		if (階数 == 17)
		{
			モンスターズ(5, 30, 30, 30, 0, 0, 0);
		}
		if (階数 == 18)
		{
			モンスターズ(5, 15, 16, 17, 0, 0, 0);
		}
		if (階数 == 19)
		{
			モンスターズ(5, 27, 0, 27, 0, 40, 0);
		}
		if (階数 == 20)
		{
			モンスターズ(5, 0, 50, 0, 0, 50, 0);
		}
	}
	if (iim == 19)
	{
		if (階数 == 1)
		{
			モンスターズ(3, 10, 10, 10, 5, 0, 5);
		}
		if (階数 == 2)
		{
			モンスターズ(3, 29, 0, 29, 0, 8, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(3, 35, 0, 27, 20, 0, 11);
		}
		if (階数 == 4)
		{
			モンスターズ２(1208, 10, 1230, 40, 1208, 10, 1230, 20, 1230, 20, 1230, 20);
		}
	}
	if (iim == 18)
	{
		if (階数 == 1)
		{
			モンスターズ(1, 10, 0, 5, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(1, 3, 4, 3, 0, 15, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(1, 12, 0, 12, 0, 0, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(1, 5, 0, 5, 0, 10, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(1, 0, 20, 0, 0, 10, 0);
		}
		if (階数 == 6)
		{
			モンスターズ２(0, 0, 1236, 40, 0, 0, 0, 0, 1237, 40, 0, 0);
		}
	}
	if (iim == 16)
	{
		if (階数 == 1)
		{
			モンスターズ(2, 0, 20, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(2, 8, 8, 8, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(2, 0, 9, 0, 9, 10, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(2, 0, 10, 0, 10, 10, 10);
		}
		if (階数 == 5)
		{
			モンスターズ(2, 11, 12, 11, 0, 10, 0);
		}
		if (階数 == 6)
		{
			モンスターズ(2, 0, 8, 0, 0, 0, 0);
		}
		if (階数 == 7)
		{
			モンスターズ２(1209, 8, 1209, 8, 1209, 8, 1209, 8, 1209, 8, 1209, 8);
		}
	}
	if (iim == 21)
	{
		if (階数 == 1)
		{
			モンスターズ(3, 5, 8, 5, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(3, 7, 8, 7, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(3, 0, 0, 10, 0, 0, 10);
		}
		if (階数 == 4)
		{
			モンスターズ(3, 0, 30, 5, 0, 5, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(3, 8, 8, 8, 0, 0, 0);
		}
		if (階数 == 6)
		{
			モンスターズ(3, 0, 3, 0, 3, 5, 3);
		}
		if (階数 == 7)
		{
			モンスターズ(3, 5, 5, 5, 0, 0, 0);
		}
		if (階数 == 8)
		{
			モンスターズ２(1213, 10, 1213, 10, 1213, 10, 1213, 11, 1213, 11, 1213, 11);
		}
	}
	if (iim == 20)
	{
		if (階数 == 1)
		{
			モンスターズ(1, 5, 5, 5, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(1, 7, 7, 7, 0, 33, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(1, 0, 45, 0, 0, 0, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(1, 12, 0, 12, 0, 12, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(1, 5, 5, 5, 0, 0, 0);
		}
		if (階数 == 6)
		{
			モンスターズ(1, 8, 25, 8, 0, 0, 0);
		}
		if (階数 == 7)
		{
			モンスターズ(1, 15, 25, 22, 5, 5, 5);
		}
		if (階数 == 8)
		{
			モンスターズ(1, 3, 0, 0, 10, 0, 0);
		}
		if (階数 == 9)
		{
			モンスターズ２(1231, 30, 1231, 40, 1231, 30, 0, 0, 0, 0, 0, 0);
		}
	}
	if (iim == 22)
	{
		if (階数 == 1)
		{
			モンスターズ(2, 15, 15, 15, 10, 0, 10);
		}
		if (階数 == 2)
		{
			モンスターズ(2, 38, 0, 38, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(2, 7, 10, 0, 3, 8, 7);
		}
		if (階数 == 4)
		{
			モンスターズ(2, 20, 0, 20, 10, 0, 10);
		}
		if (階数 == 5)
		{
			モンスターズ２(1208, 10, 1239, 40, 1208, 10, 0, 0, 0, 0, 0, 0);
		}
	}
	if (iim == 23)
	{
		if (階数 == 1)
		{
			モンスターズ(3, 0, 10, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(3, 5, 13, 5, 0, 0, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(3, 0, 15, 0, 0, 0, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(3, 5, 20, 5, 0, 0, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(3, 5, 22, 5, 0, 0, 0);
		}
		if (階数 == 6)
		{
			モンスターズ(3, 0, 25, 0, 0, 0, 0);
		}
		if (階数 == 7)
		{
			モンスターズ(3, 5, 27, 5, 0, 0, 0);
		}
		if (階数 == 8)
		{
			モンスターズ(3, 0, 30, 0, 0, 0, 0);
		}
		if (階数 == 9)
		{
			モンスターズ(3, 5, 33, 5, 0, 0, 0);
		}
		if (階数 == 10)
		{
			モンスターズ(3, 0, 35, 0, 0, 0, 0);
		}
		if (階数 == 11)
		{
			モンスターズ(3, 0, 37, 0, 0, 0, 0);
		}
		if (階数 == 12)
		{
			モンスターズ(3, 5, 40, 5, 0, 0, 0);
		}
		if (階数 == 13)
		{
			モンスターズ(3, 0, 42, 0, 0, 0, 0);
		}
		if (階数 == 14)
		{
			モンスターズ(3, 5, 43, 5, 0, 0, 0);
		}
		if (階数 == 15)
		{
			モンスターズ(3, 0, 45, 0, 0, 0, 0);
		}
		if (階数 == 16)
		{
			モンスターズ(3, 5, 47, 5, 0, 0, 0);
		}
		if (階数 == 17)
		{
			モンスターズ(3, 0, 50, 0, 0, 0, 0);
		}
		if (階数 == 18)
		{
			モンスターズ２(1208, 10, 1241, 55, 1208, 10, 0, 0, 0, 0, 0, 0);
			◆特定戦闘 = 46;
		}
		if (フラグ == 1)
		{
			モンスターズ２(1220, 20, 1233, 30, 1220, 20, 0, 0, 0, 0, 0, 0);
		}
	}
	if (iim == 26)
	{
		if (階数 == 1)
		{
			モンスターズ(1, 10, 10, 10, 10, 10, 10);
		}
		if (階数 == 2)
		{
			モンスターズ(1, 12, 12, 12, 12, 12, 12);
		}
		if (階数 == 3)
		{
			モンスターズ(1, 14, 10, 8, 0, 0, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(1, 0, 25, 0, 7, 27, 7);
		}
		if (階数 == 5)
		{
			モンスターズ(1, 4, 34, 4, 10, 10, 15);
		}
		if (階数 == 6)
		{
			モンスターズ２(1219, 30, 1232, 62, 1219, 30, 1211, 20, 1211, 10, 1211, 17);
		}
	}
	if (iim == 27)
	{
		if (階数 == 1)
		{
			モンスターズ(2, 0, 20, 0, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(2, 0, 10, 0, 0, 20, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(2, 7, 7, 7, 0, 0, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(2, 0, 30, 0, 0, 0, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(2, 5, 5, 5, 6, 6, 6);
		}
		if (階数 == 6)
		{
			モンスターズ(2, 20, 21, 22, 0, 30, 0);
		}
		if (階数 == 7)
		{
			モンスターズ(2, 0, 25, 22, 0, 18, 0);
		}
		if (階数 == 8)
		{
			モンスターズ(2, 0, 33, 0, 5, 5, 7);
		}
		if (階数 == 9)
		{
			モンスターズ(2, 18, 28, 38, 10, 0, 10);
		}
		if (階数 == 10)
		{
			モンスターズ(2, 9, 10, 10, 12, 13, 14);
		}
		if (階数 == 11)
		{
			モンスターズ(2, 21, 21, 21, 0, 30, 0);
		}
		if (階数 == 12)
		{
			モンスターズ２(1220, 30, 1220, 30, 1220, 30, 1220, 30, 1240, 60, 1220, 30);
		}
	}
	if (iim == 17)
	{
		if (階数 == 1)
		{
			モンスターズ(2, 3, 3, 3, 0, 0, 0);
		}
		if (階数 == 2)
		{
			モンスターズ(2, 0, 4, 0, 0, 5, 0);
		}
		if (階数 == 3)
		{
			モンスターズ(2, 5, 0, 5, 0, 0, 0);
		}
		if (階数 == 4)
		{
			モンスターズ(2, 0, 13, 0, 0, 0, 0);
		}
		if (階数 == 5)
		{
			モンスターズ(2, 0, 17, 0, 0, 0, 6);
		}
		if (階数 == 6)
		{
			モンスターズ(2, 0, 0, 10, 0, 0, 0);
		}
		if (階数 == 7)
		{
			モンスターズ(2, 0, 5, 5, 0, 0, 0);
		}
		if (階数 == 8)
		{
			モンスターズ(2, 0, 20, 0, 0, 0, 0);
		}
		if (階数 == 9)
		{
			モンスターズ(2, 1, 1, 1, 2, 2, 2);
		}
		if (階数 == 10)
		{
			モンスターズ(2, 0, 10, 0, 15, 15, 15);
		}
	}
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].番号 != 0)
		{
			Ｓ体力計算(ii, iic);
			gs[ii][iic].Ｓ体力 = gs[ii][iic].Ｓ体力最大;
			gs[ii][iic].現在技数 = 6;
			gs[ii][iic].技数 = 6;
		}
	}
}

void モンスターズ(lint type, lint aa1, lint aa2, lint aa3, lint aa4, lint aa5, lint aa6)
{
	lint ii = 0;
	lint a1 = 0;
	lint a2 = 0;
	lint a3 = 0;
	lint a4 = 0;
	lint a5 = 0;
	lint a6 = 0;
	lint iic = 0;
	lint aa = 0;
	lint ax = 0;
	lint loop = 0;
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("　　Ｍグループ（" + string(type) + "）　［" + string(aa1) + "、" + string(aa2) + "、" + string(aa3) + "、" + string(aa4) + "、" + string(aa5) + "、" + string(aa6) + "）\n");
	}
	ax = 0;
	if (aa1 != 0)
	{
		ax++;
	}
	if (aa2 != 0)
	{
		ax++;
	}
	if (aa3 != 0)
	{
		ax++;
	}
	if (aa4 != 0)
	{
		ax++;
	}
	if (aa5 != 0)
	{
		ax++;
	}
	if (aa6 != 0)
	{
		ax++;
	}
	if (ＦＰ技能取得(146, 1) != 0 && ax > 1)
	{
		for (; ; )
		{
			if (aa6 != 0)
			{
				aa6 = 0;
				break;
			}
			if (aa5 != 0)
			{
				aa5 = 0;
				break;
			}
			if (aa4 != 0)
			{
				aa4 = 0;
				break;
			}
			if (aa3 != 0)
			{
				aa3 = 0;
				break;
			}
			if (aa2 != 0)
			{
				aa2 = 0;
				break;
			}
			if (aa1 != 0)
			{
				aa1 = 0;
				break;
			}
		}
	}
	ax = 0;
	if (aa1 != 0)
	{
		a1 = モンスターグループ(aa1);
	}
	if (aa2 != 0)
	{
		a2 = モンスターグループ(aa2);
	}
	if (aa3 != 0)
	{
		a3 = モンスターグループ(aa3);
	}
	if (aa4 != 0)
	{
		a4 = モンスターグループ(aa4);
	}
	if (aa5 != 0)
	{
		a5 = モンスターグループ(aa5);
	}
	if (aa6 != 0)
	{
		a6 = モンスターグループ(aa6);
	}
	敵ＦＰ強制登録(a1, a2, a3, a4, a5, a6);
	aa = 0;
	if (ＧＦ[84] == 1)
	{
		aa = 3;
	}
	if (ＧＦ[84] == 2)
	{
		aa = 6;
	}
	if (ＧＦ[84] == 3)
	{
		aa = 10;
	}
	gs[ii][21].Ｓレベル = aa1 + aa;
	gs[ii][22].Ｓレベル = aa2 + aa;
	gs[ii][23].Ｓレベル = aa3 + aa;
	gs[ii][24].Ｓレベル = aa4 + aa;
	gs[ii][25].Ｓレベル = aa5 + aa;
	gs[ii][26].Ｓレベル = aa6 + aa;
}

lint モンスターグループ(lint lv)
{
	lint ra = 0;
	lint aa = 0;
	if (lv > 40)
	{
		ra = RAND(3);
		if (ra == 1)
		{
			aa = 1227;
		}
		if (ra == 2)
		{
			aa = 1225;
		}
		if (ra == 3)
		{
			aa = 1228;
		}
		return aa;
	}
	if (lv > 31)
	{
		ra = RAND(5);
		if (ra == 1)
		{
			aa = 1211;
		}
		if (ra == 2)
		{
			aa = 1218;
		}
		if (ra == 3)
		{
			aa = 1219;
		}
		if (ra == 4)
		{
			aa = 1223;
		}
		if (ra == 5)
		{
			aa = 1242;
		}
		return aa;
	}
	if (lv > 24)
	{
		ra = RAND(4);
		if (ra == 1)
		{
			aa = 1210;
		}
		if (ra == 2)
		{
			aa = 1213;
		}
		if (ra == 3)
		{
			aa = 1226;
		}
		if (ra == 4)
		{
			aa = 1222;
		}
		return aa;
	}
	if (lv > 17)
	{
		ra = RAND(4);
		if (ra == 1)
		{
			aa = 1209;
		}
		if (ra == 2)
		{
			aa = 1215;
		}
		if (ra == 3)
		{
			aa = 1217;
		}
		if (ra == 4)
		{
			aa = 1224;
		}
		return aa;
	}
	if (lv > 10)
	{
		ra = RAND(4);
		if (ra == 1)
		{
			aa = 1208;
		}
		if (ra == 2)
		{
			aa = 1212;
		}
		if (ra == 3)
		{
			aa = 1221;
		}
		if (ra == 4)
		{
			aa = 1220;
		}
		return aa;
	}
	ra = RAND(3);
	if (ra == 1)
	{
		aa = 1214;
	}
	if (ra == 2)
	{
		aa = 1216;
	}
	if (ra == 3)
	{
		aa = 1220;
	}
	return aa;
	return 1220;
}

void モンスターズ２(lint a1, lint aa1, lint a2, lint aa2, lint a3, lint aa3, lint a4, lint aa4, lint a5, lint aa5, lint a6, lint aa6)
{
	lint ii = 0;
	lint iic = 0;
	敵ＦＰ強制登録(a1, a2, a3, a4, a5, a6);
	gs[ii][21].Ｓレベル = aa1;
	gs[ii][22].Ｓレベル = aa2;
	gs[ii][23].Ｓレベル = aa3;
	gs[ii][24].Ｓレベル = aa4;
	gs[ii][25].Ｓレベル = aa5;
	gs[ii][26].Ｓレベル = aa6;
}

void 仮地域データ表示(int iim)
{
	return;
}

lint アイテム使用(lint iic, lint no)
{
	lint ii = ◆Ｐｉｉ;
	lint aa = 0;
	if (no == 0)
	{
		return 99;
	}
	if (iic == 0)
	{
		return 99;
	}
	if (アイテム[no].種類 == 9)
	{
		return 99;
	}
	LOG_TADA("アイテム使用　" + アイテム[no].名前 + "（" + string(アイテム[no].種類) + "）　＞" + gs[ii][iic].名前 + "\n");
	if (no == 31 && gs[ii][iic].番号 != 1000 && gs[ii][iic].番号 != 1301 && gs[ii][iic].番号 != 1401 && gs[ii][iic].番号 != 1406)
	{
		return 99;
	}
	if (no == 32 && gs[ii][iic].番号 != 1000 && gs[ii][iic].番号 != 1003 && gs[ii][iic].番号 != 1301 && gs[ii][iic].番号 != 1403 && gs[ii][iic].番号 != 1407)
	{
		return 99;
	}
	if (アイテム[no].種類 == 2)
	{
		if (no == 58 && gs[ii][iic].兵種 != 1)
		{
			return 99;
		}
		if (no == 60 && gs[ii][iic].兵種 != 6)
		{
			return 99;
		}
		if (no == 59 && gs[ii][iic].兵種 != 3)
		{
			return 99;
		}
		if (no == 67 && gs[ii][iic].兵種 != 6)
		{
			return 99;
		}
		if (no == 40)
		{
			gs[ii][iic].兵数最大 = gs[ii][iic].兵数最大 / 2;
			if (gs[ii][iic].兵数最大 == 0)
			{
				gs[ii][iic].兵数最大 = 1;
			}
			if (gs[ii][iic].兵数 > gs[ii][iic].兵数最大)
			{
				gs[ii][iic].兵数 = gs[ii][iic].兵数最大;
			}
		}
		if (no == 86 && (gs[ii][iic].兵数最大 < 1000 || gs[ii][iic].兵種 != 3))
		{
			return 99;
		}
		if (no == 87 && (gs[ii][iic].兵数最大 < 1000 || gs[ii][iic].兵種 != 1))
		{
			return 99;
		}
		if (no == 88 && (gs[ii][iic].兵数最大 < 1000 || gs[ii][iic].兵種 != 6))
		{
			return 99;
		}
		if (no == 89 && (gs[ii][iic].兵数最大 < 1000 || gs[ii][iic].兵種 != 13))
		{
			return 99;
		}
		if (no == 90 && (gs[ii][iic].兵数最大 < 1000 || gs[ii][iic].兵種 != 8))
		{
			return 99;
		}
		gs[ii][iic].アイテム = no;
		フラグ調整();
		return 0;
	}
	if (アイテム[no].種類 == 3 && gs[ii][iic].アイテム == 0)
	{
		if (no == 72)
		{
			if (gs[ii][iic].兵種 != 1 || gs[ii][iic].性別 == 0)
			{
				return 99;
			}
			aa = 上限加算関数(1000, gs[ii][iic].兵数最大, 99999);
			aa = 上限加算関数(1000, gs[ii][iic].兵数, 99999);
			アイテム消去(72);
		}
		if (no == 74)
		{
			if (gs[ii][iic].兵種 != 2)
			{
				return 99;
			}
			aa = 上限加算関数(1000, gs[ii][iic].兵数最大, 99999);
			aa = 上限加算関数(1000, gs[ii][iic].兵数, 99999);
			アイテム消去(74);
		}
		if (no == 75)
		{
			if (gs[ii][iic].兵種 != 9)
			{
				return 99;
			}
			aa = 上限加算関数(1000, gs[ii][iic].兵数最大, 99999);
			aa = 上限加算関数(1000, gs[ii][iic].兵数, 99999);
			アイテム消去(75);
		}
		if (no == 73)
		{
			aa = 上限加算関数(5000, gs[ii][iic].兵数最大, 99999);
			aa = 上限加算関数(5000, gs[ii][iic].兵数, 99999);
			gs[ii][iic].攻撃基礎値 -= 2;
			gs[ii][iic].防御基礎値 -= 2;
			gs[ii][iic].知力基礎値 -= 2;
			gs[ii][iic].早さ基礎値 -= 2;
			gs[ii][iic].技数基礎値 -= 2;
			if (gs[ii][iic].技数基礎値 == 0)
			{
				gs[ii][iic].技数基礎値 = 1;
			}
			アイテム消去(73);
		}
		gs[ii][iic].アイテム = no;
		フラグ調整();
		return 0;
	}
	if (アイテム[no].種類 == 1)
	{
		汎用１(iic, 999);
		if (no == 91 && gs[ii][iic].兵種 == 3)
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 63;
			gs[ii][iic].技１ = 729;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職　ステータス上限が１２にＵＰ", "", "");
			return 0;
		}
		if (no == 92 && gs[ii][iic].兵種 == 1)
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 64;
			gs[ii][iic].技３ = 725;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職　ステータス上限が１２にＵＰ", "", "");
			return 0;
		}
		if (no == 93 && (gs[ii][iic].兵種 == 9 || gs[ii][iic].兵種 == 11))
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 67;
			gs[ii][iic].技３ = 727;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職　ステータス上限が１２にＵＰ", "", "");
			return 0;
		}
		if (no == 94 && gs[ii][iic].兵種 == 5)
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 65;
			gs[ii][iic].技３ = 738;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職　ステータス上限が１２にＵＰ", "", "");
			return 0;
		}
		if (no == 95 && gs[ii][iic].兵種 == 6)
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 66;
			if (gs[ii][iic].技３ < 100)
			{
				gs[ii][iic].技３ = 739;
			}
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職　ステータス上限が１２にＵＰ", "", "");
			return 0;
		}
		if (no == 96)
		{
			アイテム消去(no);
			lint gino = -1;
			gino = 345;
			gs[ii][iic].技能 = gino;
			フラグ調整();
			効果音(221, false);
			string hs = 行動名前[gino];
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "を習得", "", "");
			return 0;
		}
		if (no == 97 && gs[ii][iic].兵種 == 4)
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 72;
			gs[ii][iic].技３ = 743;
			if (gs[ii][iic].技数基礎値 == 1)
			{
				gs[ii][iic].技数基礎値 = 2;
			}
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職　ステータス上限が１２にＵＰ", "", "");
			return 0;
		}
		if (no == 98 && gs[ii][iic].兵種 == 2)
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 71;
			gs[ii][iic].技３ = 744;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職　ステータス上限が１２にＵＰ", "", "");
			return 0;
		}
		if (no == 99)
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 92;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職", "", "");
			return 0;
		}
		if (no == 100)
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 91;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職", "", "");
			return 0;
		}
		if (no == 112)
		{
			アイテム消去(no);
			ＳＭ(5000, 5, 0);
			return 0;
		}
		if (no == 113)
		{
			アイテム消去(no);
			◆コマンド実行数++;
			◆コマンド実行数++;
			ＰＳＭ(100, "行動回数が２回復", "ひい、いそがしい", "");
			return 0;
		}
		if (no == 115)
		{
			アイテム消去(no);
			lint gino = -1;
			gino = 745;
			gs[ii][iic].技能 = gino;
			フラグ調整();
			効果音(221, false);
			string hs = 行動名前[gino];
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "を習得", "", "");
			return 0;
		}
		if (no == 116)
		{
			アイテム消去(no);
			gs[ii][iic].技１ = 21;
			gs[ii][iic].兵種 = 3;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職", "", "");
			return 0;
		}
		if (no == 117)
		{
			アイテム消去(no);
			gs[ii][iic].兵種 = 2;
			gs[ii][iic].技３ = 13;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職", "", "");
			return 0;
		}
		if (no == 120)
		{
			アイテム消去(no);
			lint gino = -1;
			gino = 124;
			gs[ii][iic].技能 = gino;
			フラグ調整();
			効果音(221, false);
			string hs = 行動名前[gino];
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "を習得", "", "");
			return 0;
		}
		if (no == 121)
		{
			アイテム消去(no);
			lint gino = -1;
			gino = 150;
			gs[ii][iic].技４ = gino;
			フラグ調整();
			効果音(221, false);
			string hs = 行動名前[gino];
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "を習得", "", "");
			return 0;
		}
		if (no == 122)
		{
			アイテム消去(no);
			gs[ii][iic].技３ = 33;
			gs[ii][iic].兵種 = 6;
			フラグ調整();
			効果音(221, false);
			string hs = 文字列／兵種(gs[ii][iic].兵種);
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "に転職", "", "");
			return 0;
		}
		if (no == 126)
		{
			アイテム消去(no);
			lint gino = -1;
			gino = 71;
			gs[ii][iic].技４ = gino;
			フラグ調整();
			効果音(221, false);
			string hs = 行動名前[gino];
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "を習得", "", "");
			return 0;
		}
		if (no == 134)
		{
			アイテム消去(no);
			lint gino = -1;
			gino = 717;
			gs[ii][iic].技４ = gino;
			フラグ調整();
			効果音(221, false);
			string hs = 行動名前[gino];
			ＰＳＭ(gs[ii][iic].ＣＧ, hs + "を習得", "", "");
			return 0;
		}
		if (no == 12)
		{
			アイテム消去(no);
			汎用１(iic, 999);
			if (アイテム保有者番号(103) != 0)
			{
				ＳＭ(5051, 5, 0);
				キャラ好感度追加(5, iic, 999);
			}
			else
			{
				ＳＭ(5051, 4, 0);
				キャラ好感度追加(4, iic, 999);
			}
			return 0;
		}
		if (no == 13)
		{
			アイテム消去(no);
			汎用１(iic, 999);
			if (アイテム保有者番号(103) != 0)
			{
				ＳＭ(5051, 4, 0);
				キャラ好感度追加(4, iic, 999);
			}
			else
			{
				ＳＭ(5051, 3, 0);
				キャラ好感度追加(3, iic, 999);
			}
			return 0;
		}
		if (no == 14)
		{
			アイテム消去(no);
			汎用１(iic, 999);
			if (アイテム保有者番号(103) != 0)
			{
				ＳＭ(5051, 3, 0);
				キャラ好感度追加(3, iic, 999);
			}
			else
			{
				ＳＭ(5051, 2, 0);
				キャラ好感度追加(2, iic, 999);
			}
			return 0;
		}
		if (no == 15)
		{
			アイテム消去(no);
			汎用１(iic, 999);
			if (アイテム保有者番号(103) != 0)
			{
				ＳＭ(5051, 2, 0);
				キャラ好感度追加(2, iic, 999);
			}
			else
			{
				ＳＭ(5051, 1, 0);
				キャラ好感度追加(1, iic, 999);
			}
			return 0;
		}
		if (no == 28 && gs[ii][iic].建設基礎値 < 9)
		{
			アイテム消去(no);
			gs[ii][iic].建設基礎値++;
			フラグ調整();
			ＳＭ(5024, gs[ii][iic].建設, 0);
			return 0;
		}
		if (no == 29 && gs[ii][iic].交渉基礎値 < 9)
		{
			アイテム消去(no);
			gs[ii][iic].交渉基礎値++;
			フラグ調整();
			ＳＭ(5025, gs[ii][iic].交渉, 0);
			return 0;
		}
		if (no == 30 && gs[ii][iic].探索基礎値 < 9)
		{
			アイテム消去(no);
			gs[ii][iic].探索基礎値++;
			フラグ調整();
			ＳＭ(5026, gs[ii][iic].探索, 0);
			return 0;
		}
		if (no == 16)
		{
			if (gs[ii][iic].攻撃基礎値 < 6)
			{
				アイテム消去(no);
				gs[ii][iic].攻撃基礎値++;
				フラグ調整();
				汎用１(iic, 999);
				ＳＭ(5027, 0, 0);
				return 0;
			}
			else
			{
				ＳＭ(5047, 0, 0);
				return 0;
			}
		}
		if (no == 17)
		{
			if (gs[ii][iic].防御基礎値 < 6)
			{
				アイテム消去(no);
				gs[ii][iic].防御基礎値++;
				フラグ調整();
				汎用１(iic, 999);
				ＳＭ(5028, 0, 0);
				return 0;
			}
			else
			{
				ＳＭ(5047, 0, 0);
				return 0;
			}
		}
		if (no == 18)
		{
			if (gs[ii][iic].知力基礎値 < 6)
			{
				アイテム消去(no);
				gs[ii][iic].知力基礎値++;
				フラグ調整();
				汎用１(iic, 999);
				ＳＭ(5029, 0, 0);
				return 0;
			}
			else
			{
				ＳＭ(5047, 0, 0);
				return 0;
			}
		}
		if (no == 19)
		{
			if (gs[ii][iic].早さ基礎値 < 6)
			{
				アイテム消去(no);
				gs[ii][iic].早さ基礎値++;
				フラグ調整();
				汎用１(iic, 999);
				ＳＭ(5030, 0, 0);
				return 0;
			}
			else
			{
				ＳＭ(5047, 0, 0);
				return 0;
			}
		}
		if (no == 20)
		{
			if (gs[ii][iic].技数 < 6 && gs[ii][iic].兵種 != 4 && gs[ii][iic].兵種 != 1 && gs[ii][iic].兵種 != 6)
			{
				アイテム消去(no);
				gs[ii][iic].技数基礎値++;
				フラグ調整();
				ＳＭ(5055, gs[ii][iic].技数, 0);
				return 0;
			}
			else
			{
				ＳＭ(5076, 0, 0);
				return 0;
			}
		}
		if (no == 21 && gs[ii][iic].攻撃基礎値 < 10)
		{
			アイテム消去(no);
			gs[ii][iic].攻撃基礎値++;
			フラグ調整();
			汎用１(iic, 999);
			ＳＭ(5027, 0, 0);
			return 0;
		}
		if (no == 22 && gs[ii][iic].防御基礎値 < 10)
		{
			アイテム消去(no);
			gs[ii][iic].防御基礎値++;
			フラグ調整();
			汎用１(iic, 999);
			ＳＭ(5028, 0, 0);
			return 0;
		}
		if (no == 23 && gs[ii][iic].知力基礎値 < 10)
		{
			アイテム消去(no);
			gs[ii][iic].知力基礎値++;
			フラグ調整();
			汎用１(iic, 999);
			ＳＭ(5029, 0, 0);
			return 0;
		}
		if (no == 24 && gs[ii][iic].早さ基礎値 < 10)
		{
			アイテム消去(no);
			gs[ii][iic].早さ基礎値++;
			フラグ調整();
			汎用１(iic, 999);
			ＳＭ(5030, 0, 0);
			return 0;
		}
		if (no == 25)
		{
			if (gs[ii][iic].技数 < 6)
			{
				アイテム消去(no);
				gs[ii][iic].技数基礎値++;
				フラグ調整();
				ＳＭ(5055, gs[ii][iic].技数, 0);
				return 0;
			}
			else
			{
				ＳＭ(5076, 0, 0);
				return 0;
			}
		}
		if (no == 6)
		{
			if (gs[ii][iic].Ｓレベル >= gs[ii][iic].Ｓレベル上限)
			{
				return 99;
			}
			if (アイテム[no].個数 > 1 && gs[ii][iic].Ｓレベル + アイテム[no].個数 <= gs[ii][iic].Ｓレベル上限)
			{
				全角数字(アイテム[no].個数, -1, 0);
				string message = 全角数字(アイテム[no].個数, -1, 0) + "個の幸福ポックルを使用";
				選択肢(0, message);
				選択肢(1, "全部使う");
				選択肢(2, "１個だけ");
				選択肢(3, "やめる");
				lint rr = 選択(false, 0, 0);
				if (rr == 1)
				{
					ＣＳレベル加算(アイテム[no].個数, iic, ii);
					アイテム[no].個数 = 0;
					汎用１(iic, 999);
					ＳＭ(5008, 0, 0);
				}
				if (rr == 2)
				{
					アイテム消去(no);
					ＣＳレベル加算(1, iic, ii);
					汎用１(iic, 999);
					ＳＭ(5008, 0, 0);
				}
				if (rr == 3)
				{
					return 0;
				}
			}
			else
			{
				アイテム消去(no);
				ＣＳレベル加算(1, iic, ii);
				汎用１(iic, 999);
				ＳＭ(5008, 0, 0);
			}
			return 0;
		}
		if (no == 26)
		{
			アイテム消去(no);
			aa = 上限加算関数(100, gs[ii][iic].兵数最大, 99999);
			aa = 上限加算関数(100, gs[ii][iic].兵数, 99999);
			ＳＭ(5048, aa, 0);
			return 0;
		}
		if (no == 27)
		{
			アイテム消去(no);
			◆兵数制限ボーナス += 100;
			フラグ調整();
			汎用１(1000, 999);
			▲文字列 = "兵数制限が＋１００増えた";
			▲文字列２ = "がははははは@俺様の部隊を増員するのだ";
			ＳＭ(5054, 0, 0);
			return 0;
		}
		if (no == 8 && gs[ii][iic].兵数 < gs[ii][iic].兵数最大)
		{
			アイテム消去(no);
			aa = Ｃ兵数補充(gs[ii][iic].兵数最大 / 2, iic, ii);
			ＳＭ(5049, aa, 0);
			return 0;
		}
		if (no == 9 && gs[ii][iic].兵数 < gs[ii][iic].兵数最大)
		{
			アイテム消去(no);
			aa = Ｃ兵数補充(9999, iic, ii);
			ＳＭ(5049, aa, 0);
			return 0;
		}
		if (no == 10)
		{
			アイテム消去(no);
			勢力兵数補充(ii, 30);
			フラグ調整();
			return 0;
		}
		if (no == 7)
		{
			アイテム消去(no);
			勢力兵数補充(ii, 100);
			フラグ調整();
			return 0;
		}
		if (no == 11)
		{
			アイテム消去(no);
			gs[ii][iic].行動 = 0;
			ＳＭ(5050, 0, 0);
			return 0;
		}
	}
	LOG_TADA("ＥＲＲＯＲ　すっぽぬけ　アイテム使用　" + アイテム[no].名前 + "（" + string(アイテム[no].種類) + "）　＞" + gs[ii][iic].名前 + "\n");
	return 99;
}

void 合戦フラグ初期化(lint aa)
{
	if (aa == 1)
	{
		◆特定戦闘 = 0;
	}
	◆背景ＣＧ = 0;
	◆戦闘タイプ = 0;
	◆戦場タイプ = 0;
	◆攻防タイプ = 0;
	◆戦場国タイプ = 0;
	◆戦場対戦国 = 0;
	◆迷宮戦闘 = 0;
	◆戦闘時間制限 = 0;
	ＧＦ[115] = 0;
}

lint イベント合戦処理(lint ii2, lint フラグ)
{
	lint rr = 0;
	lint loop = 0;
	lint ret = 0;
	合戦フラグ初期化(0);
	◆戦場タイプ = 1;
	◆戦場国タイプ = 15;
	◆戦場対戦国 = ii2;
	◆攻防タイプ = 3;
	if (フラグ == 0)
	{
		ＦＰ初期化();
		rr = Ｐ武将／参加選択(1, 0, 0, 0, 9, 10357);
		if (rr == 0)
		{
			合戦フラグ初期化(1);
			return 0;
		}
	}
	rr = 合戦処理(◆攻防タイプ);
	ＦＰ戻し();
	合戦フラグ初期化(1);
	if (rr == 2)
	{
		return 0;
	}
	return 1;
}

lint イベント戦闘処理(lint ii2, lint フラグ, lint 時間制限)
{
	lint rr = 0;
	lint iic = 0;
	lint ii = 0;
	lint ＰＯＰ／◆戦場国タイプ = 0;
	ＰＯＰ／◆戦場国タイプ = ◆戦場国タイプ;
	合戦フラグ初期化(0);
	◆戦闘タイプ = 1;
	◆迷宮戦闘 = 0;
	◆戦場国タイプ = 15;
	if (◆特定戦闘 == 16)
	{
		◆戦場国タイプ = 11;
	}
	◆戦場対戦国 = 0;
	◆攻防タイプ = 3;
	ＧＦ[115] = 0;
	◆戦闘時間制限 = 1;
	if (時間制限 != 0)
	{
		◆戦闘時間制限 = 0;
		ＧＦ[115] = 時間制限;
	}
	if (フラグ == 0)
	{
		ＦＰ初期化();
		rr = Ｐ武将／参加選択(5, 0, 0, 0, 9, 10357);
		if (rr == 0)
		{
			合戦フラグ初期化(1);
			return 0;
		}
	}
	rr = 合戦処理(◆攻防タイプ);
	ＦＰ戻し();
	合戦フラグ初期化(1);
	◆戦場国タイプ = ＰＯＰ／◆戦場国タイプ;
	if (rr == 2)
	{
		return 0;
	}
	return 1;
}

lint 合戦メイン(lint フラグ, lint ii2, lint iim)
{
	lint 電撃戦 = 0;
	ＧＦ[481] = 0;
label0:
	lint ii = ◆Ｐｉｉ;
	lint loop = 0;
	lint rr = 0;
	lint aa = 0;
	lint iic = 0;
	lint ▲不戦勝 = 0;
	lint ▲戦場 = 0;
	lint ▲合戦結果 = 0;
	合戦フラグ初期化(0);
	◆攻防タイプ = フラグ;
	◆戦闘タイプ = 0;
	◆迷宮戦闘 = 0;
	◆戦場国タイプ = iim;
	◆戦場対戦国 = ii2;
	if (フラグ == 1)
	{
		if (国[iim].支配国 != ◆Ｐｉｉ)
		{
			▲戦場 = 国[iim].施設[国[iim].支配土地];
		}
		if (国[iim].支配国 == ◆Ｐｉｉ)
		{
			▲戦場 = 国[iim].施設[国[iim].支配土地 + 1];
		}
	}
	if (フラグ == 2)
	{
		if (国[iim].支配国 == ◆Ｐｉｉ)
		{
			▲戦場 = 国[iim].施設[国[iim].支配土地];
		}
		if (国[iim].支配国 != ◆Ｐｉｉ)
		{
			▲戦場 = 国[iim].施設[国[iim].支配土地 + 1];
		}
	}
	◆戦場タイプ = ▲戦場;
	if (フラグ == 1)
	{
		if (国[iim].支配土地 == 1)
		{
			rr = 敵ＦＰ登録(ii2, iim, 1);
		}
		else
		{
			rr = 敵ＦＰ登録(ii2, iim, 0);
		}
		if (rr == 0)
		{
			▲不戦勝 = 1;
		}
		if (電撃戦 == 0)
		{
			ＦＰ初期化();
			if (勢力[18].状態 == 3 && RAND(3) == 1)
			{
				固有武将登録(ii, 41, 1188, 18);
				gs[ii][41].作戦参加 = 1;
			}
			if (満足履歴[5] > 0 && RAND(2) == 1 && ii2 == 2)
			{
				固有武将登録(ii, 42, 1191, 12);
				gs[ii][42].作戦参加 = 2;
			}
			if (勢力[12].状態 == 3 && RAND(3) == 2)
			{
				固有武将登録(ii, 44, 1187, 12);
				gs[ii][44].作戦参加 = 4;
			}
			if (勢力[13].状態 == 3 && RAND(3) == 3)
			{
				固有武将登録(ii, 45, 1190, 13);
				gs[ii][45].作戦参加 = 5;
			}
			rr = Ｐ武将／参加選択(1, iim, フラグ, ii2, 9, 10357);
			gs[◆Ｐｉｉ][41].番号 = 0;
			gs[◆Ｐｉｉ][42].番号 = 0;
			gs[◆Ｐｉｉ][43].番号 = 0;
			gs[◆Ｐｉｉ][44].番号 = 0;
			gs[◆Ｐｉｉ][45].番号 = 0;
			gs[◆Ｐｉｉ][46].番号 = 0;
			if (rr == 0)
			{
				合戦フラグ初期化(1);
				return 0;
			}
		}
	}
	if (フラグ == 2)
	{
		rr = 敵ＦＰ登録(ii2, iim, 0);
		if (rr == 0)
		{
			合戦フラグ初期化(1);
			return 0;
		}
		ＦＰ初期化();
		if (勢力[8].状態 == 3 && RAND(3) == 1)
		{
			固有武将登録(ii, 41, 1200, 8);
			gs[ii][41].作戦参加 = 1;
		}
		if (満足履歴[5] > 1 && RAND(2) == 1 && ii2 == 2)
		{
			固有武将登録(ii, 42, 1191, 12);
			gs[ii][42].作戦参加 = 2;
		}
		if (勢力[5].状態 == 3 && RAND(3) == 2)
		{
			固有武将登録(ii, 43, 1194, 5);
			gs[ii][43].作戦参加 = 3;
		}
		if (勢力[11].状態 == 3 && RAND(3) == 3)
		{
			固有武将登録(ii, 44, 1189, 11);
			gs[ii][44].作戦参加 = 4;
		}
		aa = 5;
		if (EV("上杉／織田援軍初", -2147483648) == false)
		{
			aa = 1;
		}
		if (EV("上杉／初登場", -2147483648) == true && 勢力[5].状態 == 1 && RAND(aa) == 1 && ◆ターン % 2 == 0 && 国[iim].支配国 == 1 && ＧＦ[4] == 0)
		{
			▲ii2 = ii2;
			if (EV("上杉／織田援軍初", -2147483648) == false)
			{
				上杉／織田援軍初();
			}
			else
			{
				上杉／織田援軍汎用();
			}
			ＧＦ[4] = 1;
			固有武将登録(ii, 43, 1048, 5);
			gs[ii][43].作戦参加 = 3;
			gs[ii][43].兵数最大 = gs[ii][43].兵数最大 * 2;
			gs[ii][43].兵数 = gs[ii][43].兵数最大;
		}
		rr = Ｐ武将／参加選択(1, iim, フラグ, ii2, 9, 10358);
		gs[◆Ｐｉｉ][41].番号 = 0;
		gs[◆Ｐｉｉ][42].番号 = 0;
		gs[◆Ｐｉｉ][43].番号 = 0;
		gs[◆Ｐｉｉ][44].番号 = 0;
		gs[◆Ｐｉｉ][45].番号 = 0;
		gs[◆Ｐｉｉ][46].番号 = 0;
		if (rr == 0)
		{
			▲不戦勝 = 2;
		}
	}
	if (▲不戦勝 == 1)
	{
		ＳＭ(5038, 0, 0);
		▲合戦結果 = 合戦／勝利処理(ii2, iim, ▲戦場);
		ＩＶ合戦後(ii2, iim, 1, ▲合戦結果);
		ＦＰ戻し();
		合戦フラグ初期化(1);
		return 1;
	}
	if (▲不戦勝 == 2)
	{
		if (ＧＦ[6] > 0 && ＧＦ[6] < 5)
		{
			ＩＶ合戦前(ii2, iim, 106);
		}
		ＳＭ(5039, 0, 0);
		合戦／敗北処理(ii2, iim, ▲戦場);
		ＩＶ合戦後(ii2, iim, 2, ▲合戦結果);
		合戦フラグ初期化(1);
		return 1;
	}
	if (電撃戦 == 0)
	{
		rr = ＩＶ合戦前(ii2, iim, フラグ);
	}
	else
	{
		rr = 0;
	}
	if (rr == 3)
	{
		合戦フラグ初期化(1);
		return 0;
	}
	if (rr == 1)
	{
		if (フラグ == 1)
		{
			▲合戦結果 = 合戦／勝利処理(ii2, iim, ▲戦場);
		}
		ＩＶ合戦後(ii2, iim, 1, ▲合戦結果);
		ＦＰ戻し();
		合戦フラグ初期化(1);
		return 1;
	}
	if (rr == 2)
	{
		◆戦場対戦国 = ii2;
		ＳＭ(5011, 0, ii2);
		if (フラグ == 2)
		{
			合戦／敗北処理(ii2, iim, ▲戦場);
		}
		ＩＶ合戦後(ii2, iim, 2, ▲合戦結果);
		ＦＰ戻し();
		合戦フラグ初期化(1);
		return 1;
	}
	rr = 合戦処理(フラグ);
	if (rr == 1 && ◆ＤＢ合戦 == 1)
	{
		iic = ＧＳ番号取得(gs[0][乱ＦＰ取得()].番号, 999);
		汎用１(iic, 999);
		ＳＭ(5010, 0, ii2);
	}
	if (rr == 2 && ◆ＤＢ合戦 == 1)
	{
		ＳＭ(5011, 0, ii2);
	}
	if (rr == 2 && フラグ == 1 && 国[iim].要害[国[iim].支配土地] != 0 && 稼働ＦＰ数() != 0)
	{
		ＦＰ要害難易度変更(iim, 国[iim].支配土地);
	}
	if (rr == 1 && EV("魔軍／ヨシヒサ強襲Ａ", -2147483648) == false && EV("魔軍／ヨシヒサの作戦", -2147483648) == true && EV("魔軍／魔物将軍イスン", -2147483648) == false && ii2 == 2 && ＦＰ確認(1000, 0, 0, 0) == 1 && ＦＰ確認(1078, 0, 0, 0) == 0)
	{
		敵ＦＰ戻し(ii2);
		ＳヨシヒサＶＳ();
		合戦フラグ初期化(1);
		return 1;
	}
	ＧＦ[36]++;
	合戦／戦闘結果実行(rr, ii2);
	if (rr == 1)
	{
		iic = 乱ＦＰ取得();
		if (iic != 0 && gs[0][iic].好感度 < 7 && ◆予備０１ == 0)
		{
			汎用１(iic, 0);
			ＳＭ(5051, 1, 0);
			キャラ好感度追加(1, iic, 0);
		}
	}
	敵ＦＰ戻し(ii2);
	if (◆合戦略奪金 != 0)
	{
		ＳＭ(5017, ◆合戦略奪金, 0);
	}
	if (rr == 1)
	{
		ＧＦ[37]++;
		ＧＦ[144] = 1;
		if (フラグ == 1)
		{
			▲合戦結果 = 合戦／勝利処理(ii2, iim, ▲戦場);
		}
		ＩＶ合戦後(ii2, iim, 1, ▲合戦結果);
	}
	if (rr == 2)
	{
		ＧＦ[144] = 2;
		if (フラグ == 2)
		{
			合戦／敗北処理(ii2, iim, ▲戦場);
		}
		ＩＶ合戦後(ii2, iim, 2, ▲合戦結果);
	}
	if (フラグ == 1 && rr == 1 && ◆予備０８ == 1 && EV("電撃戦だよ", -2147483648) == true && EV("天界／ベゼルアイ弱体化", -2147483648) == false && ＧＦ[497] == 0)
	{
		if (◆Ｐｉｉ == 1 && ＧＦ[485] > 0 && (国[iim].支配国 != 1 && 国[iim].支配土地 > 0 || 国[iim].支配国 == 1 && 国[iim].支配土地 < 国[iim].支配土地最大))
		{
			ＧＦ[485] = 0;
			選択肢(0, "ブリッツクリーク");
			選択肢(1, "再進撃する");
			選択肢(2, "しない");
			rr = 選択(false, 0, 0);
			if (rr == 1)
			{
				効果音(127, false);
				string str1 = 国[iim].名前 + "に再進撃";
				string str2 = "";
				string str3 = "我に続け！";
				lint 電撃戦聖女 = 4577;
				ＧＦ[498] = 0;
				if (EV("セラクロラス／捕獲", -2147483648) == false)
				{
					str2 = str2 + "初期ターン−" + 全角数字(ＧＦ[481] * 5, -1, 0) + "@";
				}
				else if (RAND(5) == 1)
				{
					str2 = str2 + "★味方武将に速付与@";
					str3 = "われにつづけー。";
					電撃戦聖女 = 6665;
					ＧＦ[498] = 1;
				}
				if (EV("シャングリラ／ハウセスナース士官", -2147483648) == false)
				{
					str2 = str2 + "戦場補正−" + 全角数字(ＧＦ[481] * 10, -1, 0) + "％@";
				}
				else if (RAND(5) == 1)
				{
					str2 = str2 + "★地形効果＋１０％@";
					str3 = "続きなさい！";
					電撃戦聖女 = 6668;
					ＧＦ[498] = 2;
				}
				if (EV("自由都市／デンジャラスホール完了", -2147483648) == false)
				{
					str2 = str2 + "現在兵数減少" + 全角数字(ＧＦ[481] * 10, -1, 0) + "％@";
				}
				else if (RAND(5) == 1)
				{
					str2 = str2 + "★兵数回復＋１０％@";
					str3 = "わーれにつづけーっ♪";
					電撃戦聖女 = 5558;
					ＧＦ[498] = 3;
				}
				ＰＳＭ(電撃戦聖女, str2, str3, str1);
				電撃戦++;
				ＦＰ兵数ゼロ初期化戻し();
				goto label0;
			}
		}
	}
	if (◆Ｐｉｉ == 1 && フラグ == 1 && ◆予備０８ == 1 && EV("電撃戦だよ", -2147483648) == true && ＧＦ[481] > 1 && 支配国数(ii2) > 0 && EV("天界／ベゼルアイ弱体化", -2147483648) == false)
	{
		ＳＭ(5082, 0, ii2);
	}
	ＧＦ[481] = 0;
	ＧＦ[485] = 0;
	ＧＦ[498] = 0;
	ＦＰ戻し();
	合戦フラグ初期化(1);
	if (ＧＦ[503] == 1)
	{
		武将強制登録(1, 1336, 5);
		ＳＭ(5002, 0, 0);
		武将強制登録(1, 1337, 5);
		ＳＭ(5002, 0, 0);
		武将強制登録(1, 1338, 5);
		ＳＭ(5002, 0, 0);
		武将強制登録(1, 1339, 5);
		ＳＭ(5002, 0, 0);
		ＧＦ[503] = 0;
	}
	if (ＧＦ[504] == 1)
	{
		ＣＳレベル加算(5, 1000, 999);
		汎用１(1000, 999);
		ＳＭ(5008, 0, 0);
		ＧＦ[504] = 0;
	}
	return 1;
}

lint 合戦／勝利処理(lint ii2, lint iim, lint ▲戦場)
{
	lint loop = 0;
	lint rr = 0;
	lint ra = 0;
	lint iic = 0;
	if (◆戦闘タイプ == 0 && ＧＦ[84] > 0)
	{
		LOG_TADA("　戦闘結果　織田側被害　" + string(ＧＦ[172]) + "名\n");
		LOG_TADA("　戦闘結果　　敵側被害　" + string(ＧＦ[173]) + "名\n");
		if (ii2 == 14)
		{
			ＧＦ[173] -= 3000;
		}
		if (ＧＦ[173] > 3000 && ＧＦ[173] / 10 > ＧＦ[172])
		{
			if (◆予備０８ == 1 && ＧＦ[369] < 2)
			{
				LOG_TADA("　★戦果差大だが難易度のためUPなし\n");
			}
			else
			{
				LOG_TADA("　★戦果差大に付き　軍事力アップ★\n");
				軍事力増加(ii2);
				勢力[ii2].内緒補強++;
				if (勢力[ii2].内緒補強 > 2)
				{
					勢力[ii2].内緒補強 = 2;
				}
			}
		}
		ＧＦ[172] = 0;
		ＧＦ[173] = 0;
	}
	汎用１(1000, 999);
	if (国[iim].支配国 == ◆Ｐｉｉ)
	{
		国[iim].支配土地++;
		iic = ＦＰ技能取得(113, 1) + ＦＰ技能取得(370, 1);
		if (iic != 0 && 失った土地(iim) != 0)
		{
			汎用１(iic, 0);
			ＳＭ(5032, 0, 0);
			国[iim].支配土地++;
		}
		if (国[iim].支配土地 > 国[iim].支配土地最大)
		{
			国[iim].支配土地 = 国[iim].支配土地最大;
		}
		return 0;
	}
	if (国[iim].支配国 != ◆Ｐｉｉ)
	{
		if (国[iim].要害[国[iim].支配土地] != 0)
		{
			国[iim].要害[国[iim].支配土地] = 0;
		}
		ＧＦ[108] = 1;
		国[iim].支配土地--;
		勢力[ii2].残追加武将 += 2;
		if (国[iim].支配土地 == 0)
		{
			支配国変更(iim, ◆Ｐｉｉ);
			フラグ調整();
			ＧＦ[93] = 1;
			勢力[ii2].残追加武将 += 3;
			if (ＦＰ確認(1000, 0, 0, 0) == 1 && ii2 != 2 && ii2 != 16)
			{
				if (RAND(2) == 1)
				{
					エロ記録(75, 1);
				}
				if (RAND(3) == 1)
				{
					エロ記録(76, 1);
				}
				if (ii2 == 7)
				{
					エロ記録(77, 1);
				}
				if (ii2 == 14)
				{
					エロ記録(78, 1);
				}
				if (ii2 == 4)
				{
					エロ記録(80, 1);
				}
				エロ記録(81, RAND(2));
				エロ記録(82, RAND(5));
			}
			return 10;
		}
		if (◆予備０１ == 1)
		{
			return 0;
		}
		if (iim == 1)
		{
			for (; ; )
			{
				if (ＧＦ[58] == 0)
				{
					ＳＭ(5020, 58, 0);
					break;
				}
				if (ＧＦ[60] == 0)
				{
					ＳＭ(5020, 60, 0);
					break;
				}
				if (ＧＦ[61] == 0)
				{
					ＳＭ(5020, 61, 0);
					break;
				}
				if (ＧＦ[59] == 0)
				{
					ＳＭ(5020, 59, 0);
					break;
				}
				break;
			}
		}
		if (ＧＦ[146] < ◆ターン)
		{
			ＧＦ[146] += 3;
			ra = RAND(4);
			if (ra == 1)
			{
				ＳＭ(5019, 16, 0);
			}
			if (ra == 2)
			{
				ＳＭ(5019, 17, 0);
			}
			if (ra == 3)
			{
				ＳＭ(5019, 18, 0);
			}
			if (ra == 4)
			{
				ＳＭ(5019, 19, 0);
			}
		}
		if (ＧＦ[372] < ◆ターン)
		{
			ＧＦ[372] += 3;
			ra = RAND(4);
			if (ra == 1)
			{
				ＳＭ(5019, 12, 0);
			}
			if (ra == 2)
			{
				ＳＭ(5019, 13, 0);
			}
			if (ra == 3)
			{
				ＳＭ(5019, 14, 0);
			}
			if (ra == 4)
			{
				ＳＭ(5019, 15, 0);
			}
		}
		if (ＦＰ確認(1000, 0, 0, 0) == 1 && ii2 != 2 && ii2 != 16)
		{
			if (RAND(2) == 1)
			{
				エロ記録(75, 1);
			}
			if (RAND(3) == 1)
			{
				エロ記録(76, 1);
			}
			if (RAND(2) == 1 && ii2 == 7)
			{
				エロ記録(77, 1);
			}
			if (RAND(2) == 1 && ii2 == 14)
			{
				エロ記録(78, 1);
			}
			if (RAND(2) == 1 && ii2 == 4)
			{
				エロ記録(80, 1);
			}
			if (RAND(3) == 1)
			{
				エロ記録(73, 1);
			}
		}
		return 0;
	}
	return 0;
}

void 合戦／敗北処理(lint ii2, lint iim, lint ▲戦場)
{
	lint loop = 0;
	lint rr = 0;
	ＧＦ[27]++;
	if (国[iim].支配国 == ◆Ｐｉｉ)
	{
		国[iim].支配土地--;
		if (国[iim].支配土地 == 0)
		{
			if (ＧＦ[117] == 0 && (iim == 31 || iim == 30 || iim == 29 || iim == 28))
			{
				汎用１(1000, 999);
				ＳＭ(5020, 117, 0);
			}
			if (iim == 15 && ◆予備０１ == 0 && ◆予備０８ == 0)
			{
				尾張を取られた();
				ＧＡＭＥＯＶＥＲ(1);
			}
			支配国変更(iim, ii2);
			フラグ調整();
			return;
		}
		国[iim].進入勢力 = ii2;
		return;
	}
	if (国[iim].支配国 != ◆Ｐｉｉ)
	{
		国[iim].支配土地++;
	}
}

void Ｐ合戦／戦闘結果(lint フラグ)
{
	lint iic = 0;
	lint ra = 0;
	lint aa1 = 0;
	lint aa = 0;
	lint ii = 0;
	lint ii2 = ◆戦場対戦国;
	lint ▲キャラ = 0;
	lint ▲兵種 = 0;
	lint ▲死亡制限 = 2;
	lint catch = 2;
	lint ▲兵数制限 = 0;
	▲兵数制限 = 400 + 支配国数(999) * 50 + ◆兵数制限ボーナス;
	if (◆攻防タイプ == 3)
	{
		return;
	}
	for (iic = 11; iic < 17; iic++)
	{
		if (gs[ii][iic].番号 != 0 && gs[ii][iic].ＡＡ != 0 && gs[ii][iic].ＦＦ == 99)
		{
			gs[ii][iic].戦場生死確率 -= 5;
			for (; ; )
			{
				if (gs[ii][iic].アイテム == 49)
				{
					break;
				}
				if (gs[ii][iic].番号 == 1000 || gs[ii][iic].番号 == 1078)
				{
					gs[ii][iic].Ｆ戦闘結果 = 1000;
					break;
				}
				if (gs[ii][iic].重要 == 1)
				{
					break;
				}
				if (gs[ii][iic].戦場生死確率 > RAND(50))
				{
					break;
				}
				if (RAND(3) != 1)
				{
					break;
				}
				gs[ii][iic].Ｆ戦闘結果 = 1000;
				break;
			}
		}
		if (gs[ii][iic].番号 != 0 && gs[ii][iic].ＡＡ != 0 && gs[ii][iic].ＦＦ != 99 && フラグ == 1)
		{
			for (; ; )
			{
				▲兵種 = gs[ii][iic].兵種;
				aa = 10;
				if (▲兵種 == 3 || ▲兵種 == 5)
				{
					aa = 15;
				}
				if (▲兵種 == 4 || ▲兵種 == 2 || ▲兵種 == 12)
				{
					aa = 5;
				}
				if (▲兵種 == 10 || ▲兵種 == 11 || ▲兵種 == 8 || ▲兵種 == 9)
				{
					aa = 8;
				}
				if (兵種別兵士数最大(◆Ｐｉｉ, ▲兵種) == gs[ii][iic].ＢＢ)
				{
					aa -= 3;
				}
				if (ＦＰ技能取得(214, 1) != 0)
				{
					aa++;
				}
				if (◆予備０１ == 1)
				{
					aa = 0;
				}
				if (◆予備０８ == 1)
				{
					aa = aa * 2;
				}
				gs[ii][iic].Ｆ戦闘結果 = aa;
				break;
			}
		}
	}
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].ＡＡ != 0 && gs[ii][iic].Ｓ体力 == 0 && gs[ii][iic].番号 == 1035 && ＡＣＦ(1035, 9999) == 0)
		{
			gs[ii][iic].Ｓ体力最大 += 50;
		}
		if (gs[ii][iic].ＡＡ != 0 && gs[ii][iic].ＦＦ == 99)
		{
			for (; ; )
			{
				if (gs[ii][iic].重要 == 1)
				{
					break;
				}
				if (キャラ数(◆戦場対戦国) < 4)
				{
					break;
				}
				if (catch == 0)
				{
					break;
				}
				for (; ; )
				{
					if (EV("捕虜／初めて", -2147483648) == false)
					{
						break;
					}
					if (gs[ii][iic].兵種 == 25 || gs[ii][iic].兵種 == 24)
					{
						break;
					}
					if (gs[ii][iic].番号 == 999 && (◆戦場対戦国 == 2 || ◆戦場対戦国 == 16 || ◆戦場対戦国 == 17))
					{
						break;
					}
					aa = 5;
					if (Ｃ技能参加キャラ取得(111) != 0)
					{
						aa = 2;
					}
					if (Ｃ技能参加キャラ取得(219) != 0)
					{
						aa = 2;
					}
					if (Ｃ技能参加キャラ取得(219) != 0 && Ｃ技能参加キャラ取得(111) != 0)
					{
						aa = 1;
					}
					if (gs[ii][iic].Ｆ生死処理 == 2)
					{
						aa = 1;
					}
					if (gs[ii][iic].番号 == 1051)
					{
						aa = 1;
					}
					if (gs[ii][iic].番号 == 1026)
					{
						aa = 1;
					}
					if (RAND(aa) != 1)
					{
						break;
					}
					gs[ii][iic].Ｆ戦闘結果 = 2000;
					catch--;
					break;
				}
				for (; ; )
				{
					if (▲死亡制限 == 0)
					{
						break;
					}
					if (gs[ii][iic].番号 != 999)
					{
						break;
					}
					if (gs[ii][iic].Ｆ戦闘結果 == 2000)
					{
						break;
					}
					aa = 2;
					if (gs[ii][iic].兵種 == 25)
					{
						aa = 1;
					}
					if (gs[ii][iic].名前 == "安部平三")
					{
						aa = 1;
					}
					if (gs[ii][iic].名前 == "朝比奈百万")
					{
						aa = 1;
					}
					if (gs[ii][iic].Ｆ生死処理 == 1)
					{
						aa = 1;
					}
					if (RAND(aa) != 1)
					{
						break;
					}
					gs[ii][iic].Ｆ戦闘結果 = 1000;
					▲死亡制限--;
					break;
				}
				break;
			}
		}
	}
}

void 合戦／戦闘結果実行(lint フラグ, lint ii2)
{
	lint iic = 0;
	lint ra = 0;
	lint aa1 = 0;
	lint aa = 0;
	lint ii = 0;
	lint ▲キャラ = 0;
	lint ▲死亡制限 = 2;
	for (iic = 11; iic < 17; iic++)
	{
		if (gs[ii][iic].Ｆ戦闘結果 == 1000)
		{
			if (gs[ii][iic].番号 == 1000 && ◆予備０１ == 0)
			{
				if (キャラ確認(1001, 0, 0, 0) == 1)
				{
					ランス／戦死／シィル();
				}
				else
				{
					ランス／戦死／鈴女();
				}
				ＧＡＭＥＯＶＥＲ(1);
			}
			if (gs[ii][iic].番号 == 1078 && ◆予備０１ == 0)
			{
				香姫／戦死();
				ＧＡＭＥＯＶＥＲ(1);
			}
			ＡＣ(gs[ii][iic].番号, 99);
			gs[ii][iic].番号 = 0;
			LOG_TADA("　戦闘後処理　死亡［" + gs[ii][iic].名前 + "］ ※※　味方　※※\n");
		}
		if (gs[ii][iic].Ｆ戦闘結果 != 0 && gs[ii][iic].Ｆ戦闘結果 < 1000)
		{
			Ｃ兵数追加(gs[ii][iic].Ｆ戦闘結果, iic, ii);
		}
		gs[ii][iic].Ｆ戦闘結果 = 0;
	}
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].Ｆ戦闘結果 == 1000)
		{
			ＡＣ(gs[ii][iic].番号, 99);
			gs[ii][iic].番号 = 0;
			LOG_TADA("　戦闘後処理　死亡［" + gs[ii][iic].名前 + "］\n");
		}
		if (gs[ii][iic].Ｆ戦闘結果 == 2000)
		{
			gs[ii][iic].Ｆ戦闘結果 = 0;
			汎用１(iic, ii);
			捕虜登録(0, 1);
			gs[ii][iic].番号 = 0;
			LOG_TADA("　戦闘後処理　捕獲［" + gs[ii][iic].名前 + "］\n");
		}
		gs[ii][iic].Ｆ戦闘結果 = 0;
	}
}

lint 合戦処理(lint フラグ)
{
	lint loop = 0;
	lint rr = 0;
	lint iic = 0;
	lint ii = 0;
	lint ▲行動待ち時間 = 0;
	LOG_TADA("\n■■　合戦処理　■■\n");
	if (◆戦闘タイプ == 0)
	{
		LOG_TADA("合戦　ＶＳ" + 勢力[◆戦場対戦国].名前 + "　場所：" + 国[◆戦場国タイプ].名前 + "　");
		if (◆戦場タイプ == 0)
		{
			LOG_TADA("−−");
		}
		if (◆戦場タイプ == 1)
		{
			LOG_TADA("砦　");
		}
		if (◆戦場タイプ == 2)
		{
			LOG_TADA("屋敷");
		}
		if (◆戦場タイプ == 3)
		{
			LOG_TADA("城　");
		}
		if (◆戦場タイプ == 4)
		{
			LOG_TADA("要害");
		}
		if (◆戦場タイプ == 7)
		{
			LOG_TADA("迷宮");
		}
		LOG_TADA("\n");
		LOG_TADA("　織田家　　　　" + string(合戦兵力取得(1)) + "名\n");
		LOG_TADA("　" + 勢力[◆戦場対戦国].名前 + "　　　　　" + string(合戦兵力取得(2)) + "名\n");
	}
	if (◆戦闘タイプ == 1)
	{
		LOG_TADA("戦闘　");
		if (◆迷宮戦闘 == 0)
		{
			LOG_TADA("　−−−−　\n");
		}
		if (◆迷宮戦闘 == 1)
		{
			LOG_TADA("　迷宮−−　\n");
		}
	}
	if (◆特定戦闘 != 0)
	{
		LOG_TADA("　★特定戦闘（" + string(◆特定戦闘) + "）\n");
	}
	if (◆戦闘時間制限 != 0 && ◆戦闘時間制限 != 1)
	{
		LOG_TADA("　★時間制限戦闘（" + string(◆戦闘時間制限) + "）\n");
	}
	if (◆戦闘タイプ == 0)
	{
		for (iic = 21; iic < 27; iic++)
		{
			if (gs[0][iic].番号 != 0)
			{
				LOG_TADA("　" + 固定文字列(gs[0][iic].名前, 8) + "（" + 文字列／兵種(gs[0][iic].兵種) + "）" + string(gs[0][iic].兵数) + "名　");
				if (gs[0][iic].ＡＡ != 0)
				{
					LOG_TADA("＜戻り有り＞");
				}
				if (gs[0][iic].重要 == 1)
				{
					LOG_TADA("＜重要＞");
				}
				LOG_TADA("\n");
			}
		}
	}
	if (◆戦闘タイプ == 1)
	{
		for (iic = 21; iic < 27; iic++)
		{
			if (gs[0][iic].番号 != 0)
			{
				LOG_TADA("　" + 固定文字列(gs[0][iic].名前, 8) + "（" + 文字列／職種(gs[0][iic].Ｓ職種) + "）" + string(gs[0][iic].Ｓレベル) + "ＬＶ　");
				if (gs[0][iic].ＡＡ != 0)
				{
					LOG_TADA("＜戻り有り＞");
				}
				if (gs[0][iic].重要 == 1)
				{
					LOG_TADA("＜重要＞");
				}
				LOG_TADA("\n");
			}
		}
	}
	if (◆ＤＢ合戦 == 1)
	{
		LOG_TADA("■　DBフラグで　自動勝利　■\n");
		LOG_TADA("\n");
		for (loop = 21; loop < 27; loop++)
		{
			gs[0][loop].兵数 = 0;
			gs[0][loop].ＦＦ = 99;
		}
		Ｐ合戦／戦闘結果(rr);
		ＧＦ[481]++;
		ＧＦ[485]++;
		return 1;
	}
	rr = Ｐ合戦処理(フラグ, ◆戦場対戦国, ◆戦場国タイプ, ◆戦場タイプ);
	LOG_TADA("■■　合戦終了　■■");
	if (rr == 1)
	{
		LOG_TADA("　勝利　\n");
	}
	if (rr == 2)
	{
		LOG_TADA("　敗北　\n");
	}
	if (rr == 3)
	{
		LOG_TADA("　引き分け　\n");
	}
	return rr;
}

void 合戦／初期化()
{
	lint loop = 0;
	lint ra = 0;
	lint ii = 0;
	lint rr = 0;
	lint aa = 0;
	lint aa1 = 0;
	lint aa2 = 0;
	lint aa3 = 0;
	lint iic = 0;
	lint FF = 0;
	lint iic2 = 0;
	◆合戦ターン = 0;
	if (ＧＦ[115] != 0)
	{
		◆合戦ターン = ＧＦ[115];
	}
	◆経過時間 = 0;
	aa = 合戦兵力取得(1) + 合戦兵力取得(2);
	◆被害総数１ = aa / 10;
	◆被害総数２ = aa / 10;
	◆戦果補正１ = 0;
	◆戦果補正２ = 0;
	◆合戦略奪金 = 0;
	◆援軍台詞 = 0;
	◆合戦補正１ = 0;
	◆合戦補正２ = 0;
	ＧＦ[170] = 合戦兵力取得(1);
	ＧＦ[171] = 合戦兵力取得(2);
	ＧＦ[172] = 0;
	ＧＦ[173] = 0;
	◆背景ＣＧ = 0;
	合戦／初期化／背景ＣＧ();
	for (loop = 1; loop < 100; loop++)
	{
		BOSS[loop] = false;
	}
	for (loop = 1; loop < 15; loop++)
	{
		順番番号[loop] = 0;
		順番時間[loop] = 999;
	}
	for (loop = 11; loop < 27; loop++)
	{
		ＧＳ初期化／合戦部分(0, loop);
		gs[ii][loop].Ｆ集中 = 99;
		gs[ii][loop].予備１ = 0;
		if (◆戦闘タイプ == 1 && gs[ii][loop].技セット == 0)
		{
			Ｃ技セット変更(ii, loop, 1);
		}
		if (gs[ii][loop].所属勢力 == 0)
		{
			gs[ii][loop].所属勢力 = ◆戦場対戦国;
		}
	}
	for (iic = 11; iic < 17; iic++)
	{
		gs[ii][iic].戦闘参加回数++;
		if (◆戦闘タイプ == 1)
		{
			gs[ii][iic].現在技数 = gs[ii][iic].迷宮技数;
		}
	}
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].番号 != 0 && ◆戦闘タイプ == 1)
		{
			if (gs[ii][iic].Ｓレベル == 0)
			{
				LOG_TADA("ＥＲＲＯＲ　ソロ戦闘なのに　敵にレベルが入っていません\n");
			}
			Ｓ体力計算(ii, iic);
			gs[ii][iic].Ｓ体力 = gs[ii][iic].Ｓ体力最大;
		}
	}
	if (◆特定戦闘 == 15)
	{
		gs[0][22].Ｓ体力 = gs[0][22].Ｓ体力最大 / 2;
	}
	if (ＧＦ[467] == 0 && ◆特定戦闘 == 97)
	{
		gs[0][22].Ｓ体力 = 120000 - ＧＦ[216] * 1000 - ＧＦ[163] * 10000 - ＧＦ[367] * 10000;
		if (ＧＦ[369] == 0)
		{
			gs[0][22].Ｓ体力 = 倍率計算関数(gs[0][22].Ｓ体力, 50);
		}
		else
		{
			gs[0][22].Ｓ体力 = 倍率計算関数(gs[0][22].Ｓ体力, 100);
		}
		if (gs[0][22].Ｓ体力 < 7777)
		{
			gs[0][22].Ｓ体力 = 7777;
		}
	}
	if (◆戦場タイプ == 3)
	{
		if (◆攻防タイプ == 1)
		{
			戦果補正(0, 40, "防御側：城");
			◆合戦補正２ = 20;
		}
		if (◆攻防タイプ == 2)
		{
			戦果補正(40, 0, "防御側：城");
			◆合戦補正１ = 20;
		}
		if (◆攻防タイプ == 1 && ◆戦場対戦国 == 22 && ◆戦場国タイプ == 7 && EV("自由都市／マリアをさらう", -2147483648) == false)
		{
			◆合戦補正２ = 100;
		}
	}
	if (◆戦場タイプ == 2)
	{
		if (◆攻防タイプ == 1)
		{
			戦果補正(0, 20, "防御側：屋敷");
			◆合戦補正２ = 10;
		}
		if (◆攻防タイプ == 2)
		{
			戦果補正(20, 0, "防御側：屋敷");
			◆合戦補正１ = 10;
		}
		if (◆攻防タイプ == 1 && ◆戦場対戦国 == 7 && ◆戦場国タイプ == 11)
		{
			◆合戦補正２ = 50;
		}
	}
	if (◆戦場タイプ == 1)
	{
		if (◆攻防タイプ == 1)
		{
			戦果補正(0, 10, "防御側：砦");
		}
		if (◆攻防タイプ == 2)
		{
			戦果補正(10, 0, "防御側：砦");
		}
	}
	if ((◆攻防タイプ == 1 || ◆攻防タイプ == 2) && 国[◆戦場国タイプ].合戦準備 != 0)
	{
		◆合戦補正１ += 国[◆戦場国タイプ].合戦準備;
		国[◆戦場国タイプ].合戦準備 = 0;
	}
	if (Ｃ技能総数取得(723, 1) > 0)
	{
		◆合戦補正１ += 10;
	}
	if (ＧＦ[486] == 1)
	{
		for (iic = 11; iic < 17; iic++)
		{
			gs[ii][iic].現在技数 -= 3;
			if (gs[ii][iic].現在技数 == 0)
			{
				gs[ii][iic].現在技数 = 1;
			}
		}
		ＧＦ[486] = 0;
	}
	合戦補正の補正();
	lint clausen = 0;
	for (iic = 11; iic < 27; iic++)
	{
		if (gs[ii][iic].技能 == 232)
		{
			clausen = 1;
		}
	}
	if (ＧＦ[481] > 0 && ◆戦闘タイプ == 0)
	{
		if (EV("セラクロラス／捕獲", -2147483648) == false)
		{
			◆合戦ターン += 5 * ＧＦ[481];
		}
		if (EV("シャングリラ／ハウセスナース士官", -2147483648) == false)
		{
			◆合戦補正２ += 10 * ＧＦ[481];
		}
		if (EV("自由都市／デンジャラスホール完了", -2147483648) == false)
		{
			for (iic2 = 11; iic2 < 17; iic2++)
			{
				gs[ii][iic2].兵数 = 倍率計算関数(gs[ii][iic2].兵数, 100 - ＧＦ[481] * 10);
				if (gs[ii][iic2].兵数 == 0)
				{
					gs[ii][iic2].兵数 = 1;
				}
			}
		}
	}
	if (ＧＦ[498] > 0 && ◆戦闘タイプ == 0)
	{
		if (ＧＦ[498] == 1)
		{
			for (iic2 = 11; iic2 < 17; iic2++)
			{
				gs[ii][iic].早さ付与 = 50;
			}
		}
		if (ＧＦ[498] == 2)
		{
			◆合戦補正１ += 10;
		}
		if (ＧＦ[498] == 3)
		{
			for (iic2 = 11; iic2 < 17; iic2++)
			{
				gs[ii][iic2].兵数 = 倍率計算関数(gs[ii][iic2].兵数, 110);
				if (gs[ii][iic2].兵数 > gs[ii][iic2].兵数最大)
				{
					gs[ii][iic2].兵数 = gs[ii][iic2].兵数最大;
				}
			}
		}
	}
	for (iic = 11; iic < 27; iic++)
	{
		if (gs[ii][iic].番号 == 0)
		{
			continue;
		}
		FF = 1;
		if (iic > 20)
		{
			FF = 2;
		}
		if (gs[ii][iic].兵種 == 102)
		{
			gs[ii][iic].ＦＦ = 21;
			gs[ii][iic].ＦＦＥ = 70;
		}
		if (gs[ii][iic].兵種 == 103)
		{
			gs[ii][iic].ＦＦ = 21;
			gs[ii][iic].ＦＦＥ = 50;
		}
		if (gs[ii][iic].兵種 == 63)
		{
			gs[ii][iic].ＦＦ = 21;
			gs[ii][iic].ＦＦＥ = 150;
		}
		if (gs[ii][iic].兵種 == 3)
		{
			gs[ii][iic].ＦＦ = 21;
			gs[ii][iic].ＦＦＥ = 50;
		}
		if (Ｃ技能取得(iic, ii) == 127 || Ｃ技能取得(iic, ii) == 716)
		{
			gs[ii][iic].ＦＦ = 21;
			gs[ii][iic].ＦＦＥ = 120;
		}
		if (Ｃ技能取得(iic, ii) == 385 || Ｃ技能取得(iic, ii) == 715)
		{
			gs[ii][iic].ＦＦ = 23;
			gs[ii][iic].ＦＦＥ = 150;
		}
		if (gs[ii][iic].アイテム == 68 && ◆戦闘タイプ == 0)
		{
			◆合戦ターン += 5;
		}
		if (gs[ii][iic].アイテム == 48 && ◆戦場タイプ == 1)
		{
			gs[ii][iic].攻撃付与 = 50;
			gs[ii][iic].防御付与 = 50;
			gs[ii][iic].知力付与 = 50;
			gs[ii][iic].早さ付与 = 50;
		}
		if (gs[ii][iic].アイテム == 47 && ◆戦場タイプ == 3)
		{
			gs[ii][iic].攻撃付与 = 50;
			gs[ii][iic].防御付与 = 50;
			gs[ii][iic].知力付与 = 50;
			gs[ii][iic].早さ付与 = 50;
		}
		if (gs[ii][iic].アイテム == 46 && ◆戦場タイプ == 7)
		{
			gs[ii][iic].攻撃付与 = 50;
			gs[ii][iic].防御付与 = 50;
			gs[ii][iic].知力付与 = 50;
			gs[ii][iic].早さ付与 = 50;
		}
		if (gs[ii][iic].技能 == 718)
		{
			gs[ii][iic].防御付与 = 50;
			gs[ii][iic].知力付与 = 50;
		}
		if (gs[ii][iic].技能 == 119 && RAND(3) != 1)
		{
			gs[ii][iic].攻撃付与 = 50;
		}
		if (gs[ii][iic].技能 == 239)
		{
			gs[ii][iic].攻撃付与 = 20;
			gs[ii][iic].防御付与 = 50;
		}
		if (gs[ii][iic].技能 == 120 && RAND(3) != 1)
		{
			gs[ii][iic].防御付与 = 50;
		}
		if (gs[ii][iic].技能 == 121 && RAND(3) != 1)
		{
			gs[ii][iic].知力付与 = 50;
		}
		if (gs[ii][iic].技能 == 122 && RAND(3) != 1)
		{
			gs[ii][iic].早さ付与 = 50;
		}
		if (gs[ii][iic].技能 == 128 || gs[ii][iic].技能 == 129)
		{
			gs[ii][iic].攻撃付与 = 50;
			gs[ii][iic].防御付与 = 50;
			gs[ii][iic].知力付与 = 50;
			gs[ii][iic].早さ付与 = 50;
		}
		if (gs[ii][iic].技能 == 370)
		{
			gs[ii][iic].攻撃付与 = 50;
			gs[ii][iic].防御付与 = 50;
			gs[ii][iic].知力付与 = 50;
			gs[ii][iic].早さ付与 = 50;
		}
		lint 付与率 = 0;
		if (gs[ii][iic].技能 == 741)
		{
			付与率 = ＦＰ技能総数取得(741, 1) * 10;
			gs[ii][iic].攻撃付与 = 付与率;
			gs[ii][iic].防御付与 = 付与率;
			gs[ii][iic].知力付与 = 付与率;
			gs[ii][iic].早さ付与 = 付与率;
		}
		if (gs[ii][iic].技能 == 304)
		{
			付与率 = 30;
			gs[0][11].攻撃付与 = 付与率;
			gs[0][11].防御付与 = 付与率;
			gs[0][11].知力付与 = 付与率;
			gs[0][11].早さ付与 = 付与率;
			gs[0][12].攻撃付与 = 付与率;
			gs[0][12].防御付与 = 付与率;
			gs[0][12].知力付与 = 付与率;
			gs[0][12].早さ付与 = 付与率;
			gs[0][13].攻撃付与 = 付与率;
			gs[0][13].防御付与 = 付与率;
			gs[0][13].知力付与 = 付与率;
			gs[0][13].早さ付与 = 付与率;
			gs[0][14].攻撃付与 = 付与率;
			gs[0][14].防御付与 = 付与率;
			gs[0][14].知力付与 = 付与率;
			gs[0][14].早さ付与 = 付与率;
			gs[0][15].攻撃付与 = 付与率;
			gs[0][15].防御付与 = 付与率;
			gs[0][15].知力付与 = 付与率;
			gs[0][15].早さ付与 = 付与率;
			gs[0][16].攻撃付与 = 付与率;
			gs[0][16].防御付与 = 付与率;
			gs[0][16].知力付与 = 付与率;
			gs[0][16].早さ付与 = 付与率;
		}
		if (gs[ii][iic].技能 == 237)
		{
			gs[ii][iic].攻撃付与 = 20;
			gs[ii][iic].防御付与 = 20;
			gs[ii][iic].知力付与 = 100;
			gs[ii][iic].早さ付与 = 20;
		}
		if (gs[ii][iic].技能 == 303)
		{
			gs[ii][iic].攻撃付与 = 60;
			gs[ii][iic].防御付与 = 60;
			gs[ii][iic].知力付与 = 60;
			gs[ii][iic].早さ付与 = 60;
		}
		if (gs[ii][iic].技能 == 337 && ＦＰ確認(1078, 0, 0, 0) == 1)
		{
			gs[ii][iic].攻撃付与 = 50;
			gs[ii][iic].防御付与 = 50;
			gs[ii][iic].知力付与 = 50;
			gs[ii][iic].早さ付与 = 50;
		}
		if (gs[ii][iic].技能 == 750)
		{
			gs[ii][iic].攻撃付与 = 50;
			gs[ii][iic].防御付与 = 50;
			gs[ii][iic].知力付与 = 50;
			gs[ii][iic].早さ付与 = 50;
		}
		if (gs[ii][iic].技能 == 375 || gs[ii][iic].技能 == 353 || gs[ii][iic].技能 == 356)
		{
			gs[ii][iic].知力付与 = 75;
		}
		if (gs[ii][iic].技能 == 371)
		{
			gs[ii][iic].知力付与 = 100;
		}
		if (gs[ii][iic].技能 == 382)
		{
			gs[ii][iic].知力付与 = 150;
		}
		if (gs[ii][iic].技能 == 361)
		{
			gs[ii][iic].知力付与 = 200;
		}
		if (gs[ii][iic].技能 == 372)
		{
			gs[ii][iic].早さ付与 = 75;
		}
		if (gs[ii][iic].技能 == 373)
		{
			gs[ii][iic].早さ付与 = 100;
		}
		if (gs[ii][iic].技能 == 600)
		{
			gs[ii][iic].攻撃付与 = 30;
			gs[ii][iic].防御付与 = 30;
			gs[ii][iic].知力付与 = 30;
			gs[ii][iic].早さ付与 = 30;
		}
		if (gs[ii][iic].技能 == 601 || gs[ii][iic].技能 == 602 || gs[ii][iic].技能 == 772)
		{
			gs[ii][iic].攻撃付与 = 40;
			gs[ii][iic].防御付与 = 40;
			gs[ii][iic].知力付与 = 40;
			gs[ii][iic].早さ付与 = 40;
		}
		if (gs[ii][iic].技能 == 759)
		{
			lint mr = 魔人合体累計() * 5;
			gs[ii][iic].攻撃付与 = mr;
			gs[ii][iic].防御付与 = mr;
			gs[ii][iic].知力付与 = mr;
			gs[ii][iic].早さ付与 = mr;
		}
		if (gs[ii][iic].技能 == 123)
		{
			aa = gs[ii][iic].兵数 / 250;
			if (aa == 0)
			{
				aa = 1;
			}
			if (FF == 1)
			{
				for (iic2 = 11; iic2 < 17; iic2++)
				{
					if (gs[ii][iic2].性別 == 0 && aa != 0)
					{
						gs[ii][iic2].攻撃付与 = 40;
						aa--;
					}
				}
			}
			if (FF == 2)
			{
				for (iic2 = 21; iic2 < 27; iic2++)
				{
					if (gs[ii][iic2].性別 == 0 && aa != 0)
					{
						gs[ii][iic2].攻撃付与 = 40;
						aa--;
					}
				}
			}
		}
		if (gs[ii][iic].技能 == 136 && ◆戦闘タイプ == 0)
		{
			◆合戦ターン += 5;
		}
		if (gs[ii][iic].技能 == 809 && ◆戦闘タイプ == 0)
		{
			◆合戦ターン += 10;
		}
		if (gs[ii][iic].技能 == 137)
		{
			if (FF == 1)
			{
				戦果補正(10, 0, "初期戦果技能");
			}
			if (FF == 2 && clausen == 0)
			{
				戦果補正(0, 10, "初期戦果技能");
			}
		}
		if (gs[ii][iic].技能 == 338)
		{
			if (FF == 1)
			{
				戦果補正(30, 0, "初期戦果技能");
			}
			if (FF == 2 && clausen == 0)
			{
				戦果補正(0, 30, "初期戦果技能");
			}
		}
		if (gs[ii][iic].技能 == 233)
		{
			if (FF == 1)
			{
				戦果補正(5, 0, "死神");
				for (iic2 = 21; iic2 < 27; iic2++)
				{
					gs[ii][iic2].現在技数--;
					if (gs[ii][iic2].現在技数 == 0)
					{
						gs[ii][iic2].現在技数 = 1;
					}
				}
			}
			if (FF == 2 && clausen == 0)
			{
				戦果補正(0, 5, "死神");
				for (iic2 = 11; iic2 < 17; iic2++)
				{
					gs[ii][iic2].現在技数--;
					if (gs[ii][iic2].現在技数 == 0)
					{
						gs[ii][iic2].現在技数 = 1;
					}
				}
			}
		}
		if (gs[ii][iic].技能 == 103 || gs[ii][iic].技能 == 391 || gs[ii][iic].技能 == 395 || gs[ii][iic].技能 == 392 || gs[ii][iic].技能 == 387 || gs[ii][iic].技能 == 388 || gs[ii][iic].技能 == 389 || gs[ii][iic].技能 == 390)
		{
			if (FF == 1)
			{
				戦果補正(5, 0, "軍神");
				for (iic2 = 21; iic2 < 27; iic2++)
				{
					gs[ii][iic2].現在技数--;
					if (gs[ii][iic2].現在技数 == 0)
					{
						gs[ii][iic2].現在技数 = 1;
					}
				}
			}
			if (FF == 2 && clausen == 0)
			{
				戦果補正(0, 5, "軍神");
				for (iic2 = 11; iic2 < 17; iic2++)
				{
					gs[ii][iic2].現在技数--;
					if (gs[ii][iic2].現在技数 == 0)
					{
						gs[ii][iic2].現在技数 = 1;
					}
				}
			}
		}
		if (gs[ii][iic].技能 == 104)
		{
			if (FF == 1)
			{
				戦果補正(10, 0, "帝");
				for (iic2 = 21; iic2 < 27; iic2++)
				{
					gs[ii][iic2].現在技数 -= 2;
					if (gs[ii][iic2].現在技数 == 0)
					{
						gs[ii][iic2].現在技数 = 1;
					}
				}
			}
			if (FF == 2 && clausen == 0)
			{
				戦果補正(0, 10, "帝");
				for (iic2 = 11; iic2 < 17; iic2++)
				{
					gs[ii][iic2].現在技数 -= 2;
					if (gs[ii][iic2].現在技数 == 0)
					{
						gs[ii][iic2].現在技数 = 1;
					}
				}
			}
		}
		if (gs[ii][iic].技能 == 313)
		{
			if (FF == 1)
			{
				for (iic = 11; iic < 17; iic++)
				{
					gs[ii][iic].現在技数 -= 3;
					if (gs[ii][iic].現在技数 < 0)
					{
						gs[ii][iic].現在技数 = 0;
					}
				}
				for (iic2 = 21; iic2 < 27; iic2++)
				{
					gs[ii][iic2].現在技数 -= 3;
					if (gs[ii][iic2].現在技数 == 0)
					{
						gs[ii][iic2].現在技数 = 1;
					}
				}
			}
		}
		if (gs[ii][iic].技能 == 176)
		{
			for (iic2 = 21; iic2 < 27; iic2++)
			{
				if (gs[ii][iic2].番号 != 0)
				{
					gs[ii][iic2].攻撃付与 = 30;
					gs[ii][iic2].防御付与 = 30;
					gs[ii][iic2].知力付与 = 30;
					gs[ii][iic2].早さ付与 = 30;
				}
			}
		}
		if (gs[ii][iic].技能 == 800)
		{
			gs[ii][iic].現在技数 -= 2;
			if (gs[ii][iic].現在技数 < 0)
			{
				gs[ii][iic].現在技数 = 0;
			}
		}
		if (gs[ii][iic].番号 == 1010 && ＡＣＦ(1010, 9999) == 2 && ＦＰ確認(1011, 0, 0, 0) == 1)
		{
			gs[ii][iic].攻撃付与 = 50;
			gs[ii][iic].防御付与 = 50;
		}
		if (gs[ii][iic].番号 == 1011 && ＡＣＦ(1010, 9999) == 2 && ＦＰ確認(1010, 0, 0, 0) == 1)
		{
			gs[ii][iic].攻撃付与 = 50;
			gs[ii][iic].防御付与 = 50;
		}
		if (gs[ii][iic].アイテム == 70)
		{
			gs[ii][iic].Ｆ式神 = 1;
		}
		if (gs[ii][iic].技能 == 736)
		{
			gs[ii][iic].Ｆ式神 = 1;
		}
		if (gs[ii][iic].兵種 == 13 || gs[ii][iic].兵種 == 64 || gs[ii][iic].兵種 == 67 || アイテム確認(140, iic, ii) == 1)
		{
			if (◆戦闘タイプ == 0)
			{
				aa2 = gs[ii][iic].知力 * 5;
				aa3 = gs[ii][iic].知力;
				if (アイテム確認(107, iic, ii) == 1)
				{
					aa3 = (aa3 * 4) / 3;
					if (gs[ii][iic].技能 == 356)
					{
						aa3 = (aa3 * 3) / 2;
					}
				}
			}
			if (◆戦闘タイプ == 1)
			{
				aa2 = gs[ii][iic].Ｓレベル;
				aa3 = 4;
				if (アイテム確認(107, iic, ii) == 1)
				{
					aa3 = (aa3 * 4) / 3;
				}
			}
			for (loop = 1; loop < 30; loop++)
			{
				if (aa3 == 0)
				{
					break;
				}
				if (FF == 1)
				{
					iic2 = 乱稼働ＦＰ取得(1);
				}
				if (FF == 2)
				{
					iic2 = 乱稼働ＦＰ取得(2);
				}
				if (iic2 == 0)
				{
					break;
				}
				aa1 = RAND(4);
				aa = 0;
				if (aa1 == 1 && gs[ii][iic2].攻撃付与 < aa2)
				{
					gs[ii][iic2].攻撃付与 = aa2;
					aa = 1;
				}
				if (aa1 == 2 && gs[ii][iic2].防御付与 < aa2)
				{
					gs[ii][iic2].防御付与 = aa2;
					aa = 1;
				}
				if (aa1 == 3 && gs[ii][iic2].知力付与 < aa2)
				{
					gs[ii][iic2].知力付与 = aa2;
					aa = 1;
				}
				if (aa1 == 4 && gs[ii][iic2].早さ付与 < aa2)
				{
					gs[ii][iic2].早さ付与 = aa2;
					aa = 1;
				}
				if (aa == 1)
				{
					aa3--;
				}
			}
		}
	}
	for (loop = 1; loop < 30; loop++)
	{
		rr = RAND(2);
		if (rr == 1)
		{
			rr = 10 + RAND(6);
		}
		if (rr == 2)
		{
			rr = 20 + RAND(6);
		}
		if (gs[ii][rr].Ｆ集中 == 99 && gs[ii][rr].番号 != 0)
		{
			gs[ii][rr].Ｆ集中 = 0;
			aa = 10;
			if (gs[ii][rr].技能 == 124 || gs[ii][rr].技能 == 233 || gs[ii][rr].技能 == 305)
			{
				aa = 0;
			}
			if (gs[ii][rr].兵種 == 8)
			{
				aa = 4;
			}
			int sente = 0;
			sente = RAND(4);
			if (gs[ii][rr].技能 == 305)
			{
				sente = 1;
			}
			Ｐ合戦／順番登録(rr, 速度補正値(rr, sente + aa));
		}
	}
	for (loop = 11; loop < 17; loop++)
	{
		if (gs[ii][loop].Ｆ集中 == 99 && gs[ii][loop].番号 != 0)
		{
			gs[ii][loop].Ｆ集中 = 0;
			Ｐ合戦／順番登録(loop, 速度補正値(loop, RAND(4)));
		}
	}
	for (loop = 21; loop < 27; loop++)
	{
		if (gs[ii][loop].Ｆ集中 == 99 && gs[ii][loop].番号 != 0)
		{
			gs[ii][loop].Ｆ集中 = 0;
			Ｐ合戦／順番登録(loop, 速度補正値(loop, RAND(4)));
		}
	}
}

void 合戦／初期化／背景ＣＧ()
{
	lint ra = 0;
	if (◆戦場タイプ == 3)
	{
		ra = RAND(4);
		if (ra == 1)
		{
			◆背景ＣＧ = 19784;
		}
		if (ra == 2)
		{
			◆背景ＣＧ = 19785;
		}
		if (ra == 3)
		{
			◆背景ＣＧ = 19786;
		}
		if (ra == 4)
		{
			◆背景ＣＧ = 19787;
		}
	}
	if (◆戦場タイプ == 2)
	{
		ra = RAND(2);
		if (ra == 1)
		{
			◆背景ＣＧ = 19788;
		}
		if (ra == 2)
		{
			◆背景ＣＧ = 19789;
		}
	}
	if (◆戦場タイプ == 1)
	{
		ra = RAND(7);
		if (ra == 1)
		{
			◆背景ＣＧ = 19750;
		}
		if (ra == 2)
		{
			◆背景ＣＧ = 19751;
		}
		if (ra == 3)
		{
			◆背景ＣＧ = 19752;
		}
		if (ra == 4)
		{
			◆背景ＣＧ = 19753;
		}
		if (ra == 5)
		{
			◆背景ＣＧ = 19774;
		}
		if (ra == 6)
		{
			◆背景ＣＧ = 19775;
		}
		if (ra == 7)
		{
			◆背景ＣＧ = 19776;
		}
		if (◆戦場国タイプ == 24 || ◆戦場国タイプ == 26 || ◆戦場国タイプ == 12 || ◆戦場国タイプ == 10 || ◆戦場国タイプ == 3)
		{
			ra = RAND(10);
			if (ra == 1)
			{
				◆背景ＣＧ = 19754;
			}
			if (ra == 2)
			{
				◆背景ＣＧ = 19755;
			}
			if (ra == 3)
			{
				◆背景ＣＧ = 19756;
			}
			if (ra == 4)
			{
				◆背景ＣＧ = 19757;
			}
			if (ra == 5)
			{
				◆背景ＣＧ = 19758;
			}
			if (ra == 6)
			{
				◆背景ＣＧ = 19769;
			}
			if (ra == 7)
			{
				◆背景ＣＧ = 19770;
			}
			if (ra == 8)
			{
				◆背景ＣＧ = 19771;
			}
			if (ra == 9)
			{
				◆背景ＣＧ = 19772;
			}
			if (ra == 10)
			{
				◆背景ＣＧ = 19773;
			}
		}
		if (◆戦場国タイプ == 8 || ◆戦場国タイプ == 4 || ◆戦場国タイプ == 13 || ◆戦場国タイプ == 20 || ◆戦場国タイプ == 22)
		{
			ra = RAND(8);
			if (ra == 1)
			{
				◆背景ＣＧ = 19764;
			}
			if (ra == 2)
			{
				◆背景ＣＧ = 19765;
			}
			if (ra == 3)
			{
				◆背景ＣＧ = 19766;
			}
			if (ra == 4)
			{
				◆背景ＣＧ = 19767;
			}
			if (ra == 5)
			{
				◆背景ＣＧ = 19768;
			}
			if (ra == 6)
			{
				◆背景ＣＧ = 19774;
			}
			if (ra == 7)
			{
				◆背景ＣＧ = 19775;
			}
			if (ra == 8)
			{
				◆背景ＣＧ = 19776;
			}
		}
		if (◆戦場国タイプ == 16 || ◆戦場国タイプ == 17 || ◆戦場国タイプ == 21)
		{
			ra = RAND(8);
			if (ra == 1)
			{
				◆背景ＣＧ = 19759;
			}
			if (ra == 2)
			{
				◆背景ＣＧ = 19760;
			}
			if (ra == 3)
			{
				◆背景ＣＧ = 19761;
			}
			if (ra == 4)
			{
				◆背景ＣＧ = 19762;
			}
			if (ra == 5)
			{
				◆背景ＣＧ = 19763;
			}
			if (ra == 6)
			{
				◆背景ＣＧ = 19774;
			}
			if (ra == 7)
			{
				◆背景ＣＧ = 19775;
			}
			if (ra == 8)
			{
				◆背景ＣＧ = 19776;
			}
		}
		if (◆戦場国タイプ == 9 || ◆戦場国タイプ == 23 || ◆戦場国タイプ == 11)
		{
			ra = RAND(7);
			if (ra == 1)
			{
				◆背景ＣＧ = 19777;
			}
			if (ra == 2)
			{
				◆背景ＣＧ = 19778;
			}
			if (ra == 3)
			{
				◆背景ＣＧ = 19779;
			}
			if (ra == 4)
			{
				◆背景ＣＧ = 19780;
			}
			if (ra == 5)
			{
				◆背景ＣＧ = 19781;
			}
			if (ra == 6)
			{
				◆背景ＣＧ = 19782;
			}
			if (ra == 7)
			{
				◆背景ＣＧ = 19783;
			}
		}
		if (◆戦場国タイプ == 18 || ◆戦場国タイプ == 27 || ◆戦場国タイプ == 28)
		{
			ra = RAND(6);
			if (ra == 1)
			{
				◆背景ＣＧ = 19791;
			}
			if (ra == 2)
			{
				◆背景ＣＧ = 19792;
			}
			if (ra == 3)
			{
				◆背景ＣＧ = 19793;
			}
			if (ra == 4)
			{
				◆背景ＣＧ = 19774;
			}
			if (ra == 5)
			{
				◆背景ＣＧ = 19775;
			}
			if (ra == 6)
			{
				◆背景ＣＧ = 19776;
			}
		}
		if (◆戦場国タイプ == 29 || ◆戦場国タイプ == 30 || ◆戦場国タイプ == 31)
		{
			ra = RAND(4);
			if (ra == 1)
			{
				◆背景ＣＧ = 19794;
			}
			if (ra == 2)
			{
				◆背景ＣＧ = 19774;
			}
			if (ra == 3)
			{
				◆背景ＣＧ = 19775;
			}
			if (ra == 4)
			{
				◆背景ＣＧ = 19776;
			}
		}
		if (◆戦場国タイプ == 25)
		{
			ra = RAND(2);
			if (ra == 1)
			{
				◆背景ＣＧ = 19798;
			}
			if (ra == 2)
			{
				◆背景ＣＧ = 19799;
			}
		}
		if (◆戦場国タイプ == 2)
		{
			ra = RAND(2);
			if (ra == 1)
			{
				◆背景ＣＧ = 19795;
			}
			if (ra == 2)
			{
				◆背景ＣＧ = 19801;
			}
		}
		if (◆戦場国タイプ == 1)
		{
			ra = RAND(1);
			if (ra == 1)
			{
				◆背景ＣＧ = 19800;
			}
		}
	}
	if (◆戦場タイプ == 7)
	{
		◆背景ＣＧ = 19720;
		if (◆戦場国タイプ == 3)
		{
			◆背景ＣＧ = 19720;
		}
		if (◆戦場国タイプ == 10)
		{
			◆背景ＣＧ = 19719;
		}
		if (◆戦場国タイプ == 12)
		{
			◆背景ＣＧ = 19718;
		}
		if (◆戦場国タイプ == 4)
		{
			◆背景ＣＧ = 19717;
		}
		if (◆戦場国タイプ == 5)
		{
			◆背景ＣＧ = 19716;
		}
		if (◆戦場国タイプ == 6)
		{
			◆背景ＣＧ = 19715;
		}
		if (◆戦場国タイプ == 8)
		{
			◆背景ＣＧ = 19714;
		}
		if (◆戦場国タイプ == 14)
		{
			◆背景ＣＧ = 19713;
		}
		if (◆戦場国タイプ == 15)
		{
			◆背景ＣＧ = 19712;
		}
		if (◆戦場国タイプ == 13)
		{
			◆背景ＣＧ = 19711;
		}
		if (◆戦場国タイプ == 11)
		{
			◆背景ＣＧ = 19710;
		}
		if (◆戦場国タイプ == 19)
		{
			◆背景ＣＧ = 19709;
		}
		if (◆戦場国タイプ == 18)
		{
			◆背景ＣＧ = 19708;
		}
		if (◆戦場国タイプ == 16)
		{
			◆背景ＣＧ = 19707;
		}
		if (◆戦場国タイプ == 21)
		{
			◆背景ＣＧ = 19706;
		}
		if (◆戦場国タイプ == 20)
		{
			◆背景ＣＧ = 19705;
		}
		if (◆戦場国タイプ == 22)
		{
			◆背景ＣＧ = 19704;
		}
		if (◆戦場国タイプ == 23)
		{
			◆背景ＣＧ = 19703;
		}
		if (◆戦場国タイプ == 26)
		{
			◆背景ＣＧ = 19702;
		}
		if (◆戦場国タイプ == 27)
		{
			◆背景ＣＧ = 19701;
		}
		if (◆戦場国タイプ == 17)
		{
			◆背景ＣＧ = 19700;
		}
	}
	if (◆特定戦闘 == 1)
	{
		◆背景ＣＧ = 19734;
	}
	if (◆特定戦闘 == 2)
	{
		◆背景ＣＧ = 19730;
	}
	if (◆特定戦闘 == 3)
	{
		◆背景ＣＧ = 19730;
	}
	if (◆特定戦闘 == 4 || ◆特定戦闘 == 90)
	{
		◆背景ＣＧ = 19710;
	}
	if (◆特定戦闘 == 5)
	{
		◆背景ＣＧ = 19735;
	}
	if (◆特定戦闘 == 6)
	{
		◆背景ＣＧ = 19735;
	}
	if (◆特定戦闘 == 7)
	{
		◆背景ＣＧ = 19731;
	}
	if (◆特定戦闘 == 8)
	{
		◆背景ＣＧ = 19735;
	}
	if (◆特定戦闘 == 9)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 10)
	{
		◆背景ＣＧ = 19733;
	}
	if (◆特定戦闘 == 11)
	{
		◆背景ＣＧ = 19730;
	}
	if (◆特定戦闘 == 12)
	{
		◆背景ＣＧ = 19717;
	}
	if (◆特定戦闘 == 13)
	{
		◆背景ＣＧ = 19730;
	}
	if (◆特定戦闘 == 14)
	{
		◆背景ＣＧ = 19731;
	}
	if (◆特定戦闘 == 84 || ◆特定戦闘 == 85)
	{
		◆背景ＣＧ = 19732;
	}
	if (◆特定戦闘 == 15 || ◆特定戦闘 == 98)
	{
		◆背景ＣＧ = 19731;
	}
	if (◆特定戦闘 == 99)
	{
		◆背景ＣＧ = 19793;
	}
	if (◆特定戦闘 == 100)
	{
		◆背景ＣＧ = 19715;
	}
	if (◆特定戦闘 == 101)
	{
		◆背景ＣＧ = 19714;
	}
	if (◆特定戦闘 == 102)
	{
		◆背景ＣＧ = 19795;
	}
	if (◆特定戦闘 == 103)
	{
		◆背景ＣＧ = 19714;
	}
	if (◆特定戦闘 == 104)
	{
		◆背景ＣＧ = 6205;
	}
	if (◆特定戦闘 == 105 || ◆特定戦闘 == 106 || ◆特定戦闘 == 107)
	{
		◆背景ＣＧ = 19709;
	}
	if (◆特定戦闘 == 81 || ◆特定戦闘 == 82 || ◆特定戦闘 == 89)
	{
		◆背景ＣＧ = 6205;
	}
	if (◆特定戦闘 == 91 || ◆特定戦闘 == 92 || ◆特定戦闘 == 93)
	{
		◆背景ＣＧ = 19710;
	}
	if (◆特定戦闘 == 94)
	{
		◆背景ＣＧ = 6204;
	}
	if (◆特定戦闘 == 16)
	{
		◆背景ＣＧ = 19732;
	}
	if (◆特定戦闘 == 17)
	{
		◆背景ＣＧ = 19730;
	}
	if (◆特定戦闘 == 36)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 37)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 38)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 39)
	{
		◆背景ＣＧ = 19730;
	}
	if (◆特定戦闘 == 40)
	{
		◆背景ＣＧ = 19730;
	}
	if (◆特定戦闘 == 41)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 42)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 43)
	{
		◆背景ＣＧ = 19735;
	}
	if (◆特定戦闘 == 44)
	{
		◆背景ＣＧ = 19791;
	}
	if (◆特定戦闘 == 45)
	{
		◆背景ＣＧ = 19798;
	}
	if (◆特定戦闘 == 60)
	{
		◆背景ＣＧ = 19733;
	}
	if (◆特定戦闘 == 61)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 50)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 51)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 52)
	{
		◆背景ＣＧ = 19736;
	}
	if (◆特定戦闘 == 53)
	{
		◆背景ＣＧ = 19798;
	}
	if (◆特定戦闘 == 65)
	{
		◆背景ＣＧ = 19735;
	}
	if (◆特定戦闘 == 83)
	{
		◆背景ＣＧ = 19732;
	}
	if (◆特定戦闘 == 86)
	{
		◆背景ＣＧ = 19772;
	}
	if (◆特定戦闘 == 87)
	{
		◆背景ＣＧ = 19706;
	}
	if (◆特定戦闘 == 88)
	{
		◆背景ＣＧ = 19787;
	}
	if (◆特定戦闘 == 95)
	{
		◆背景ＣＧ = 19764;
	}
	if (◆特定戦闘 == 96)
	{
		◆背景ＣＧ = 6205;
	}
	if (◆特定戦闘 == 97)
	{
		◆背景ＣＧ = 6237;
	}
	LOG_TADA("　合戦背景（" + string(◆背景ＣＧ) + "）\n");
}

lint 合戦／回復計算(ref lint DDD, lint iic, lint iic2, lint bb)
{
	lint ▲治療数 = 0;
	lint ▲最大治療数 = 0;
	lint ii = 0;
	lint aa = 0;
	lint rr = 0;
	lint aa1 = 0;
	lint aa2 = 0;
	lint aa3 = 0;
	lint ▲攻撃側 = 0;
	lint ▲防御側 = 0;
	lint ▲回復Ａ = 0;
	lint ▲回復付与倍率 = 0;
	if (◆合戦味方ターン == 1)
	{
		▲攻撃側 = 1;
		▲防御側 = 2;
	}
	else
	{
		▲攻撃側 = 2;
		▲防御側 = 1;
	}
	◆味方ＥＦ = 0;
	◆敵ＥＦ = 0;
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("\n");
		LOG_TADA("■回復系処理\n");
		LOG_TADA(gs[ii][iic].名前 + "　＞＞　" + gs[ii][iic2].名前 + "\n");
		LOG_TADA("　行動［" + 行動名前[bb] + "］　番号：" + string(bb) + "\n");
	}
	if (◆戦闘タイプ == 1)
	{
		DDD = gs[ii][iic].Ｓレベル * 5;
		if (gs[ii][iic].技能 == 789)
		{
			DDD += 250;
		}
		if (gs[ii][iic].技能 == 331)
		{
			DDD = DDD * 2;
		}
		if (gs[ii][iic].知力付与 != 0)
		{
			DDD = 倍率計算関数(DDD, 150);
		}
		if (bb == 81 || bb == 84)
		{
			DDD = 999;
		}
		if (bb == 163)
		{
			DDD = 9999;
			gs[ii][iic2].現在技数 = gs[ii][iic2].技数;
			gs[ii][iic].技１ = 0;
		}
		if (bb == 247)
		{
			DDD = 300;
			gs[ii][iic2].現在技数 = gs[ii][iic2].技数;
		}
		if (bb == 166 && gs[ii][iic2].番号 == 1000)
		{
			gs[ii][iic2].現在技数++;
			if (gs[ii][iic2].現在技数 > gs[ii][iic2].技数)
			{
				gs[ii][iic2].現在技数 = gs[ii][iic2].技数;
			}
		}
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　回復計算　" + string(DDD) + "　");
			if (gs[ii][iic].知力付与 != 0)
			{
				LOG_TADA("／知力付与");
			}
			LOG_TADA("\n");
		}
		return 0;
	}
	▲回復Ａ = gs[ii][iic].知力 * 6;
	aa2 = gs[ii][iic].兵数;
	▲回復付与倍率 = 100 + gs[ii][iic].知力付与;
	aa1 = 倍率計算関数(▲回復Ａ, ▲回復付与倍率);
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("　回復計算　" + string(aa1) + "　＝　" + string(▲回復Ａ) + "（" + string(▲回復付与倍率) + "）\n");
	}
	aa1 = 人数計算(aa1, aa2);
	DDD = 倍率計算関数(aa1, 行動ダメージ率[bb]);
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("　回復計算　" + string(aa1) + "　＝　［技による倍率" + string(行動ダメージ率[bb]) + "％］　\n");
	}
	if (bb == 84)
	{
		DDD = 999;
	}
	if (gs[ii][iic].技能 == 789)
	{
		DDD += 250;
	}
	if (bb == 163)
	{
		DDD = 9999;
		gs[ii][iic2].現在技数 = gs[ii][iic2].技数;
		gs[ii][iic].技１ = 0;
	}
	if (bb == 247)
	{
		DDD = 300;
		gs[ii][iic2].現在技数 = gs[ii][iic2].技数;
	}
	if (gs[ii][iic2].個人 == 0)
	{
		▲最大治療数 = gs[ii][iic2].兵数合戦 - gs[ii][iic2].兵数;
		if (▲最大治療数 < DDD)
		{
			DDD = ▲最大治療数;
		}
	}
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("　回復計算　" + string(DDD) + "　回復\n");
	}
	return 0;
}

lint 合戦／戦闘計算(ref lint DDD, lint iic, lint iic2, lint bb, lint フラグ)
{
	lint aa1 = 0;
	lint aa2 = 0;
	lint aa3 = 0;
	lint ii = 0;
	lint aa = 0;
	lint ra = 0;
	lint ▲ガード中 = 0;
	lint ▲攻撃 = 0;
	lint ▲防御 = 0;
	lint ▲ダメージ = 0;
	lint ▲攻撃側 = 0;
	lint ▲防御側 = 0;
	lint ＣＧ１ = gs[ii][iic].ＣＧ;
	lint ＣＧ２ = gs[ii][iic2].ＣＧ;
	lint ▲兵種Ａ = gs[ii][iic].兵種;
	lint ▲兵種Ｂ = gs[ii][iic2].兵種;
	if (◆戦闘タイプ == 1)
	{
		▲兵種Ａ = gs[ii][iic].Ｓ職種;
		▲兵種Ｂ = gs[ii][iic2].Ｓ職種;
	}
	◆味方ＥＦ = 0;
	◆敵ＥＦ = 0;
	ＧＦ[55] = 0;
	ＧＦ[56] = 0;
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("\n");
		if (フラグ == 0)
		{
			LOG_TADA("■攻撃側処理（戦闘計算）\n");
		}
		if (フラグ == 1)
		{
			LOG_TADA("■防御側処理（戦闘計算）\n");
		}
		if (フラグ == 3)
		{
			LOG_TADA("■勇者攻撃処理（戦闘計算）\n");
		}
		if (フラグ == 0 || フラグ == 3)
		{
			LOG_TADA("　" + gs[ii][iic].名前 + "　＞＞　" + gs[ii][iic2].名前 + "\n");
		}
		if (フラグ == 1)
		{
			LOG_TADA("　" + gs[ii][iic2].名前 + "　＞＞　" + gs[ii][iic].名前 + "\n");
		}
		LOG_TADA("　行動［" + 行動名前[bb] + "］　番号：" + string(bb) + "\n");
	}
	if (◆合戦味方ターン == 1)
	{
		▲攻撃側 = 1;
		▲防御側 = 2;
	}
	else
	{
		▲攻撃側 = 2;
		▲防御側 = 1;
	}
	if (行動タイプ[bb] == 2)
	{
		aa1 = 魔法計算(iic, iic2, bb);
		if (◆戦闘タイプ == 0)
		{
			aa2 = gs[ii][iic].兵数;
			aa1 = 人数計算(aa1, aa2);
		}
		aa1 = 倍率計算関数(aa1, 行動ダメージ率[bb]);
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　技能計算　" + string(aa1) + "　＝　［技による倍率" + string(行動ダメージ率[bb]) + "％］　\n");
		}
		if (▲攻撃側 == 1)
		{
			aa1 = 合戦／合戦補正(aa1, 1);
		}
		else
		{
			aa1 = 合戦／合戦補正(aa1, 2);
		}
		if (gs[ii][iic].兵種 == 8 && (gs[ii][iic2].番号 == 1236 || gs[ii][iic2].番号 == 1237 || gs[ii][iic2].番号 == 1086 || gs[ii][iic2].番号 == 1087))
		{
			aa1 = aa1 * 4;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　陰陽＞鬼の有利処理\n");
			}
		}
		if (bb == 46)
		{
			if (▲兵種Ｂ == 7)
			{
				aa1 = aa1 * 2;
			}
			if (▲兵種Ｂ == 27 || ▲兵種Ｂ == 28 || ▲兵種Ｂ == 29 || ▲兵種Ｂ == 31)
			{
				aa1 = aa1 * 2;
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　エンジェルカッター　僧兵、モンスターに強い\n");
			}
		}
		if (bb == 67)
		{
			if (◆戦闘タイプ == 0)
			{
				aa1 = 倍率計算関数(gs[ii][iic2].兵数最大, 30);
			}
			if (◆戦闘タイプ == 1)
			{
				aa1 = 倍率計算関数(gs[ii][iic2].Ｓ体力最大, 30);
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　巫女の嵐　発動\n");
			}
		}
		if (bb == 754)
		{
			if (◆戦闘タイプ == 0)
			{
				aa1 = 倍率計算関数(gs[ii][iic2].兵数最大, 40);
			}
			if (◆戦闘タイプ == 1)
			{
				aa1 = 倍率計算関数(gs[ii][iic2].Ｓ体力最大, 40);
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　封の炎　発動\n");
			}
		}
		if (bb == 755)
		{
			aa1 = 0;
			gs[ii][iic2].現在技数 = gs[ii][iic2].現在技数 - 2;
			if (gs[ii][iic2].現在技数 < 0)
			{
				gs[ii][iic2].現在技数 = 0;
			}
		}
		if (bb == 97)
		{
			if (◆戦闘タイプ == 0)
			{
				aa1 = 倍率計算関数(gs[ii][iic2].兵数最大, 10);
			}
			if (◆戦闘タイプ == 1)
			{
				aa1 = 倍率計算関数(gs[ii][iic2].Ｓ体力最大, 10);
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　巫女の嵐　発動\n");
			}
		}
		if (bb == 751)
		{
			if (gs[ii][iic2].性別 == 0 && 固定乱数取得() > 30)
			{
				aa1 = gs[ii][iic2].兵数最大;
			}
		}
		if (bb == 244)
		{
			if (◆戦闘タイプ == 0)
			{
				aa1 = 倍率計算関数(gs[ii][iic2].兵数最大, 25);
			}
			if (◆戦闘タイプ == 1)
			{
				aa1 = 倍率計算関数(gs[ii][iic2].Ｓ体力最大, 25);
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　神聖分解波　発動\n");
			}
		}
		if (アイテム確認(104, iic, ii) == 1 && bb != 47)
		{
			aa1 = (aa1 * 6) / 5;
		}
		if (アイテム確認(109, iic, ii) == 1 && bb == 47)
		{
			aa1 = (aa1 * 6) / 5;
		}
		if (アイテム確認(135, iic, ii) == 1)
		{
			aa1 = (aa1 * 13) / 10;
		}
		if (gs[ii][iic].技能 == 315)
		{
			aa1 = (aa1 * 15) / 10;
		}
		if (gs[ii][iic].技能 == 775)
		{
			aa1 = 倍率計算関数(aa1, 150);
		}
		if (gs[ii][iic2].技能 == 311)
		{
			aa1 = aa1 / 4;
		}
		if (アイテム確認(111, iic2, ii) == 1)
		{
			aa1 = aa1 / 2;
		}
		if (Ｃ技能総数取得(804, ii) != 0)
		{
			aa1 = 倍率計算関数(aa1, 120);
		}
		if (bb == 808)
		{
			gs[ii][iic].Ｆ式神 = 1;
		}
		if (gs[ii][iic2].兵種 == 98 && ＧＦ[467] == 1)
		{
			aa1 = aa1 / 2;
		}
		if (gs[ii][iic2].兵種 == 61)
		{
			aa1 = aa1 / 2;
		}
		if (gs[ii][iic].技能 == 309 && ◆戦闘タイプ == 1 && (gs[ii][iic2].Ｓ職種 == 75 || gs[ii][iic2].Ｓ職種 == 97))
		{
			aa1 = aa1 * 2;
		}
		if (gs[ii][iic].技能 == 794 && bb == 795)
		{
			aa1 = 倍率計算関数(aa1, 130);
		}
		if (gs[ii][iic2].技能 == 807)
		{
			aa1 = aa1 - 432;
		}
		if (gs[ii][iic2].番号 == 1090)
		{
			aa1 = aa1 / 2;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　玄武　ダメージ５０％レジスト\n");
			}
		}
		if (Ｃ技能取得(iic, ii) == 116 && ◆戦場タイプ == 7)
		{
			aa1 = 倍率計算関数(aa1, 140);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：迷宮上手\n");
			}
		}
		if (Ｃ技能取得(iic, ii) == 115 && ◆戦場タイプ == 3)
		{
			aa1 = 倍率計算関数(aa1, 140);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：城攻め上手\n");
			}
		}
		if (◆戦闘タイプ == 0 && Ｃ技能取得(iic, ii) == 225 && gs[ii][iic].兵数 >= 1500)
		{
			aa1 = 倍率計算関数(aa1, 150);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：プロヴァンス\n");
			}
		}
		if (Ｃ技能取得(iic, ii) == 114 && ◆戦場タイプ == 1)
		{
			aa1 = 倍率計算関数(aa1, 140);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：野戦上手\n");
			}
		}
		if (gs[ii][iic2].技能 == 106)
		{
			aa1 = 0;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　魔法絶対防御　\n");
			}
		}
		if (gs[ii][iic2].技能 == 125 && gs[ii][iic2].兵数 > 1 && gs[ii][iic2].兵数 < aa1 && RAND(2) == 1)
		{
			aa1 = gs[ii][iic2].兵数 - 1;
		}
		if (gs[ii][iic2].兵種 == 23)
		{
			aa1 = 0;
		}
		if (gs[ii][iic2].Ｆ式神 == 1)
		{
			aa1 = 0;
			gs[ii][iic2].Ｆ式神 = 0;
			if (▲攻撃側 == 1)
			{
				◆敵ＥＦ = 10;
			}
			else
			{
				◆味方ＥＦ = 10;
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　防御式神　発動\n");
			}
		}
		aa1 = ボスダメージ補正(aa1, ii, iic2, bb, iic);
		if (◆戦闘タイプ == 0)
		{
			aa1 = 魔人合戦補正(aa1, ii, iic, iic2, bb);
		}
		if (◆戦闘タイプ == 0 && aa1 >= gs[ii][iic2].兵数)
		{
			aa1 = gs[ii][iic2].兵数;
			if (▲攻撃側 == 1)
			{
				◆敵ＥＦ = 4;
			}
			else
			{
				◆味方ＥＦ = 4;
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　ダメージ補正（敵の最大数）\n");
			}
		}
		if (▲攻撃側 == 1)
		{
			ＧＦ[173] += aa1;
		}
		if (▲攻撃側 == 2)
		{
			ＧＦ[172] += aa1;
		}
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　戦闘計算　" + string(aa1) + "　ダメージ\n");
		}
		DDD = aa1;
		ＧＦ[465] = aa1;
		return 0;
	}
	if (フラグ == 0 || フラグ == 3)
	{
		◆防御側兵数 = gs[ii][iic2].兵数;
		aa1 = 物理計算(iic, iic2);
		if (◆戦闘タイプ == 0)
		{
			aa2 = gs[ii][iic].兵数;
			aa1 = 人数計算(aa1, aa2);
		}
		aa1 = 倍率計算関数(aa1, 行動ダメージ率[bb]);
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　技能計算　" + string(aa1) + "　＝　［技による倍率" + string(行動ダメージ率[bb]) + "％］　\n");
		}
		if (▲攻撃側 == 1)
		{
			aa1 = 合戦／合戦補正(aa1, 1);
		}
		else
		{
			aa1 = 合戦／合戦補正(aa1, 2);
		}
		if (bb == 8 && gs[ii][iic].兵数 < gs[ii][iic2].兵数)
		{
			aa1 = aa1 * 2;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　技能計算　" + string(aa1) + "　＝　親衛隊突撃で２倍　\n");
			}
		}
		if (gs[ii][iic].技能 == 775)
		{
			aa1 = 倍率計算関数(aa1, 150);
		}
		if (gs[ii][iic].技能 == 720)
		{
			aa1 = (aa1 * 4) / 3;
		}
		if (gs[ii][iic2].技能 == 720)
		{
			aa1 = (aa1 * 4) / 3;
		}
		if (アイテム確認(124, iic, ii) == 1)
		{
			aa1 = (aa1 * 4) / 3;
		}
		if (アイテム確認(124, iic2, ii) == 1)
		{
			aa1 = (aa1 * 4) / 3;
		}
		if (gs[ii][iic].技能 == 722)
		{
			aa1 = (aa1 * 3) / 4;
		}
		if (gs[ii][iic2].技能 == 722)
		{
			aa1 = aa1 / 2;
		}
		if (gs[ii][iic].技能 == 308 && ◆戦闘タイプ == 1)
		{
			aa1 = aa1 * 2;
		}
		if (bb == 15)
		{
			if (▲攻撃側 == 1 && 戦果取得(1) > 戦果取得(2))
			{
				aa1 = 倍率計算関数(aa1, 300);
			}
			if (▲攻撃側 == 2 && 戦果取得(2) > 戦果取得(1))
			{
				aa1 = 倍率計算関数(aa1, 300);
			}
		}
		if (bb == 19)
		{
			gs[ii][iic2].戦場生死確率 -= 10;
			gs[ii][iic2].Ｆ生死処理 = 2;
		}
		if (アイテム確認(127, iic, ii) == 1)
		{
			gs[ii][iic2].戦場生死確率 -= 10;
			gs[ii][iic2].Ｆ生死処理 = 2;
		}
		if (bb == 26)
		{
			if (▲攻撃側 == 1)
			{
				aa = ＧＦ[172];
			}
			if (▲攻撃側 == 2)
			{
				aa = ＧＦ[173];
			}
			if (aa > 0)
			{
				aa1 = aa1 + RAND(aa);
			}
		}
		if (bb == 79)
		{
			ＧＦ[128] = 1;
		}
		if (bb == 89)
		{
			if (gs[ii][iic2].兵種 == 5 || gs[ii][iic2].兵種 == 8 || gs[ii][iic2].兵種 == 13 || gs[ii][iic2].兵種 == 9)
			{
				aa1 = aa1 * 2;
			}
		}
		if (bb == 139 && gs[ii][iic2].兵種 == 3)
		{
			aa1 = aa1 * 4;
		}
		if (bb == 140 && gs[ii][iic2].兵種 == 6)
		{
			aa1 = aa1 * 4;
		}
		if (bb == 142 && ◆戦場対戦国 == 16)
		{
			aa1 = aa1 * 3;
		}
		if (bb == 757)
		{
			for (iic2 = 11; iic2 < 17; iic2++)
			{
				if (gs[0][iic2].性別 == 1)
				{
					aa1 = aa1 * 2;
				}
			}
		}
		if (bb == 27 && ▲攻撃側 == 1)
		{
			◆合戦略奪金 = 総国力(1) * 10;
		}
		if (bb == 28)
		{
			aa1 = gs[ii][iic2].兵数 / 2;
		}
		if (bb == 234)
		{
			aa1 = gs[ii][iic2].兵数 / 3 + gs[ii][iic].Ｓレベル * 5;
			if (アイテム確認(118, iic, ii) == 1)
			{
				aa1 = gs[ii][iic2].兵数 / 2 + gs[ii][iic].Ｓレベル * 5;
			}
		}
		if (bb == 224)
		{
			if (アイテム確認(136, iic, ii) == 1)
			{
				aa1 = (aa1 * 5) / 4;
			}
		}
		if (bb == 169)
		{
			ra = RAND(5);
			if (ra == 1)
			{
				aa1 = 倍率計算関数(aa1, 100);
			}
			if (ra == 2)
			{
				aa1 = 倍率計算関数(aa1, 150);
			}
			if (ra == 3)
			{
				aa1 = 倍率計算関数(aa1, 200);
			}
			if (ra == 4)
			{
				aa1 = 倍率計算関数(aa1, 250);
			}
			if (ra == 5)
			{
				aa1 = 倍率計算関数(aa1, 300);
			}
		}
		if (bb == 251)
		{
			ra = RAND(5);
			if (ra == 1)
			{
				aa1 = 倍率計算関数(aa1, 50);
			}
			if (ra == 2)
			{
				aa1 = 倍率計算関数(aa1, 200);
			}
			if (ra == 3)
			{
				aa1 = 倍率計算関数(aa1, 300);
			}
			if (ra == 4)
			{
				aa1 = 倍率計算関数(aa1, 400);
			}
			if (ra == 5)
			{
				aa1 = 倍率計算関数(aa1, 1000);
			}
		}
		if (bb == 771)
		{
			gs[ii][iic].防御付与 = 70;
		}
		if (gs[ii][iic].技能 == 107 && ◆戦闘タイプ == 0)
		{
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　火鉢効果　＋５０\n");
			}
			aa1 += 50;
		}
		if (gs[ii][iic].技能 == 112 && ◆戦闘タイプ == 0)
		{
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　愛人効果　＋３０\n");
			}
			aa1 += 30;
		}
		if (gs[ii][iic2].兵種 == 98 && ＧＦ[467] == 1)
		{
			aa1 = aa1 / 4;
		}
		if (gs[ii][iic2].兵種 == 61)
		{
			aa1 = aa1 / 4;
		}
		if (gs[ii][iic2].技能 == 311)
		{
			aa1 = aa1 / 4;
		}
		if (gs[ii][iic2].技能 == 307)
		{
			aa1 = aa1 / 20;
		}
		if (gs[ii][iic2].技能 == 317)
		{
			aa1 = aa1 / 4;
		}
		if (gs[ii][iic2].技能 == 318)
		{
			aa1 = aa1 / 5;
		}
		if (gs[ii][iic2].技能 == 319)
		{
			aa1 = aa1 / 8;
		}
		if (gs[ii][iic2].番号 == 1090)
		{
			aa1 = aa1 / 2;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　玄武　ダメージ５０％レジスト\n");
			}
		}
		if (gs[ii][iic2].ＦＦ == 21 || gs[ii][iic2].ＦＦ == 22 || gs[ii][iic2].ＦＦ == 23 || gs[ii][iic2].ＦＦ == 729)
		{
			aa1 = aa1 / 2;
			▲ガード中 = 1;
			if (bb == 215)
			{
				aa1 = aa1 * 2;
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　ガード中に付き５０％レジスト\n");
			}
		}
		if (◆戦闘タイプ == 0 && Ｃ技能取得(iic, ii) == 225 && gs[ii][iic].兵数 >= 1500)
		{
			aa1 = 倍率計算関数(aa1, 150);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：プロヴァンス\n");
			}
		}
		if (Ｃ技能取得(iic, ii) == 116 && ◆戦場タイプ == 7)
		{
			aa1 = 倍率計算関数(aa1, 140);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：迷宮上手\n");
			}
		}
		if (Ｃ技能取得(iic, ii) == 115 && ◆戦場タイプ == 3)
		{
			aa1 = 倍率計算関数(aa1, 140);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：城攻め上手\n");
			}
		}
		if (Ｃ技能取得(iic, ii) == 114 && ◆戦場タイプ == 1)
		{
			aa1 = 倍率計算関数(aa1, 140);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：野戦上手\n");
			}
		}
		if (アイテム確認(31, iic, ii) == 1)
		{
			aa1 = 倍率計算関数(aa1, 120);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　カオス発動\n");
			}
		}
		if (アイテム確認(32, iic, ii) == 1)
		{
			aa1 = 倍率計算関数(aa1, 120);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　日光発動\n");
			}
		}
		if (アイテム確認(58, iic, ii) == 1)
		{
			aa1 = 倍率計算関数(aa1, 120);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　謎のムラサメ発動\n");
			}
		}
		if (アイテム確認(60, iic, ii) == 1)
		{
			aa1 = 倍率計算関数(aa1, 120);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　曹操猛毒短刀発動\n");
			}
		}
		if (アイテム確認(61, iic, ii) == 1)
		{
			aa1 = aa1 + 50;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　オイウチの牙　発動\n");
			}
		}
		if (アイテム確認(62, iic, ii) == 1)
		{
			if (▲兵種Ｂ == 27 || ▲兵種Ｂ == 28 || ▲兵種Ｂ == 29 || ▲兵種Ｂ == 31)
			{
				aa1 = 倍率計算関数(aa1, 150);
			}
			else
			{
				aa1 = 倍率計算関数(aa1, 70);
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　魔物のみノミ　発動\n");
			}
		}
		if (アイテム確認(63, iic, ii) == 1)
		{
			aa1 = aa1 + 100;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　竜宮秘剣浦死丸　発動\n");
			}
		}
		if (アイテム確認(31, iic, ii) == 1 || アイテム確認(32, iic, ii) == 1)
		{
			if (gs[ii][iic2].Ｓ職種 == 51 || gs[ii][iic2].Ｓ職種 == 52 || gs[ii][iic2].Ｓ職種 == 54)
			{
				aa1 = aa1 + 50;
				aa1 = aa1 * 2;
			}
			if (gs[ii][iic2].Ｓ職種 == 50)
			{
				aa1 = aa1 + 200;
				aa1 = aa1 * 2;
			}
		}
		if (gs[ii][iic].攻撃 > 9 && gs[ii][iic].攻撃 < 12)
		{
			aa1 = 倍率計算関数(aa1, 120);
		}
		if (gs[ii][iic].攻撃 == 12)
		{
			aa1 = 倍率計算関数(aa1, 140);
		}
		if (gs[ii][iic2].防御 > 9 && gs[ii][iic2].防御 < 12)
		{
			aa1 = 倍率計算関数(aa1, 80);
		}
		if (gs[ii][iic2].防御 == 12)
		{
			aa1 = 倍率計算関数(aa1, 65);
		}
		if (アイテム確認(101, iic, ii) == 1)
		{
			if (RAND(4) == 1)
			{
				aa1 = aa1 * 2;
			}
		}
		if (アイテム確認(102, iic, ii) == 1)
		{
			if (bb == 714)
			{
				aa1 = (aa1 * 4) / 3;
			}
		}
		if (アイテム確認(106, iic, ii) == 1)
		{
			if (gs[ii][iic].兵数 * 2 < gs[ii][iic].兵数)
			{
				aa1 = (aa1 * 4) / 3;
			}
		}
		if (アイテム確認(108, iic, ii) == 1)
		{
			if (gs[ii][iic].兵種 == 12)
			{
				aa1 = (aa1 * 13) / 10;
			}
		}
		if (アイテム確認(110, iic, ii) == 1 && ◆戦闘タイプ == 1)
		{
			aa1 = (aa1 * 3) / 2;
		}
		if (アイテム確認(119, iic, ii) == 1 && (gs[ii][iic].兵種 == 5 || gs[ii][iic].兵種 == 65))
		{
			aa1 = aa1 * 2;
		}
		if (アイテム確認(128, iic, ii) == 1)
		{
			aa1 += gs[ii][iic].防御 * 10;
		}
		if (アイテム確認(129, iic, ii) == 1)
		{
			aa1 += gs[ii][iic].知力 * 10;
		}
		if (アイテム確認(130, iic, ii) == 1)
		{
			aa1 += gs[ii][iic].早さ * 10;
		}
		if (アイテム確認(131, iic, ii) == 1)
		{
			aa1 += gs[ii][iic].攻撃 * 10;
		}
		if (アイテム確認(132, iic, ii) == 1 && ◆戦闘タイプ == 1 && (▲兵種Ｂ == 97 || ▲兵種Ｂ == 98))
		{
			aa1 = aa1 * 2;
		}
		if (アイテム確認(137, iic, ii) == 1)
		{
			aa1 = (aa1 * 13) / 10;
		}
		if (アイテム確認(138, iic2, ii) == 1)
		{
			aa1 = (aa1 * 4) / 5;
		}
		if (gs[ii][iic].技能 == 340)
		{
			aa1 = aa1 + 77;
		}
		if (gs[ii][iic].技能 == 341)
		{
			aa1 = aa1 + 120;
		}
		if (gs[ii][iic].技能 == 342 && ◆戦闘タイプ == 1 && gs[ii][iic].Ｓ体力 < gs[ii][iic].Ｓ体力最大)
		{
			lint muramasa_hp = gs[ii][iic].Ｓ体力最大 / gs[ii][iic].Ｓ体力;
			if (muramasa_hp == 1)
			{
				aa1 == 倍率計算関数(aa1, 150);
			}
			else if (muramasa_hp == 2)
			{
				aa1 == 倍率計算関数(aa1, 200);
			}
			else if (muramasa_hp == 3)
			{
				aa1 == 倍率計算関数(aa1, 300);
			}
			else if (muramasa_hp == 4)
			{
				aa1 == 倍率計算関数(aa1, 500);
			}
			else if (muramasa_hp > 4)
			{
				aa1 == 倍率計算関数(aa1, 1000);
			}
		}
		if (gs[ii][iic].技能 == 343 && ◆戦闘タイプ == 1 && gs[ii][iic].Ｓ体力 == gs[ii][iic].Ｓ体力最大)
		{
			aa1 == 倍率計算関数(aa1, 200);
		}
		if (gs[ii][iic].技能 == 343 || gs[ii][iic].技能 == 366)
		{
			aa1 = aa1 + 200;
		}
		if (gs[ii][iic].技能 == 312)
		{
			aa1 = aa1 + ＧＦ[466];
			ＧＦ[466] += 2;
			if (ＧＦ[466] > 100000)
			{
				ＧＦ[466] = 100000;
			}
		}
		if (gs[ii][iic].技能 == 325 && ◆迷宮戦闘 == 1)
		{
			aa1 = aa1 + 166;
		}
		if ((gs[ii][iic].技能 == 326 || gs[ii][iic].技能 == 327) && ◆迷宮戦闘 == 1)
		{
			aa1 = aa1 + gs[ii][iic].Ｓレベル * 2;
		}
		if (gs[ii][iic].技能 == 316 && RAND(3) == 1)
		{
			aa1 = aa1 * 3;
		}
		if (gs[ii][iic].技能 == 322 && RAND(10) == 1)
		{
			aa1 = aa1 * 10;
		}
		if (gs[ii][iic].技能 == 367)
		{
			aa1 = aa1 + 250;
		}
		if (gs[ii][iic].技能 == 333)
		{
			aa1 = aa1 + 300;
		}
		if (gs[ii][iic].技能 == 334)
		{
			aa1 = aa1 + 500;
		}
		if (gs[ii][iic].技能 == 400)
		{
			aa1 = aa1 + 777;
		}
		if (gs[ii][iic].技能 == 383)
		{
			aa1 = aa1 * 2;
		}
		if (gs[ii][iic2].技能 == 383)
		{
			aa1 = 倍率計算関数(aa1, 50);
		}
		if (gs[ii][iic2].技能 == 386)
		{
			aa1 = 倍率計算関数(aa1, 300);
		}
		if (gs[ii][iic].技能 == 328)
		{
			if (gs[ii][iic].番号 == 1346 || gs[ii][iic].番号 == 1415)
			{
				aa1 = aa1 * 3;
			}
		}
		if (gs[ii][iic].技能 == 376)
		{
			if (gs[ii][iic].Ｓ職種 == 50)
			{
				aa1 = aa1 * 3;
			}
		}
		if (gs[ii][iic].技能 == 377)
		{
			if (gs[ii][iic].Ｓ職種 == 98 || gs[ii][iic].Ｓ職種 == 100)
			{
				aa1 = aa1 * 3;
			}
		}
		if (gs[ii][iic].技能 == 335)
		{
			if (ＦＰ数() == 2)
			{
				aa1 = aa1 * 3;
			}
		}
		if (gs[ii][iic].技能 == 336)
		{
			aa1 = aa1 + RAND(100);
		}
		if (gs[ii][iic].技能 == 300)
		{
			aa1 = aa1 + 1;
		}
		if (gs[ii][iic].技能 == 301)
		{
			aa1 = aa1 + 2;
		}
		if (gs[ii][iic].技能 == 302)
		{
			aa1 = aa1 + 4;
		}
		if (gs[ii][iic].技能 == 344)
		{
			if (アイテム確認(31, iic, ii) == 1 || アイテム確認(32, iic, ii) == 1 || アイテム確認(34, iic, ii) == 1 || アイテム確認(58, iic, ii) == 1 || アイテム確認(60, iic, ii) == 1 || アイテム確認(102, iic, ii) == 1 || アイテム確認(118, iic, ii) == 1 || アイテム確認(131, iic, ii) == 1 || アイテム確認(132, iic, ii) == 1 || アイテム確認(133, iic, ii) == 1)
			{
				aa1 == 倍率計算関数(aa1, 150);
			}
		}
		if (gs[ii][iic].技能 == 747 && ◆迷宮戦闘 == 1)
		{
			aa1 = aa1 + 100;
			aa1 = (aa1 * 3) / 2;
		}
		if (gs[ii][iic2].技能 == 716)
		{
			aa1 = 倍率計算関数(aa1, 70);
			LOG_TADA("　戦闘計算　" + string(aa1) + "　ブランブラ　発動\n");
		}
		if (gs[ii][iic].技能 == 791)
		{
			ra = RAND(6);
			if (ra == 1)
			{
				aa1 = 倍率計算関数(aa1, 0);
			}
			if (ra == 2)
			{
				aa1 = 倍率計算関数(aa1, 100);
			}
			if (ra == 3)
			{
				aa1 = 倍率計算関数(aa1, 150);
			}
			if (ra == 4)
			{
				aa1 = 倍率計算関数(aa1, 200);
			}
			if (ra == 5)
			{
				aa1 = 倍率計算関数(aa1, 250);
			}
			if (ra == 6)
			{
				aa1 = 倍率計算関数(aa1, 300);
			}
		}
		if (gs[ii][iic2].技能 == 791)
		{
			ra = RAND(5);
			if (ra == 1)
			{
				aa1 = 倍率計算関数(aa1, 0);
			}
			if (ra == 2)
			{
				aa1 = 倍率計算関数(aa1, 25);
			}
			if (ra == 3)
			{
				aa1 = 倍率計算関数(aa1, 50);
			}
			if (ra == 4)
			{
				aa1 = 倍率計算関数(aa1, 100);
			}
			if (ra == 5)
			{
				aa1 = 倍率計算関数(aa1, 300);
			}
		}
		if (gs[ii][iic2].技能 == 800)
		{
			aa1 = 倍率計算関数(aa1, 200);
		}
		if (▲ガード中 == 0)
		{
			if (アイテム確認(64, iic2, ii) == 1)
			{
				aa1 = 倍率計算関数(aa1, 70);
				if (◆ＤＢＶ == 1)
				{
					LOG_TADA("　戦闘計算　" + string(aa1) + "　青いの印籠　発動\n");
				}
			}
			if (アイテム確認(65, iic2, ii) == 1)
			{
				aa1 = aa1 - 50;
				if (◆ＤＢＶ == 1)
				{
					LOG_TADA("　戦闘計算　" + string(aa1) + "　痛点欠く兜　発動\n");
				}
			}
			if (アイテム確認(66, iic2, ii) == 1)
			{
				aa1 = aa1 - 100;
				if (◆ＤＢＶ == 1)
				{
					LOG_TADA("　戦闘計算　" + string(aa1) + "　ど根性鎧　発動\n");
				}
			}
			if (アイテム確認(123, iic2, ii) == 1)
			{
				aa1 = aa1 - 150;
			}
			if (gs[ii][iic2].技能 == 398 || gs[ii][iic2].技能 == 365)
			{
				aa1 = aa1 - 200;
			}
			if (gs[ii][iic2].技能 == 332)
			{
				aa1 = aa1 - 300;
			}
			if (gs[ii][iic2].技能 == 807 && ◆戦場タイプ == 1)
			{
				aa1 = aa1 - 432;
			}
			if (アイテム確認(67, iic2, ii) == 1)
			{
				aa1 = aa1 / 2;
				if (◆ＤＢＶ == 1)
				{
					LOG_TADA("　戦闘計算　" + string(aa1) + "　カンゾウ面　発動\n");
				}
			}
			if (アイテム確認(69, iic2, ii) == 1 && (▲兵種Ｂ == 27 || ▲兵種Ｂ == 28 || ▲兵種Ｂ == 29 || ▲兵種Ｂ == 31))
			{
				aa1 = aa1 / 2;
				if (◆ＤＢＶ == 1)
				{
					LOG_TADA("　戦闘計算　" + string(aa1) + "　黄金マスク　発動\n");
				}
			}
		}
		if (bb == 10 || bb == 35 || bb == 99 || bb == 145)
		{
			for (; ; )
			{
				if (▲攻撃側 == 1)
				{
					◆敵ＥＦ = 17;
				}
				else
				{
					◆味方ＥＦ = 17;
				}
				if (gs[ii][iic2].攻撃付与 != 0)
				{
					gs[ii][iic2].攻撃付与 = 0;
					break;
				}
				if (gs[ii][iic2].防御付与 != 0)
				{
					gs[ii][iic2].防御付与 = 0;
					break;
				}
				if (gs[ii][iic2].知力付与 != 0)
				{
					gs[ii][iic2].知力付与 = 0;
					break;
				}
				if (gs[ii][iic2].早さ付与 != 0)
				{
					gs[ii][iic2].早さ付与 = 0;
					break;
				}
				if (▲攻撃側 == 1)
				{
					◆敵ＥＦ = 0;
				}
				else
				{
					◆味方ＥＦ = 0;
				}
				break;
			}
		}
		if (bb == 29 || bb == 85 || bb == 86 || bb == 91 || bb == 170 || bb == 737)
		{
			if (bb != 170)
			{
				aa1 = 0;
			}
			aa = 0;
			if (bb == 29)
			{
				aa = 45;
			}
			if (bb == 85)
			{
				aa = 45;
			}
			if (bb == 86)
			{
				aa = 50;
			}
			if (bb == 737)
			{
				aa = 50;
			}
			if (bb == 91)
			{
				aa = 45;
			}
			if (bb == 170)
			{
				aa = 40;
			}
			if (gs[ii][iic].Ｆ集中 != 0)
			{
				aa += gs[ii][iic].Ｆ集中 * 10;
			}
			if (ＦＰ技能取得(213, ▲防御側) != 0)
			{
				aa -= 40;
			}
			if (ＦＰ技能取得(735, 1) != 0)
			{
				aa += 6;
			}
			if (アイテム確認(105, iic, ii) == 1)
			{
				aa += 6;
			}
			ＧＦ[55] = iic;
			ＧＦ[56] = 2;
			if (◆戦闘タイプ == 0)
			{
				if (gs[ii][iic2].兵数 * 2 < gs[ii][iic].兵数)
				{
					aa += 5;
				}
			}
			if (◆戦闘タイプ == 0)
			{
				if (gs[ii][iic2].兵数 > gs[ii][iic].兵数)
				{
					aa -= 10;
				}
			}
			if (◆戦闘タイプ == 0)
			{
				if (gs[ii][iic2].兵数 > gs[ii][iic].兵数 + 1000)
				{
					aa -= 10;
				}
			}
			if (◆戦闘タイプ == 1)
			{
				if (gs[ii][iic].Ｓレベル < gs[ii][iic2].Ｓレベル)
				{
					aa = 0;
				}
			}
			if (gs[ii][iic].技能 == 220 && gs[ii][iic2].現在技数 == 0)
			{
				aa = 100;
			}
			if (gs[ii][iic].技能 == 740)
			{
				if (RAND(1000) < 998)
				{
					aa = 100;
				}
				else
				{
					aa = 0;
				}
			}
			if (gs[ii][iic2].Ｓ職種 == 51 || gs[ii][iic2].Ｓ職種 == 50 || gs[ii][iic2].Ｓ職種 == 98 || gs[ii][iic2].Ｓ職種 == 101)
			{
				aa = 0;
			}
			if (gs[ii][iic2].重要 == 0 && aa > 固定乱数取得())
			{
				gs[ii][iic2].ＦＦ = 99;
				gs[ii][iic2].Ｆ生死処理 = 1;
				gs[ii][iic2].戦場生死確率 = 0;
				ＧＦ[56] = 1;
				if (▲攻撃側 == 1)
				{
					◆敵ＥＦ = 5;
				}
				else
				{
					◆味方ＥＦ = 5;
				}
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　暗殺系成功率" + string(aa) + "／６０　正否　" + string(ＧＦ[56]) + "\n");
			}
		}
		if (フラグ == 3 && (bb == 90 || bb == 95 || bb == 92 || bb == 717 || bb == 782 || bb == 238))
		{
			aa1 = 20 + gs[ii][iic].Ｓレベル * 6;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　ランス健太郎技　発動\n");
			}
		}
		lint 追加物理ダメージ = 0;
		if (◆戦闘タイプ == 0 && gs[ii][iic].Ｓレベル > 29)
		{
			追加物理ダメージ += gs[ii][iic].Ｓレベル * 2;
		}
		if (◆戦闘タイプ == 0 && gs[ii][iic].Ｓレベル > 50)
		{
			追加物理ダメージ += (gs[ii][iic].Ｓレベル - 50) * 5;
		}
		if (行動ターゲット[bb] == 7)
		{
			追加物理ダメージ = 倍率計算関数(追加物理ダメージ, 30);
		}
		aa1 += 追加物理ダメージ;
		if (フラグ == 3 && bb == 92)
		{
			aa1 = 20 + gs[ii][iic].Ｓレベル * 8;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　武将突撃　発動\n");
			}
		}
		if (bb == 93)
		{
			if (◆戦闘タイプ == 0)
			{
				aa1 = gs[ii][iic2].兵数最大 / 4;
			}
			if (◆戦闘タイプ == 1)
			{
				aa1 = gs[ii][iic2].Ｓ体力最大 / 4;
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　死神の鎌　発動\n");
			}
		}
		if (bb == 94)
		{
			aa1 = 101;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　１０１匹　発動\n");
			}
		}
		if (bb == 158)
		{
			aa1 = 201;
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　２０１匹　発動\n");
			}
		}
		if (bb == 179)
		{
			aa1 = 200;
		}
		if (bb == 227)
		{
			aa1 = 200 + ＧＦ[384];
		}
		if (bb == 246)
		{
			aa1 = gs[ii][iic2].Ｓ体力 / 20;
		}
		if (bb == 226)
		{
			aa1 = aa1 * 1.5;
			for (iic2 = 11; iic2 < 17; iic2++)
			{
				gs[ii][iic2].攻撃付与 = 75;
			}
		}
		if (bb == 148)
		{
			aa1 = 187;
		}
		if (bb == 68)
		{
			aa1 = 9000;
		}
		if (bb == 181 && (gs[ii][iic2].所属勢力 == 17 || gs[ii][iic2].番号 == 1228 || gs[ii][iic2].番号 == 1220 || gs[ii][iic2].番号 == 1240))
		{
			aa1 = 6000;
		}
		if (gs[ii][iic2].Ｆ式神 == 1)
		{
			aa1 = 0;
			gs[ii][iic2].Ｆ式神 = 0;
			if (▲攻撃側 == 1)
			{
				◆敵ＥＦ = 10;
			}
			else
			{
				◆味方ＥＦ = 10;
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　防御式神　発動\n");
			}
		}
		if (gs[ii][iic2].技能 == 125 && gs[ii][iic2].兵数 > 1 && gs[ii][iic2].兵数 < aa1 && RAND(2) == 1)
		{
			aa1 = gs[ii][iic2].兵数 - 1;
		}
		if (行動タメ破壊[bb] != 0 && aa1 != 0)
		{
			if (gs[ii][iic2].ＦＦ == 1)
			{
				gs[ii][iic2].ＦＦ３ -= 行動タメ破壊[bb];
				if (gs[ii][iic2].ＦＦ３ == 0)
				{
					gs[ii][iic2].ＦＦ = 0;
					gs[ii][iic2].ＦＦ２ = 0;
					if (▲攻撃側 == 1)
					{
						◆敵ＥＦ = 3;
					}
					else
					{
						◆味方ＥＦ = 3;
					}
					if (◆ＤＢＶ == 1)
					{
						LOG_TADA("　戦闘計算　" + string(aa1) + "　タメ解除\n");
					}
				}
			}
		}
		if (行動技数破壊[bb] != 0 && aa1 != 0)
		{
			if (gs[ii][iic2].現在技数 != 0)
			{
				gs[ii][iic2].現在技数 -= 行動技数破壊[bb];
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技破壊\n");
			}
		}
		aa1 = ボスダメージ補正(aa1, ii, iic2, bb, iic);
		if (◆戦闘タイプ == 0)
		{
			aa1 = 魔人合戦補正(aa1, ii, iic, iic2, bb);
		}
		if (◆戦闘タイプ == 0 && aa1 >= gs[ii][iic2].兵数 && gs[ii][iic2].個人 == 0)
		{
			aa1 = gs[ii][iic2].兵数;
			if (▲攻撃側 == 1)
			{
				◆敵ＥＦ = 4;
			}
			else
			{
				◆味方ＥＦ = 4;
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　ダメージ補正（敵の最大数）\n");
			}
		}
		if (bb == 69)
		{
			gs[ii][iic2].兵数最大 -= aa1;
			gs[ii][iic2].兵数合戦 -= aa1;
			if (gs[ii][iic2].兵数最大 == 0)
			{
				gs[ii][iic2].兵数最大 = 1;
			}
		}
		if (gs[ii][iic].技能 == 776)
		{
			gs[ii][iic2].兵数最大 -= aa1;
			gs[ii][iic2].兵数合戦 -= aa1;
			if (gs[ii][iic2].兵数最大 == 0)
			{
				gs[ii][iic2].兵数最大 = 1;
			}
			if (aa1 > 300)
			{
				ＧＦ[464]++;
				if (aa1 > 500)
				{
					ＧＦ[464]++;
				}
				if (aa1 > 1000)
				{
					ＧＦ[464]++;
				}
				if (aa1 > 5000)
				{
					ＧＦ[464]++;
				}
			}
		}
		if (bb == 17)
		{
			gs[ii][iic2].兵数最大 -= aa1;
			gs[ii][iic2].兵数合戦 -= aa1;
			if (gs[ii][iic2].兵数最大 == 0)
			{
				gs[ii][iic2].兵数最大 = 1;
			}
			gs[ii][iic].兵数最大 += aa1;
			gs[ii][iic].兵数合戦 += aa1;
		}
		if (▲攻撃側 == 1)
		{
			ＧＦ[173] += aa1;
		}
		if (▲攻撃側 == 2)
		{
			ＧＦ[172] += aa1;
		}
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　戦闘計算　" + string(aa1) + "　ダメージ\n");
		}
		DDD = aa1;
		ＧＦ[465] = aa1;
		return 0;
	}
	if (フラグ == 1)
	{
		if (gs[ii][iic2].技能 == 349)
		{
			DDD = ＧＦ[465] / 2;
			return 0;
		}
		if (gs[ii][iic2].技能 == 350)
		{
			DDD = ＧＦ[465];
			return 0;
		}
		if (gs[ii][iic].Ｓ職種 == 50 || gs[ii][iic].Ｓ職種 == 51)
		{
			DDD = 0;
			return 0;
		}
		if (▲兵種Ｂ == 13 || ▲兵種Ｂ == 5 || ▲兵種Ｂ == 4 || ▲兵種Ｂ == 8 || ▲兵種Ｂ == 9 || ▲兵種Ｂ == 12)
		{
			DDD = 0;
			return 0;
		}
		if (◆戦闘タイプ == 1)
		{
			return 0;
		}
		if (◆防御側兵数 == 0)
		{
			◆防御側兵数 = 10;
		}
		aa1 = 物理計算(iic2, iic);
		if (◆戦闘タイプ == 0)
		{
			aa2 = ◆防御側兵数;
			aa1 = 人数計算(aa1, aa2);
		}
		aa1 = 倍率計算関数(aa1, 行動ダメージ率敵[bb]);
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　技能計算　" + string(aa1) + "　＝　［技による倍率" + string(行動ダメージ率敵[bb]) + "％］　\n");
		}
		if (アイテム確認(59, iic2, ii) == 1)
		{
			aa1 = 倍率計算関数(aa1, 150);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　塩辛蜻蛉斬り　発動\n");
			}
		}
		if (アイテム確認(125, iic2, ii) == 1)
		{
			aa1 = 倍率計算関数(aa1, 200);
		}
		if (gs[ii][iic2].技能 == 108)
		{
			aa1 = 倍率計算関数(aa1, 200);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：反撃　発動\n");
			}
		}
		if (gs[ii][iic2].技能 == 109)
		{
			aa1 = 倍率計算関数(aa1, 300);
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　技能：反撃２　発動\n");
			}
		}
		if (gs[ii][iic].Ｆ式神 == 1)
		{
			aa1 = 0;
			gs[ii][iic].Ｆ式神 = 0;
			if (▲攻撃側 == 1)
			{
				◆敵ＥＦ = 10;
			}
			else
			{
				◆味方ＥＦ = 10;
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　戦闘計算　" + string(aa1) + "　防御式神　発動\n");
			}
		}
		aa1 = ボスダメージ補正(aa1, ii, iic2, bb, iic);
		if (◆戦闘タイプ == 0 && aa1 >= gs[ii][iic].兵数)
		{
			aa1 = gs[ii][iic].兵数;
			if (▲攻撃側 == 1)
			{
				◆味方ＥＦ = 4;
			}
			else
			{
				◆敵ＥＦ = 4;
			}
		}
		if (▲攻撃側 == 1)
		{
			ＧＦ[172] += aa1;
		}
		if (▲攻撃側 == 2)
		{
			ＧＦ[173] += aa1;
		}
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　戦闘計算　" + string(aa1) + "　ダメージ\n");
		}
		DDD = aa1;
		return 0;
	}
	return 0;
}

lint 物理計算(lint iic, lint iic2)
{
	lint ii = 0;
	lint ▲兵種Ａ = gs[ii][iic].兵種;
	lint ▲兵種Ｂ = gs[ii][iic2].兵種;
	lint ▲攻撃Ａ = gs[ii][iic].攻撃 * 10;
	lint ▲防御Ｂ = gs[ii][iic2].防御 * 8;
	lint キャラ = gs[ii][iic].番号;
	lint aa = 0;
	lint aa1 = 0;
	lint aa2 = 0;
	lint aa3 = 0;
	lint rr = 0;
	lint cc = 0;
	lint bb = 0;
	lint レベル差 = 0;
	lint ▲攻撃付与倍率 = 0;
	lint ▲防御付与倍率 = 0;
	if (◆戦闘タイプ == 1)
	{
		▲兵種Ａ = gs[ii][iic].Ｓ職種;
		aa1 = 2;
		if (▲兵種Ａ == 101)
		{
			aa1 = 12;
		}
		if (▲兵種Ａ == 50)
		{
			aa1 = 12;
		}
		if (▲兵種Ａ == 44 || ▲兵種Ａ == 93 || ▲兵種Ａ == 94 || ▲兵種Ａ == 95 || ▲兵種Ａ == 96 || ▲兵種Ａ == 97)
		{
			aa1 = 11;
		}
		if (▲兵種Ａ == 100 || ▲兵種Ａ == 99)
		{
			aa1 = 10;
		}
		if (▲兵種Ａ == 36)
		{
			aa1 = 10;
		}
		if (▲兵種Ａ == 69 || ▲兵種Ａ == 63 || ▲兵種Ａ == 74 || ▲兵種Ａ == 75)
		{
			aa1 = 10;
		}
		if (▲兵種Ａ == 51)
		{
			aa1 = 10;
		}
		if (▲兵種Ａ == 52)
		{
			aa1 = 9;
		}
		if (▲兵種Ａ == 48 || ▲兵種Ａ == 61)
		{
			aa1 = 7;
		}
		if (▲兵種Ａ == 35)
		{
			aa1 = 6;
		}
		if (▲兵種Ａ == 34)
		{
			aa1 = 6;
		}
		if (▲兵種Ａ == 42)
		{
			aa1 = 6;
		}
		if (▲兵種Ａ == 47)
		{
			aa1 = 6;
		}
		if (▲兵種Ａ == 38)
		{
			aa1 = 5;
		}
		if (▲兵種Ａ == 46)
		{
			aa1 = 5;
		}
		if (▲兵種Ａ == 37)
		{
			aa1 = 4;
		}
		if (▲兵種Ａ == 39)
		{
			aa1 = 4;
		}
		if (▲兵種Ａ == 41)
		{
			aa1 = 3;
		}
		if (▲兵種Ａ == 45)
		{
			aa1 = 2;
		}
		if (キャラ == 1008 || キャラ == 1053)
		{
			aa1 = 5;
		}
		lint iic2_lev = gs[ii][iic2].Ｓレベル;
		if (◆特定戦闘 == 97)
		{
			iic2_lev = 40;
		}
		レベル差 = gs[ii][iic].Ｓレベル - iic2_lev / 2;
		if (レベル差 < 5)
		{
			レベル差 = 5;
		}
		if (レベル差 > 30)
		{
			レベル差 = 30 + (レベル差 - 30) / 2;
		}
		lint ボーナスダメージ = -1;
		if (gs[ii][iic].Ｓレベル > 35)
		{
			ボーナスダメージ = (gs[ii][iic].Ｓレベル - 35) * 5;
			if (ボーナスダメージ > 49)
			{
				ボーナスダメージ = 50;
			}
		}
		▲攻撃Ａ = aa1 * レベル差 + ボーナスダメージ;
		if (gs[ii][iic].攻撃付与 != 0)
		{
			▲攻撃Ａ = 倍率計算関数(▲攻撃Ａ, 130);
		}
		if (gs[ii][iic2].防御付与 != 0)
		{
			▲攻撃Ａ = 倍率計算関数(▲攻撃Ａ, 70);
		}
		if (◆特定戦闘 == 2)
		{
			▲攻撃Ａ = 89;
		}
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　物理計算　" + string(▲攻撃Ａ) + "　ソロ計算［レベル差" + string(レベル差) + "］");
			if (gs[ii][iic].攻撃付与 != 0)
			{
				LOG_TADA("／攻撃付与");
			}
			if (gs[ii][iic2].防御付与 != 0)
			{
				LOG_TADA("／防御付与");
			}
			LOG_TADA("\n");
		}
		return ▲攻撃Ａ;
	}
	aa1 = 5;
	if (▲兵種Ａ == 93 || ▲兵種Ａ == 94 || ▲兵種Ａ == 95 || ▲兵種Ａ == 96)
	{
		aa1 = 250;
	}
	if (▲兵種Ａ == 97)
	{
		aa1 = 150;
	}
	if (▲兵種Ａ == 72)
	{
		aa1 = 120;
	}
	if (▲兵種Ａ == 61 || ▲兵種Ａ == 99)
	{
		aa1 = 100;
	}
	if (▲兵種Ａ == 4)
	{
		aa1 = 100;
	}
	if (▲兵種Ａ == 12 || ▲兵種Ａ == 74 || ▲兵種Ａ == 75 || ▲兵種Ａ == 73)
	{
		aa1 = 80;
	}
	if (▲兵種Ａ == 70 || ▲兵種Ａ == 71 || ▲兵種Ａ == 91 || ▲兵種Ａ == 92)
	{
		aa1 = 70;
	}
	if (▲兵種Ａ == 2 || ▲兵種Ａ == 62 || ▲兵種Ａ == 64 || ▲兵種Ａ == 68 || ▲兵種Ａ == 65)
	{
		aa1 = 50;
	}
	if (▲兵種Ａ == 34 || ▲兵種Ａ == 60 || ▲兵種Ａ == 66 || ▲兵種Ａ == 69 || ▲兵種Ａ == 76 || ▲兵種Ａ == 74)
	{
		aa1 = 40;
	}
	if (▲兵種Ａ == 1 || ▲兵種Ａ == 27 || ▲兵種Ａ == 76)
	{
		aa1 = 30;
	}
	if (▲兵種Ａ == 10 || ▲兵種Ａ == 63)
	{
		aa1 = 30;
	}
	if (▲兵種Ａ == 7)
	{
		aa1 = 20;
	}
	if (▲兵種Ａ == 3 || ▲兵種Ａ == 28 || ▲兵種Ａ == 102 || ▲兵種Ａ == 103)
	{
		aa1 = 15;
	}
	if (▲兵種Ａ == 5 || ▲兵種Ａ == 29)
	{
		aa1 = 15;
	}
	if (▲兵種Ａ == 13 || ▲兵種Ａ == 20)
	{
		aa1 = 8;
	}
	if (▲兵種Ａ == 6)
	{
		aa1 = 8;
	}
	if (▲兵種Ａ == 24)
	{
		aa1 = 3;
	}
	aa2 = 30;
	if (▲兵種Ｂ == 61)
	{
		aa2 = -50;
	}
	if (▲兵種Ｂ == 97)
	{
		aa2 = -50;
	}
	if (▲兵種Ｂ == 73)
	{
		aa2 = -50;
	}
	if (▲兵種Ｂ == 93 || ▲兵種Ｂ == 94 || ▲兵種Ｂ == 95 || ▲兵種Ｂ == 96 || ▲兵種Ｂ == 76 || ▲兵種Ｂ == 99 || ▲兵種Ｂ == 102)
	{
		aa2 = -20;
	}
	if (▲兵種Ｂ == 60 || ▲兵種Ｂ == 62 || ▲兵種Ｂ > 62 && ▲兵種Ｂ < 90 || ▲兵種Ｂ == 91 || ▲兵種Ｂ == 92)
	{
		aa2 = -20;
	}
	if (▲兵種Ｂ == 34)
	{
		aa2 = -5;
	}
	if (▲兵種Ｂ == 1 || ▲兵種Ｂ == 27 || ▲兵種Ｂ == 10 || ▲兵種Ｂ == 7 || ▲兵種Ｂ == 2 || ▲兵種Ｂ == 98)
	{
		aa2 = 0;
	}
	if (▲兵種Ｂ == 3 || ▲兵種Ｂ == 28 || ▲兵種Ｂ == 103)
	{
		aa2 = 10;
	}
	if (▲兵種Ｂ == 6 || ▲兵種Ｂ == 5 || ▲兵種Ｂ == 29)
	{
		aa2 = 15;
	}
	if (▲兵種Ｂ == 13 || ▲兵種Ｂ == 8 || ▲兵種Ｂ == 9 || ▲兵種Ｂ == 11)
	{
		aa2 = 20;
	}
	if (▲兵種Ｂ == 24 || ▲兵種Ｂ == 4)
	{
		aa2 = 30;
	}
	aa1 = aa1 + aa2;
	aa2 = ▲攻撃Ａ;
	▲攻撃付与倍率 = gs[ii][iic].攻撃付与 + 100;
	▲攻撃Ａ = 倍率計算関数(▲攻撃Ａ, ▲攻撃付与倍率);
	aa2 = ▲防御Ｂ;
	▲防御付与倍率 = gs[ii][iic2].防御付与 + 100;
	▲防御Ｂ = 倍率計算関数(▲防御Ｂ, ▲防御付与倍率);
	aa3 = (aa1 + ▲攻撃Ａ) - ▲防御Ｂ;
	if (aa3 < 10)
	{
		aa3 = 10;
	}
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("　物理計算　" + string(aa3) + "　＝　" + string(aa1) + "＋" + string(▲攻撃Ａ) + "（" + string(▲攻撃付与倍率) + "）−" + string(▲防御Ｂ) + "（" + string(▲防御付与倍率) + "）　　攻：" + string(gs[ii][iic].攻撃) + "　防：" + string(gs[ii][iic2].防御) + "\n");
	}
	return aa3;
}

lint 魔法計算(lint iic, lint iic2, lint bb)
{
	lint ii = 0;
	lint ▲兵種Ａ = gs[ii][iic].兵種;
	lint ▲兵種Ｂ = gs[ii][iic2].兵種;
	lint ▲攻撃Ａ = gs[ii][iic].知力 * 10;
	lint ▲防御Ｂ = gs[ii][iic2].知力 * 7;
	lint キャラ = gs[ii][iic].番号;
	lint aa = 0;
	lint aa1 = 0;
	lint aa2 = 0;
	lint aa3 = 0;
	lint rr = 0;
	lint cc = 0;
	lint bb = 0;
	lint レベル差 = 0;
	lint ▲攻撃付与倍率 = 0;
	lint ▲防御付与倍率 = 0;
	lint ▲攻撃側 = 0;
	lint ▲防御側 = 0;
	if (◆合戦味方ターン == 1)
	{
		▲攻撃側 = 1;
		▲防御側 = 2;
	}
	else
	{
		▲攻撃側 = 2;
		▲防御側 = 1;
	}
	if (◆戦闘タイプ == 1)
	{
		▲兵種Ａ = gs[ii][iic].Ｓ職種;
		aa1 = 7;
		lint iic2_lev = gs[ii][iic2].Ｓレベル;
		if (◆特定戦闘 == 97)
		{
			iic2_lev = 40;
		}
		レベル差 = gs[ii][iic].Ｓレベル - iic2_lev / 2;
		if (レベル差 < 5)
		{
			レベル差 = 5;
		}
		if (レベル差 > 30)
		{
			レベル差 = 30 + (レベル差 - 30) / 2;
		}
		lint ボーナスダメージ = -1;
		if (gs[ii][iic].Ｓレベル > 35)
		{
			ボーナスダメージ = (gs[ii][iic].Ｓレベル - 35) * 3;
			if (ボーナスダメージ > 60)
			{
				ボーナスダメージ = 60;
			}
		}
		▲攻撃Ａ = aa1 * レベル差 + ボーナスダメージ;
		if (gs[ii][iic].知力付与 != 0)
		{
			▲攻撃Ａ = 倍率計算関数(▲攻撃Ａ, 130);
		}
		if (gs[ii][iic2].知力付与 != 0)
		{
			▲攻撃Ａ = 倍率計算関数(▲攻撃Ａ, 70);
		}
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　魔法計算　" + string(▲攻撃Ａ) + "　ソロ計算［レベル差" + string(レベル差) + "］");
			if (gs[ii][iic].知力付与 != 0)
			{
				LOG_TADA("／攻撃付与");
			}
			if (gs[ii][iic2].知力付与 != 0)
			{
				LOG_TADA("／防御付与");
			}
			LOG_TADA("\n");
		}
		if (キャラ == 1241)
		{
			▲攻撃Ａ = 100;
		}
		return ▲攻撃Ａ;
	}
	aa1 = 5;
	if (▲兵種Ａ == 97 || ▲兵種Ａ == 98)
	{
		aa1 = 100;
	}
	if (▲兵種Ａ == 67 || ▲兵種Ａ == 68 || ▲兵種Ａ == 76)
	{
		aa1 = 60;
	}
	if (▲兵種Ａ == 11 || ▲兵種Ａ == 61)
	{
		aa1 = 45;
	}
	if (▲兵種Ａ == 8)
	{
		aa1 = 40;
	}
	if (▲兵種Ａ == 9 || ▲兵種Ａ == 60)
	{
		aa1 = 20;
	}
	if (▲兵種Ａ == 7)
	{
		aa1 = 20;
	}
	aa2 = 20;
	if (▲兵種Ｂ == 8)
	{
		aa2 = 0;
	}
	if (▲兵種Ｂ == 11 || ▲兵種Ｂ == 67 || ▲兵種Ｂ == 68)
	{
		aa2 = 0;
	}
	if (▲兵種Ｂ == 3)
	{
		aa2 = 10;
	}
	if (▲兵種Ｂ == 9)
	{
		aa2 = 10;
	}
	if (▲兵種Ｂ == 7)
	{
		aa2 = 10;
	}
	if (▲兵種Ｂ == 6)
	{
		aa2 = 10;
	}
	if (▲兵種Ｂ == 24)
	{
		aa2 = 30;
	}
	if (ＦＰ技能取得(216, ▲防御側) != 0)
	{
		aa1 -= 10;
	}
	aa2 = ▲攻撃Ａ;
	▲攻撃付与倍率 = gs[ii][iic].知力付与 + 100;
	▲攻撃Ａ = 倍率計算関数(▲攻撃Ａ, ▲攻撃付与倍率);
	aa2 = ▲防御Ｂ;
	▲防御付与倍率 = gs[ii][iic2].知力付与 + 100;
	▲防御Ｂ = 倍率計算関数(▲防御Ｂ, ▲防御付与倍率);
	aa3 = (aa1 + ▲攻撃Ａ) - ▲防御Ｂ;
	if (aa3 < 10)
	{
		aa3 = 10;
	}
	lint 追加ダメージ = 0;
	if (◆戦闘タイプ == 0 && gs[ii][iic].Ｓレベル > 29)
	{
		追加ダメージ += gs[ii][iic].Ｓレベル * 3;
	}
	if (◆戦闘タイプ == 0 && gs[ii][iic].Ｓレベル > 50)
	{
		追加ダメージ += (gs[ii][iic].Ｓレベル - 50) * 5;
	}
	if (行動ターゲット[bb] == 7)
	{
		追加ダメージ = 倍率計算関数(追加ダメージ, 30);
	}
	aa3 += 追加ダメージ;
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("　魔法計算　" + string(aa3) + "　＝　" + string(aa1) + "＋" + string(▲攻撃Ａ) + "（" + string(▲攻撃付与倍率) + "）−" + string(▲防御Ｂ) + "（" + string(▲防御付与倍率) + "）\n");
	}
	return aa3;
}

lint ボスダメージ補正(lint ▲ＤＭ, lint ii, lint iic2, lint bb, lint iic)
{
	lint aa = 0;
	lint ch = 0;
	ch = gs[ii][iic2].番号;
	if (◆戦闘タイプ == 1)
	{
		if (gs[ii][iic2].Ｓ職種 == 51 || gs[ii][iic2].Ｓ職種 == 50)
		{
			aa = 0;
			if (◆合戦味方ターン == 1 && (ＦＰ確認(1003, 0, 0, 0) == 1 || ＦＰ確認(1000, 0, 0, 0) == 1 || ＦＰ確認(1301, 0, 0, 0) == 1))
			{
				aa = 1;
			}
			if (◆合戦味方ターン == 2 && (ＦＰ確認(1003, 0, 0, 0) == 1 || ＦＰ確認(1000, 0, 0, 0) == 1 || ＦＰ確認(1301, 0, 0, 0) == 1))
			{
				aa = 1;
			}
			if (gs[ii][iic].Ｓ職種 == 51 || gs[ii][iic].Ｓ職種 == 50)
			{
				aa = 1;
			}
			if (◆特定戦闘 == 105 || ◆特定戦闘 == 106 || ◆特定戦闘 == 107)
			{
				aa = 1;
			}
			if (◆特定戦闘 == 91 || ◆特定戦闘 == 97 || EV("天界／開始", -2147483648) == true)
			{
				aa = 1;
			}
			if (aa == 0)
			{
				▲ＤＭ = 0;
			}
		}
		if (▲ＤＭ != 0 && ch != 1003 && ch != 1088 && ch != 1020 && (gs[ii][iic2].Ｓ職種 == 51 || gs[ii][iic2].Ｓ職種 == 52))
		{
			if (▲ＤＭ > gs[ii][iic2].Ｓ体力最大 / 5)
			{
				▲ＤＭ = gs[ii][iic2].Ｓ体力最大 / 5;
			}
		}
	}
	if (◆戦闘タイプ == 0)
	{
		if (gs[ii][iic2].番号 == 1035 && gs[ii][iic2].個人 == 1)
		{
			if (▲ＤＭ > gs[ii][iic2].Ｓ体力最大 / 2)
			{
				▲ＤＭ = gs[ii][iic2].Ｓ体力最大 / 2;
			}
		}
		if (gs[ii][iic2].番号 == 1447)
		{
			▲ＤＭ = 倍率計算関数(▲ＤＭ, 10);
		}
		if (gs[ii][iic2].番号 == 1017)
		{
			▲ＤＭ = 0;
		}
		if (gs[ii][iic2].番号 == 1003 && ＡＣＦ(1003, 9999) == 100 && ▲ＤＭ >= gs[ii][iic2].兵数)
		{
			▲ＤＭ = gs[ii][iic2].兵数 - 1;
		}
	}
	if (bb == 98 && ▲ＤＭ != 0)
	{
		if (gs[ii][iic2].Ｓレベル > 30)
		{
			▲ＤＭ = gs[ii][iic2].Ｓ体力最大 / 2;
			▲ＤＭ = ▲ＤＭ - RAND(20);
		}
	}
	if (ＧＦ[467] == 0 && bb == 252 && ▲ＤＭ != 0)
	{
		if (▲ＤＭ < 2000)
		{
			▲ＤＭ = 2000;
		}
	}
	if (ＧＦ[467] == 0 && bb == 253 && ▲ＤＭ != 0)
	{
		if (▲ＤＭ < 1000)
		{
			▲ＤＭ = 1000;
		}
	}
	if (◆特定戦闘 == 97 && ◆合戦味方ターン == 1 && gs[ii][iic].技能 == 745)
	{
		▲ＤＭ = 0;
	}
	if (ＧＦ[467] == 0 && ◆特定戦闘 == 97 && ◆合戦味方ターン == 2 && ＧＦ[369] < 3)
	{
		if (▲ＤＭ > 1000)
		{
			▲ＤＭ = 1000;
		}
	}
	if (bb == 78 && ▲ＤＭ != 0)
	{
		LOG_TADA("　　オロチビーム補正\n");
		if (gs[ii][iic2].Ｓレベル > 40 && gs[ii][iic2].Ｓ体力最大 < ▲ＤＭ)
		{
			▲ＤＭ = (gs[ii][iic2].Ｓ体力最大 / 4) * 3 + RAND(gs[ii][iic2].Ｓ体力 / 4);
		}
	}
	if (ＧＦ[467] == 0 && (bb == 252 || bb == 253) && ▲ＤＭ != 0)
	{
		LOG_TADA("　　ＡＬＩＣＥ補正\n");
		if (gs[ii][iic2].Ｓレベル > 60 && gs[ii][iic2].Ｓ体力最大 < ▲ＤＭ)
		{
			▲ＤＭ = (gs[ii][iic2].Ｓ体力最大 / 4) * 3 + RAND(gs[ii][iic2].Ｓ体力 / 4);
		}
	}
	return ▲ＤＭ;
}

lint 人数計算(lint ▲基礎値, lint ▲参加数)
{
	lint bb1 = 0;
	lint bb2 = 0;
	lint bb3 = 0;
	lint bb4 = 0;
	lint bb5 = 0;
	lint rr = 0;
	lint 倍率 = 0;
	bb1 = 500;
	bb2 = 500;
	bb3 = 1000;
	bb4 = 0;
	if (▲参加数 < 100000 && ▲参加数 >= 2000)
	{
		bb1 = 500;
		bb2 = 500;
		bb3 = 1000;
		bb4 = ▲参加数 - bb1 - bb2 - bb3;
	}
	if (▲参加数 < 2000 && ▲参加数 >= 1000)
	{
		bb1 = 500;
		bb2 = 500;
		bb3 = ▲参加数 - 1000;
		bb4 = 0;
	}
	if (▲参加数 < 1000 && ▲参加数 >= 500)
	{
		bb1 = 500;
		bb2 = ▲参加数 - 500;
		bb3 = 0;
		bb4 = 0;
	}
	if (▲参加数 < 500)
	{
		bb1 = ▲参加数;
		bb2 = 0;
		bb3 = 0;
		bb4 = 0;
	}
	倍率 = bb1;
	倍率 = 倍率 + bb2 / 4;
	倍率 = 倍率 + bb3 / 5;
	倍率 = 倍率 + bb4 / 6;
	if (倍率 < 100)
	{
		倍率 = 100;
	}
	rr = ▲基礎値 * 倍率;
	rr = rr / 100;
	if (rr > ▲参加数)
	{
		rr = ▲参加数;
	}
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("　人数計算　" + string(rr) + "　＝　" + string(▲参加数) + "名（倍率" + string(倍率) + "％）\n");
	}
	return rr;
}

lint 速度補正値(lint iic, lint 数値)
{
	lint aa = 0;
	lint bb = 0;
	lint ii = 0;
	lint ▲兵種 = gs[ii][iic].兵種;
	aa = 12;
	if (▲兵種 == 6 || ▲兵種 == 66)
	{
		aa = 6;
	}
	if (▲兵種 == 4 || ▲兵種 == 91 || ▲兵種 == 92)
	{
		aa = 8;
	}
	if (▲兵種 == 2 || ▲兵種 == 69 || ▲兵種 == 70 || ▲兵種 == 71 || ▲兵種 == 72)
	{
		aa = 10;
	}
	if (▲兵種 == 27 || ▲兵種 == 28 || ▲兵種 == 31 || ▲兵種 == 29 || ▲兵種 == 34 || ▲兵種 == 60 || ▲兵種 > 71 && ▲兵種 < 90 || ▲兵種 == 91 || ▲兵種 == 92 || ▲兵種 == 69)
	{
		aa = 11;
	}
	if (▲兵種 == 3)
	{
		aa = 11;
	}
	if (▲兵種 == 1)
	{
		aa = 12;
	}
	if (▲兵種 == 10)
	{
		aa = 14;
	}
	if (▲兵種 == 8)
	{
		aa = 14;
	}
	if (▲兵種 == 12)
	{
		aa = 15;
	}
	if (▲兵種 == 5)
	{
		aa = 15;
	}
	if (▲兵種 == 9)
	{
		aa = 16;
	}
	if (▲兵種 == 11)
	{
		aa = 17;
	}
	if (▲兵種 == 7)
	{
		aa = 20;
	}
	if (▲兵種 == 13)
	{
		aa = 20;
	}
	if (▲兵種 == 24)
	{
		aa = 30;
	}
	if (gs[ii][iic].早さ == 0)
	{
		aa += 8;
	}
	if (gs[ii][iic].早さ == 1)
	{
		aa += 6;
	}
	if (gs[ii][iic].早さ == 2)
	{
		aa += 4;
	}
	if (gs[ii][iic].早さ == 3)
	{
		aa += 2;
	}
	if (gs[ii][iic].早さ == 4)
	{
		aa = aa;
	}
	if (gs[ii][iic].早さ == 5)
	{
		aa -= 2;
	}
	if (gs[ii][iic].早さ == 6)
	{
		aa -= 4;
	}
	if (gs[ii][iic].早さ == 7)
	{
		aa -= 6;
	}
	if (gs[ii][iic].早さ == 8)
	{
		aa -= 8;
	}
	if (gs[ii][iic].早さ == 9)
	{
		aa -= 9;
	}
	if (gs[ii][iic].早さ == 10)
	{
		aa -= 10;
	}
	if (gs[ii][iic].早さ == 11)
	{
		aa -= 11;
	}
	if (gs[ii][iic].早さ == 12)
	{
		aa -= 12;
	}
	if (gs[ii][iic].早さ付与 != 0)
	{
		aa -= 4;
	}
	if (gs[ii][iic].予備１ == 1)
	{
		aa += 6;
	}
	aa = aa + 数値;
	return aa;
}

lint 合戦／合戦補正(lint aa1, lint フラグ)
{
	if (aa1 == 0)
	{
		return 0;
	}
	lint bb = 0;
	lint cc = 0;
	bb = 100;
	if (フラグ == 1)
	{
		if (◆合戦補正１ != 0)
		{
			bb = 100 + ◆合戦補正１;
		}
		if (◆合戦補正２ != 0)
		{
			bb = 100 - ◆合戦補正２;
		}
	}
	if (フラグ == 2)
	{
		if (◆合戦補正１ != 0)
		{
			bb = 100 - ◆合戦補正１;
		}
		if (◆合戦補正２ != 0)
		{
			bb = 100 + ◆合戦補正２;
		}
	}
	cc = 倍率計算関数(aa1, bb);
	if (bb != 100 && ◆ＤＢＶ == 1)
	{
		LOG_TADA("　戦闘計算　ダメージ　" + string(aa1) + "→" + string(cc) + "　　合戦補正（" + string(bb) + "％）\n");
	}
	return cc;
}

lint 戦果取得(lint フラグ)
{
	lint ▲戦果１ = 0;
	lint ▲戦果２ = 0;
	lint aa = 0;
	aa = ◆被害総数１ + ◆被害総数２;
	▲戦果１ = ％取得関数(aa, ◆被害総数１);
	▲戦果２ = ％取得関数(aa, ◆被害総数２);
	▲戦果１ = (▲戦果１ + ◆戦果補正１) - ◆戦果補正２;
	▲戦果２ = (▲戦果２ + ◆戦果補正２) - ◆戦果補正１;
	if (フラグ == 1)
	{
		return ▲戦果１;
	}
	if (フラグ == 2)
	{
		return ▲戦果２;
	}
	return 0;
}

lint 合戦兵力取得(lint フラグ)
{
	lint aa = 0;
	lint loop = 0;
	lint ii = 0;
	if (フラグ == 1)
	{
		for (loop = 11; loop < 17; loop++)
		{
			aa += gs[ii][loop].兵数;
		}
	}
	if (フラグ == 2)
	{
		for (loop = 21; loop < 27; loop++)
		{
			aa += gs[ii][loop].兵数;
		}
	}
	return aa;
}

lint 合戦／行動前処理(lint iic, lint bb, lint iic2)
{
	lint ii = 0;
	lint F1 = 0;
	lint F2 = 0;
	lint aa = 0;
	lint rr = 0;
	lint loop = 0;
	lint キャラ = gs[ii][iic].番号;
	lint ＣＧＸ = 0;
	lint FF = 0;
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("\n■　合戦／行動前処理　" + gs[ii][iic].名前 + " " + string(bb) + "\n");
	}
	◆味方ＥＦ = 0;
	◆敵ＥＦ = 0;
	F1 = 1;
	F2 = 2;
	if (iic > 20)
	{
		F1 = 2;
		F2 = 1;
	}
	FF = F1;
	◆経過時間++;
	if (行動タメ[bb] != 0 && gs[ii][iic].ＦＦ == 0)
	{
		return 0;
	}
	if (F1 == 1)
	{
		FF = 0;
		ＣＧＸ = gs[ii][iic].ＣＧ;
	}
	if (F1 == 2)
	{
		FF = 1;
		ＣＧＸ = gs[ii][iic].ＣＧ;
	}
	if (F1 == 1)
	{
		ＴＸ(1, iic, iic2, bb, ＣＧＸ);
	}
	if (F1 == 2)
	{
		ＴＸ(2, iic, iic2, bb, ＣＧＸ);
	}
	return 0;
}

lint 合戦／行動後処理(lint iic, lint iic2, lint bb)
{
	lint ii = 0;
	lint F1 = 0;
	lint F2 = 0;
	lint aa = 0;
	lint aa1 = 0;
	lint aa2 = 0;
	lint aa3 = 0;
	lint rr = 0;
	lint loop = 0;
	lint ra = 0;
	if (◆ＤＢＶ == 1)
	{
		LOG_TADA("\n■　合戦／行動後処理　" + gs[ii][iic].名前 + " " + string(bb) + "\n");
	}
	◆味方ＥＦ = 0;
	◆敵ＥＦ = 0;
	F1 = 1;
	F2 = 2;
	if (iic > 20)
	{
		F1 = 2;
		F2 = 1;
	}
	if (行動戦果[bb] != 0)
	{
		if (F1 == 1)
		{
			戦果補正(行動戦果[bb], 0, "行動戦果");
			◆味方ＥＦ = 6;
		}
		if (F1 == 2)
		{
			戦果補正(0, 行動戦果[bb], "行動戦果");
			◆敵ＥＦ = 6;
		}
	}
	if (bb == 2)
	{
		gs[ii][iic].攻撃付与 = 50;
		if (F1 == 1)
		{
			◆味方ＥＦ = 11;
		}
		else
		{
			◆敵ＥＦ = 11;
		}
	}
	if (bb == 4 || bb == 166)
	{
		gs[ii][iic].Ｆ集中++;
		if (F1 == 1)
		{
			◆味方ＥＦ = 8;
		}
		else
		{
			◆敵ＥＦ = 8;
		}
	}
	if (bb == 5)
	{
		◆合戦ターン += 2;
		戦闘時間_更新();
		if (F1 == 1)
		{
			◆味方ＥＦ = 40;
		}
		else
		{
			◆敵ＥＦ = 40;
		}
	}
	if (bb == 150)
	{
		◆合戦ターン += 4;
		戦闘時間_更新();
		if (F1 == 1)
		{
			◆味方ＥＦ = 40;
		}
		else
		{
			◆敵ＥＦ = 40;
		}
	}
	if (bb == 160)
	{
		◆合戦ターン -= 4;
		戦闘時間_更新();
		if (F1 == 1)
		{
			◆味方ＥＦ = 40;
		}
		else
		{
			◆敵ＥＦ = 40;
		}
	}
	if (bb == 161)
	{
		◆合戦ターン -= 6;
		戦闘時間_更新();
		if (F1 == 1)
		{
			◆味方ＥＦ = 40;
		}
		else
		{
			◆敵ＥＦ = 40;
		}
	}
	if (bb == 174 || bb == 223)
	{
		if (gs[ii][iic2].ＦＦ == 99 && gs[ii][iic2].現在技数 == 0 && gs[ii][iic2].Ｓ体力 != 0 && gs[ii][iic2].兵数 != 0)
		{
			gs[ii][iic].ＦＦ = 0;
		}
		gs[ii][iic2].現在技数++;
		if (gs[ii][iic2].現在技数 > gs[ii][iic2].技数)
		{
			gs[ii][iic2].現在技数 = gs[ii][iic2].技数;
		}
		gs[ii][iic2].予備１ = 1;
	}
	if (bb == 175)
	{
		if (gs[ii][iic2].ＦＦ == 99 && gs[ii][iic2].現在技数 == 0 && gs[ii][iic2].Ｓ体力 != 0 && gs[ii][iic2].兵数 != 0)
		{
			gs[ii][iic].ＦＦ = 0;
		}
		gs[ii][iic2].現在技数 += 2;
		if (gs[ii][iic2].現在技数 > gs[ii][iic2].技数)
		{
			gs[ii][iic2].現在技数 = gs[ii][iic2].技数;
		}
		gs[ii][iic2].予備１ = 1;
	}
	if (bb == 707)
	{
		for (iic2 = 11; iic2 < 17; iic2++)
		{
			gs[ii][iic2].現在技数 += 1;
			if (gs[ii][iic2].現在技数 > gs[ii][iic2].技数)
			{
				gs[ii][iic2].現在技数 = gs[ii][iic2].技数;
			}
		}
		gs[ii][iic].現在技数 = 0;
	}
	if (bb == 6)
	{
		gs[ii][iic].ＦＦ = 3;
	}
	if (bb == 21)
	{
		gs[ii][iic].ＦＦ = 21;
		if (◆戦闘タイプ == 0)
		{
			gs[ii][iic].ＦＦＥ += gs[ii][iic].知力 * 20;
		}
		if (◆戦闘タイプ == 1)
		{
			gs[ii][iic].ＦＦＥ += 80;
		}
		if (F1 == 1)
		{
			◆味方ＥＦ = 1;
		}
		else
		{
			◆敵ＥＦ = 1;
		}
	}
	if (bb == 22)
	{
		gs[ii][iic].ＦＦ = 22;
		if (◆戦闘タイプ == 0)
		{
			gs[ii][iic].ＦＦＥ += gs[ii][iic].知力 * 30;
		}
		if (◆戦闘タイプ == 1)
		{
			gs[ii][iic].ＦＦＥ += 150;
		}
		if (F1 == 1)
		{
			◆味方ＥＦ = 1;
		}
		else
		{
			◆敵ＥＦ = 1;
		}
	}
	if (bb == 23)
	{
		gs[ii][iic].ＦＦ = 23;
		if (◆戦闘タイプ == 0)
		{
			gs[ii][iic].ＦＦＥ += gs[ii][iic].知力 * 10;
		}
		if (◆戦闘タイプ == 1)
		{
			gs[ii][iic].ＦＦＥ += 100;
		}
		if (F1 == 1)
		{
			◆味方ＥＦ = 1;
		}
		else
		{
			◆敵ＥＦ = 1;
		}
	}
	if (bb == 729)
	{
		gs[ii][iic].ＦＦ = 23;
		if (◆戦闘タイプ == 0)
		{
			gs[ii][iic].ＦＦＥ += gs[ii][iic].知力 * 20;
		}
		if (◆戦闘タイプ == 1)
		{
			gs[ii][iic].ＦＦＥ += 100;
		}
		if (F1 == 1)
		{
			◆味方ＥＦ = 1;
		}
		else
		{
			◆敵ＥＦ = 1;
		}
	}
	if (bb == 37)
	{
		gs[ii][iic].防御付与 = 70;
	}
	if (bb == 38)
	{
		if (F1 == 1)
		{
			戦果補正(行動ダメージ率[bb], 0, "情報攪乱成功");
			◆敵ＥＦ = 7;
		}
		if (F1 == 2)
		{
			戦果補正(0, 行動ダメージ率[bb], "情報攪乱成功");
			◆味方ＥＦ = 7;
		}
	}
	if (bb == 39)
	{
		if (F1 == 1)
		{
			戦果補正(行動ダメージ率[bb], 0, "情報攪乱成功");
			◆敵ＥＦ = 7;
		}
		if (F1 == 2)
		{
			戦果補正(0, 行動ダメージ率[bb], "情報攪乱成功");
			◆味方ＥＦ = 7;
		}
	}
	if (bb == 60)
	{
		if (◆戦闘タイプ == 0)
		{
			aa1 = gs[ii][iic].知力 * 5;
		}
		if (◆戦闘タイプ == 1)
		{
			aa1 = gs[ii][iic].Ｓレベル;
		}
		gs[ii][iic2].攻撃付与 = aa1;
		gs[ii][iic2].防御付与 = aa1;
		gs[ii][iic2].知力付与 = aa1;
		gs[ii][iic2].早さ付与 = aa1;
		if (F1 == 1)
		{
			◆味方ＥＦ = 15;
		}
		if (F1 == 2)
		{
			◆敵ＥＦ = 15;
		}
	}
	if (bb == 60 || bb == 135)
	{
		if (◆戦闘タイプ == 0)
		{
			aa1 = gs[ii][iic].知力 * 5;
		}
		if (◆戦闘タイプ == 1)
		{
			aa1 = gs[ii][iic].Ｓレベル;
		}
		if (bb == 135)
		{
			for (loop = 1; loop < 2; loop++)
			{
				ra = RAND(4);
				if (ra == 1 && gs[ii][iic2].攻撃付与 == 0)
				{
					gs[ii][iic2].攻撃付与 = aa1;
				}
				if (ra == 2 && gs[ii][iic2].防御付与 == 0)
				{
					gs[ii][iic2].防御付与 = aa1;
				}
				if (ra == 3 && gs[ii][iic2].知力付与 == 0)
				{
					gs[ii][iic2].知力付与 = aa1;
				}
				if (ra == 4 && gs[ii][iic2].早さ付与 == 0)
				{
					gs[ii][iic2].早さ付与 = aa1;
				}
			}
		}
		if (bb == 60)
		{
			if (gs[ii][iic2].攻撃付与 == 0)
			{
				gs[ii][iic2].攻撃付与 = aa1;
			}
			if (gs[ii][iic2].防御付与 == 0)
			{
				gs[ii][iic2].防御付与 = aa1;
			}
			if (gs[ii][iic2].知力付与 == 0)
			{
				gs[ii][iic2].知力付与 = aa1;
			}
			if (gs[ii][iic2].早さ付与 == 0)
			{
				gs[ii][iic2].早さ付与 = aa1;
			}
		}
		if (F1 == 1)
		{
			◆味方ＥＦ = 15;
		}
		if (F1 == 2)
		{
			◆敵ＥＦ = 15;
		}
	}
	if (bb == 228)
	{
		for (iic2 = 11; iic2 < 17; iic2++)
		{
			gs[ii][iic2].攻撃付与 = 75;
			gs[ii][iic2].防御付与 = 75;
			gs[ii][iic2].知力付与 = 75;
			gs[ii][iic2].早さ付与 = 75;
		}
	}
	if (bb == 61 || bb == 62 || bb == 63)
	{
		if (bb == 61)
		{
			aa3 = gs[ii][iic].兵数 / 100 + 2;
		}
		if (bb == 62)
		{
			aa3 = gs[ii][iic].兵数 / 200 + 2;
		}
		if (bb == 63)
		{
			aa3 = gs[ii][iic].兵数 / 300 + 2;
		}
		if (◆戦闘タイプ == 0)
		{
			aa2 = gs[ii][iic].知力 * 5;
			if (アイテム確認(139, iic, ii) == 1)
			{
				aa2 = gs[ii][iic].知力 * 6;
			}
		}
		if (◆戦闘タイプ == 1)
		{
			aa2 = gs[ii][iic].Ｓレベル;
		}
		if (gs[ii][iic].技能 == 733)
		{
			aa2 = (aa2 * 130) / 100;
		}
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　行動［" + 行動名前[bb] + "］　番号：" + string(bb) + "\n");
			LOG_TADA("　　発動数（" + string(aa3) + "）　戦術効果（" + string(aa2) + "％）\n");
		}
		for (loop = 1; loop < 30; loop++)
		{
			if (aa3 == 0)
			{
				break;
			}
			if (F1 == 1)
			{
				iic2 = 乱稼働ＦＰ取得(1);
			}
			if (F1 == 2)
			{
				iic2 = 乱稼働ＦＰ取得(2);
			}
			if (iic2 == 0)
			{
				break;
			}
			aa1 = RAND(4);
			if (gs[ii][iic2].攻撃付与 == 0 && (gs[ii][iic2].兵種 == 1 || gs[ii][iic2].兵種 == 5 || gs[ii][iic2].兵種 == 4))
			{
				aa1 = 1;
			}
			if (gs[ii][iic2].防御付与 == 0 && gs[ii][iic2].兵種 == 3)
			{
				aa1 = 2;
			}
			if (gs[ii][iic2].知力付与 == 0 && gs[ii][iic2].兵種 == 8)
			{
				aa1 = 3;
			}
			aa = 0;
			if (aa1 == 1 && gs[ii][iic2].攻撃付与 < aa2)
			{
				gs[ii][iic2].攻撃付与 = aa2;
				aa = 1;
			}
			if (aa1 == 2 && gs[ii][iic2].防御付与 < aa2)
			{
				gs[ii][iic2].防御付与 = aa2;
				aa = 1;
			}
			if (aa1 == 3 && gs[ii][iic2].知力付与 < aa2)
			{
				gs[ii][iic2].知力付与 = aa2;
				aa = 1;
			}
			if (aa1 == 4 && gs[ii][iic2].早さ付与 < aa2)
			{
				gs[ii][iic2].早さ付与 = aa2;
				aa = 1;
			}
			if (aa == 1)
			{
				aa3--;
				if (◆ＤＢＶ == 1)
				{
					LOG_TADA("　　" + gs[ii][iic2].名前 + "　");
					if (aa1 == 1)
					{
						LOG_TADA("攻撃戦術　\n");
					}
					if (aa1 == 2)
					{
						LOG_TADA("防御戦術　\n");
					}
					if (aa1 == 3)
					{
						LOG_TADA("知力戦術　\n");
					}
					if (aa1 == 4)
					{
						LOG_TADA("早さ戦術　\n");
					}
				}
			}
		}
		if (F1 == 1)
		{
			◆味方ＥＦ = 15;
		}
		if (F1 == 2)
		{
			◆敵ＥＦ = 15;
		}
	}
	if (bb == 66)
	{
		◆被害総数１ <=> ◆被害総数２;
		◆戦果補正１ <=> ◆戦果補正２;
		if (F1 == 1)
		{
			◆味方ＥＦ = 6;
		}
		else
		{
			◆敵ＥＦ = 6;
		}
		if (ＧＦ[160] > 2)
		{
			gs[ii][iic].技１ = 63;
		}
	}
	if (bb == 70 || bb == 71 || bb == 72 || bb == 721)
	{
		if (bb == 70)
		{
			aa = 2;
		}
		if (bb == 71)
		{
			aa = 3;
		}
		if (bb == 72)
		{
			aa = 4;
		}
		if (bb == 721)
		{
			aa = 6;
		}
		if (◆ＤＢＶ == 1)
		{
			LOG_TADA("　行動［" + 行動名前[bb] + "］　番号：" + string(bb) + "\n");
			LOG_TADA("　　発動数（" + string(aa) + "）　\n");
		}
		for (loop = 1; loop < 30; loop++)
		{
			if (aa == 0)
			{
				break;
			}
			if (F1 == 1)
			{
				iic2 = 乱稼働ＦＰ取得(2);
			}
			if (F1 == 2)
			{
				iic2 = 乱稼働ＦＰ取得(1);
			}
			if (iic2 == 0)
			{
				break;
			}
			if (gs[ii][iic2].攻撃付与 == 0 && gs[ii][iic2].防御付与 == 0 && gs[ii][iic2].知力付与 == 0 && gs[ii][iic2].早さ付与 == 0)
			{
				continue;
			}
			if (gs[ii][iic2].技能 == 732 || gs[ii][iic2].技能 == 741)
			{
				break;
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("　　" + gs[ii][iic2].名前 + "　の合戦戦術を解除\n");
			}
			aa--;
			gs[ii][iic2].攻撃付与 = 0;
			gs[ii][iic2].防御付与 = 0;
			gs[ii][iic2].知力付与 = 0;
			gs[ii][iic2].早さ付与 = 0;
		}
		if (F1 == 1)
		{
			◆敵ＥＦ = 17;
		}
		if (F1 == 2)
		{
			◆味方ＥＦ = 17;
		}
	}
	if (bb == 73)
	{
		if (F1 == 1)
		{
			◆敵ＥＦ = 2;
			for (loop = 21; loop < 27; loop++)
			{
				if (gs[ii][loop].ＦＦＥ != 0 && gs[ii][loop].ＦＦ != 99)
				{
					gs[ii][loop].ＦＦ = 0;
					gs[ii][loop].ＦＦＥ = 0;
				}
			}
		}
		if (F1 == 2)
		{
			◆味方ＥＦ = 1;
			for (loop = 11; loop < 17; loop++)
			{
				if (gs[ii][loop].ＦＦＥ != 0 && gs[ii][loop].ＦＦ != 99)
				{
					gs[ii][loop].ＦＦ = 0;
					gs[ii][loop].ＦＦＥ = 0;
				}
			}
		}
	}
	if (bb == 3)
	{
		gs[ii][iic2].Ｆ式神 = 1;
		if (F1 == 1)
		{
			◆味方ＥＦ = 9;
		}
		else
		{
			◆敵ＥＦ = 9;
		}
		return 0;
	}
	if (bb == 143)
	{
		if (F1 == 1)
		{
			for (iic = 11; iic < 17; iic++)
			{
				gs[ii][iic].Ｆ式神 = 1;
			}
		}
		if (F1 == 2)
		{
			for (iic = 21; iic < 27; iic++)
			{
				gs[ii][iic].Ｆ式神 = 1;
			}
		}
		gs[ii][iic2].Ｆ式神 = 1;
		if (F1 == 1)
		{
			◆味方ＥＦ = 9;
		}
		else
		{
			◆敵ＥＦ = 9;
		}
		return 0;
	}
	if (bb == 96)
	{
		gs[ii][iic].攻撃付与 = 70;
	}
	if (bb == 154 || bb == 155 || bb == 156 || bb == 801)
	{
		if (F1 == 1)
		{
			◆合戦補正１ += 行動ダメージ率[bb];
		}
		if (F1 == 2)
		{
			◆合戦補正２ += 行動ダメージ率[bb];
		}
		合戦補正の補正();
	}
	return 0;
}

void 合戦暗殺後処理(lint iic, lint iic2)
{
	if (ＧＦ[55] == 0)
	{
		return;
	}
	ＴＸ(3, iic, iic2, ＧＦ[55], gs[0][iic].ＣＧ);
	ＧＦ[55] = 0;
}

void Ｓ体力計算(lint ii, lint iic)
{
	lint aa = 0;
	lint ▲職種 = gs[ii][iic].Ｓ職種;
	lint ▲キャラ = gs[ii][iic].番号;
	aa = 5;
	if (▲職種 == 35)
	{
		aa = 8;
	}
	if (▲職種 == 34)
	{
		aa = 9;
	}
	if (▲職種 == 36)
	{
		aa = 6;
	}
	if (▲職種 == 37)
	{
		aa = 6;
	}
	if (▲職種 == 38)
	{
		aa = 5;
	}
	if (▲職種 == 39)
	{
		aa = 9;
	}
	if (▲職種 == 40)
	{
		aa = 3;
	}
	if (▲職種 == 41)
	{
		aa = 3;
	}
	if (▲職種 == 42)
	{
		aa = 9;
	}
	if (▲職種 == 43)
	{
		aa = 2;
	}
	if (▲職種 == 44)
	{
		aa = 6;
	}
	if (▲職種 == 45)
	{
		aa = 5;
	}
	if (▲職種 == 49)
	{
		aa = 2;
	}
	if (▲職種 == 46)
	{
		aa = 10;
	}
	if (▲職種 == 47)
	{
		aa = 10;
	}
	if (▲職種 == 48)
	{
		aa = 9;
	}
	if (▲キャラ == 1238)
	{
		aa = 20;
	}
	if (▲職種 == 52)
	{
		aa = 20;
	}
	if (▲職種 == 75)
	{
		aa = 20;
	}
	if (▲職種 == 74)
	{
		aa = 22;
	}
	if (▲職種 == 61)
	{
		aa = 8;
	}
	if (▲キャラ == 1089)
	{
		aa = 22;
	}
	if (▲職種 == 51)
	{
		aa = 20;
	}
	if (▲職種 == 51 && ▲キャラ == 1003)
	{
		aa = 8;
	}
	if (▲職種 == 50)
	{
		aa = 40;
	}
	if (▲職種 == 76)
	{
		aa = 14;
	}
	if (▲職種 == 93)
	{
		aa = 700;
	}
	if (▲職種 == 94)
	{
		aa = 800;
	}
	if (▲職種 == 95)
	{
		aa = 1000;
	}
	if (▲職種 == 96)
	{
		aa = 1400;
	}
	if (▲職種 == 97)
	{
		aa = 15;
	}
	if (▲職種 == 98)
	{
		aa = 20;
	}
	if (▲職種 == 99)
	{
		aa = 15;
	}
	if (▲職種 == 100)
	{
		aa = 20;
	}
	if (▲職種 == 101)
	{
		aa = 24;
	}
	aa = 50 + gs[ii][iic].Ｓレベル * aa;
	if (gs[ii][iic].性別 == 1)
	{
		aa = 倍率計算関数(aa, 90);
	}
	if (▲キャラ == 1093)
	{
		aa = 9999;
	}
	if (▲キャラ == 1241)
	{
		aa = 7777;
	}
	if (▲キャラ == 1239)
	{
		aa = aa * 10;
	}
	if (▲キャラ == 1096)
	{
		aa = aa * 3;
	}
	if (▲キャラ == 1061 && ◆特定戦闘 == 36)
	{
		aa = aa * 3;
	}
	if (▲キャラ == 1012 && ◆特定戦闘 == 1)
	{
		gs[0][22].技１ = 0;
	}
	if (▲キャラ == 1035 && ◆特定戦闘 == 40 && ＡＣＦ(1035, 9999) == 0)
	{
		aa = 1200;
	}
	gs[ii][iic].Ｓ体力最大 = aa;
	if (gs[ii][iic].Ｓ体力 > gs[ii][iic].Ｓ体力最大)
	{
		gs[ii][iic].Ｓ体力 = gs[ii][iic].Ｓ体力最大;
	}
	return;
}

lint Ｓ補充(lint 列, lint iic)
{
	lint ii = 0;
	lint ii2 = 0;
	lint iic2 = 0;
	lint キャラ = 0;
	lint aa = 0;
	lint loop = 0;
	if (gs[ii][iic].ＡＡ != 0)
	{
		ii2 = gs[ii][iic].ＡＡ;
		iic2 = gs[ii][iic].ＢＢ;
		キャラ = gs[ii][iic].番号;
		if (◆戦闘タイプ == 1)
		{
			gs[ii][iic].迷宮技数 = gs[ii][iic].現在技数;
		}
		if (gs[ii][iic].技セット == 1)
		{
			Ｃ技セット変更(ii, iic, 0);
		}
		gs[ii2][iic2] = gs[ii][iic];
		gs[ii2][iic2].ＡＡ = 0;
		gs[ii2][iic2].ＢＢ = 0;
		if (gs[ii2][iic2].Ｓ体力 == 0)
		{
			gs[ii2][iic2].Ｓ体力 = 1;
			gs[ii2][iic2].行動 = 1;
		}
		ＧＳ初期化(ii, iic);
	}
	if (◆特定戦闘 == 1)
	{
		return 0;
	}
	if (◆特定戦闘 == 2)
	{
		return 0;
	}
	if (◆特定戦闘 == 3)
	{
		return 0;
	}
	if (◆特定戦闘 == 8)
	{
		return 0;
	}
	if (◆特定戦闘 == 36)
	{
		return 0;
	}
	if (◆特定戦闘 == 39)
	{
		return 0;
	}
	if (◆特定戦闘 == 41)
	{
		return 0;
	}
	if (◆特定戦闘 == 51 || ◆特定戦闘 == 86 || ◆特定戦闘 == 87 || ◆特定戦闘 == 89 || ◆特定戦闘 == 91 || ◆特定戦闘 == 92)
	{
		return 0;
	}
	if (◆特定戦闘 == 4 || ◆特定戦闘 == 7 || ◆特定戦闘 == 10 || ◆特定戦闘 == 13 || ◆特定戦闘 == 15)
	{
		aa = 0;
		if (ＦＰ確認(1000, 0, 0, 0) != 0 || ＦＰ確認(1003, 0, 0, 0) != 0)
		{
			aa = 1;
		}
		LOG_TADA("　　ランス、健太郎　確認 " + string(aa) + "\n");
		iic2 = ＧＳ番号取得(1000, 999);
		if (gs[1][iic2].Ｓ体力 > 1 && gs[1][iic2].迷宮技数 > 0)
		{
			aa = 1;
		}
		LOG_TADA("　ランス　" + string(gs[1][iic2].Ｓ体力) + "　" + string(gs[1][iic2].迷宮技数 > 0) + "\n");
		iic2 = ＧＳ番号取得(1003, 999);
		if (gs[1][iic2].Ｓ体力 > 1 && gs[1][iic2].迷宮技数 > 0)
		{
			aa = 1;
		}
		LOG_TADA("　けんた　" + string(gs[1][iic2].Ｓ体力) + "　" + string(gs[1][iic2].迷宮技数 > 0) + "\n");
		if (aa == 0)
		{
			LOG_TADA("　注意：もうランス、健太郎が戦えません　ＧＡＭＥＯＶＥＲ\n");
			return 0;
		}
	}
	ii2 = ◆Ｐｉｉ;
	if (列 == 1 && ＡＣＦ(1001, 9999) == 0 && gs[1][31].迷宮技数 != 0 && ＦＰ確認(1001, 0, 0, 0) == 0 && gs[1][31].Ｓ体力 > 1)
	{
		gs[ii][iic] = gs[1][31];
		ＧＳ初期化／合戦部分(ii, iic);
		gs[ii][iic].ＡＡ = 1;
		gs[ii][iic].ＢＢ = 31;
		gs[ii][iic].現在技数 = gs[1][31].迷宮技数;
		if (◆戦闘タイプ == 1)
		{
			Ｃ技セット変更(ii, iic, 1);
		}
		return 31;
	}
	for (loop = 1; loop < 99; loop++)
	{
		iic2 = RAND(30);
		if (gs[ii2][iic2].番号 == 0)
		{
			continue;
		}
		if (キャラ == gs[ii2][iic2].番号)
		{
			continue;
		}
		if (ＦＰ確認(gs[ii2][iic2].番号, 0, 0, 0) == 1)
		{
			continue;
		}
		if (gs[ii2][iic2].Ｓ体力 < 2)
		{
			continue;
		}
		if (gs[ii2][iic2].Ｓ職種 == 49)
		{
			continue;
		}
		LOG_TADA(" ＊＊\n");
		if (gs[ii2][iic2].技数 == gs[ii2][iic2].迷宮技数)
		{
			aa = gs[ii2][iic2].Ｓ職種;
			if (列 == 0 && (aa == 45 || aa == 40 || aa == 41 || aa == 37 || aa == 44 || aa == 43))
			{
				LOG_TADA(" 前列\n");
				continue;
			}
			if (列 == 1 && (aa == 35 || aa == 36 || aa == 34 || aa == 42 || aa == 51 || aa == 47 || aa == 74 || aa == 75 || aa == 60 || aa == 61 || aa == 62 || aa == 52 || aa == 61 || aa == 76 || aa == 102 || aa == 103))
			{
				LOG_TADA(" 後列\n");
				continue;
			}
			gs[ii][iic] = gs[ii2][iic2];
			ＧＳ初期化／合戦部分(ii, iic);
			gs[ii][iic].ＡＡ = ii2;
			gs[ii][iic].ＢＢ = iic2;
			gs[ii][iic].現在技数 = gs[ii][iic].迷宮技数;
			if (◆戦闘タイプ == 1)
			{
				Ｃ技セット変更(ii, iic, 1);
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("ＦＰ補充Ａ(" + string(列) + "）　　" + string(iic) + "／" + gs[ii][iic].名前 + "　" + string(gs[ii][iic].迷宮技数) + "　" + 文字列／職種(gs[ii][iic].Ｓ職種) + " \n");
			}
			return iic2;
		}
	}
	for (loop = 1; loop < 99; loop++)
	{
		iic2 = RAND(30);
		if (gs[ii2][iic2].番号 == 0)
		{
			continue;
		}
		if (キャラ == gs[ii2][iic2].番号)
		{
			continue;
		}
		if (ＦＰ確認(gs[ii2][iic2].番号, 0, 0, 0) != 0)
		{
			continue;
		}
		if (gs[ii2][iic2].Ｓ体力 < 2)
		{
			continue;
		}
		if (gs[ii2][iic2].迷宮技数 != 0)
		{
			aa = gs[ii2][iic2].Ｓ職種;
			if (列 == 0 && (aa == 45 || aa == 40 || aa == 41 || aa == 43))
			{
				continue;
			}
			if (列 == 1 && (aa == 35 || aa == 36 || aa == 34 || aa == 42 || aa == 49 || aa == 51 || aa == 47))
			{
				continue;
			}
			gs[ii][iic] = gs[ii2][iic2];
			ＧＳ初期化／合戦部分(ii, iic);
			gs[ii][iic].ＡＡ = ii2;
			gs[ii][iic].ＢＢ = iic2;
			gs[ii][iic].現在技数 = gs[ii][iic].迷宮技数;
			if (◆戦闘タイプ == 1)
			{
				Ｃ技セット変更(ii, iic, 1);
			}
			if (◆ＤＢＶ == 1)
			{
				LOG_TADA("ＦＰ補充Ｂ(" + string(列) + "）　　" + string(iic) + "／" + gs[ii][iic].名前 + "　" + string(gs[ii][iic].迷宮技数) + "　" + 文字列／職種(gs[ii][iic].Ｓ職種) + " \n");
			}
			return iic2;
		}
	}
	ii = 1;
	LOG_TADA("ＦＢ補充が出来ませんでした・・いい人いない？\n");
	for (iic = 1; iic < 61; iic++)
	{
		if (gs[ii][iic].番号 == 0)
		{
			continue;
		}
		if (ＦＰ確認(gs[ii][iic].番号, 0, 0, 0) != 0)
		{
			continue;
		}
		LOG_TADA("　　" + gs[ii][iic].名前 + "　" + string(gs[ii][iic].迷宮技数) + "技数　" + string(gs[ii][iic].Ｓ体力) + "ＨＰ　" + 文字列／職種(gs[ii][iic].Ｓ職種) + "\n");
	}
	return 0;
}

void 合戦／独立部隊(lint iic)
{
	lint ii = ◆Ｐｉｉ;
	lint iim = 0;
	lint ii2 = 0;
	lint aa = 0;
	lint ▲合戦種類 = 0;
	ＦＰ初期化();
	LOG_TADA("　独立部隊（" + gs[ii][iic].名前 + "）\n");
	if (gs[ii][iic].行動 == 1)
	{
		return;
	}
	if (gs[ii][iic].兵数 < 1000)
	{
		return;
	}
	▲合戦種類 = 0;
	iim = 勢力不足土地国取得(ii);
	if (iim != 0)
	{
		▲合戦種類 = 1;
	}
	if (▲合戦種類 == 0)
	{
		iim = 織田ｖｓ勢力国取得();
		if (iim != 0)
		{
			▲合戦種類 = 2;
		}
	}
	if (▲合戦種類 != 0)
	{
		if (▲合戦種類 == 1)
		{
			ii2 = 国[iim].進入勢力;
		}
		if (▲合戦種類 == 2)
		{
			ii2 = 国[iim].支配国;
		}
		汎用１(iic, 999);
		Ｐ勢力看板(1, gs[ii][iic].名前 + "部隊が作戦中……\n", 0, false);
		ＳＭ(5056, iim, 0);
		Ｐ合戦前表示(ii, ii2, iim);
		aa = 0;
		if (◆ルート == 1 && ii2 == 2 && (iim == 28 || iim == 29 || iim == 30 || iim == 27))
		{
			aa = 1;
		}
		if (aa == 0)
		{
			合戦／勝利処理(ii2, iim, 0);
		}
		if (aa == 1)
		{
			ＳＭ(5011, 0, ii2);
			ＧＦ[142] = 1;
		}
		aa = RAND(100 + ＧＦ[97]) + 100;
		if (gs[ii][iic].兵数最大 > 2000)
		{
			aa = aa + 200;
		}
		if (aa > 2000)
		{
			aa = 2000;
		}
		if (◆ルート == 60)
		{
			aa += 500;
		}
		if (ii2 == 2)
		{
			aa += 300;
		}
		if (ii2 == 16)
		{
			aa += 300;
		}
		if (aa > gs[ii][iic].兵数)
		{
			aa = gs[ii][iic].兵数 - 1;
		}
		ＧＦ[97] += 30;
		汎用１(iic, 999);
		ＳＭ(5057, aa, 0);
		gs[ii][iic].兵数 -= aa;
		gs[ii][iic].行動 = 1;
		if (▲合戦種類 == 2)
		{
			ＧＦ[108] = 0;
			if (ii2 == 2)
			{
				勢力トップ／魔軍(1);
			}
			if (ii2 == 5)
			{
				勢力トップ／上杉(1);
			}
			if (ii2 == 3)
			{
				勢力トップ／武田(1);
			}
			if (ii2 == 19)
			{
				勢力トップ／毛利(1);
			}
			if (ii2 == 4)
			{
				勢力トップ／北条(1);
			}
			if (ii2 == 11)
			{
				勢力トップ／伊賀(1);
			}
			if (ii2 == 17)
			{
				勢力トップ／今川(1);
			}
			if (ii2 == 13)
			{
				勢力トップ／足利(1);
			}
			if (ii2 == 12)
			{
				勢力トップ／原(1);
			}
			if (ii2 == 10)
			{
				勢力トップ／明石(1);
			}
			if (ii2 == 15)
			{
				勢力トップ／拓陸(1);
			}
			if (ii2 == 6)
			{
				勢力トップ／島津(1);
			}
			if (ii2 == 18)
			{
				勢力トップ／徳川(1);
			}
			if (ii2 == 8)
			{
				勢力トップ／浅井朝倉(1);
			}
			if (ii2 == 7)
			{
				勢力トップ／巫女機関(1);
			}
			if (ii2 == 9)
			{
				勢力トップ／種子島(1);
			}
			if (ii2 == 14)
			{
				勢力トップ／天志教(1);
			}
			if (ii2 == 16)
			{
				勢力トップ／伊達(1);
			}
		}
		return;
	}
}

void 合戦補正の補正()
{
	if ((◆合戦補正１ != 0 || ◆合戦補正２ != 0) && ◆ＤＢＶ == 1)
	{
		LOG_TADA("　　合戦補正の補正()　　織田側（" + string(◆合戦補正１) + "）　敵側（" + string(◆合戦補正２) + "）\n");
	}
	if (◆合戦補正１ > ◆合戦補正２)
	{
		◆合戦補正１ = ◆合戦補正１ - ◆合戦補正２;
		◆合戦補正２ = 0;
	}
	if (◆合戦補正１ < ◆合戦補正２)
	{
		◆合戦補正２ = ◆合戦補正２ - ◆合戦補正１;
		◆合戦補正１ = 0;
	}
	if (◆合戦補正１ == ◆合戦補正２)
	{
		◆合戦補正１ = 0;
		◆合戦補正２ = 0;
	}
	if ((◆合戦補正１ != 0 || ◆合戦補正２ != 0) && ◆ＤＢＶ == 1)
	{
		LOG_TADA("　　　　　　　　　　　　織田側（" + string(◆合戦補正１) + "）　敵側（" + string(◆合戦補正２) + "）\n");
	}
	if (◆合戦補正１ > 50)
	{
		◆合戦補正１ = 50;
	}
	if (◆合戦補正２ > 50)
	{
		◆合戦補正２ = 50;
	}
}

lint 敗戦処理(lint フラグ)
{
	lint rr = 0;
	lint ii = ◆Ｐｉｉ;
	lint iic = 0;
	if (EV("アリスの敗戦処理／初", -2147483648) == false)
	{
		アリスの敗戦処理／初();
	}
	else
	{
		アリスの敗戦処理／汎用();
	}
	選択肢(0, "どうしますか？");
	選択肢(1, "再度挑戦");
	if (フラグ == 1)
	{
		選択肢(2, "今回は諦める");
	}
	選択肢(3, "ＧＡＭＥＯＶＥＲ");
	rr = 選択(false, 0, 0);
	if (rr == 1)
	{
		ＳＭ(5065, 4, 0);
		ＧＦ[163]++;
		ＧＦ[328] += 4;
		勢力キャラ行動初期化(◆Ｐｉｉ);
		for (iic = 1; iic < 32; iic++)
		{
			if (gs[ii][iic].番号 != 0)
			{
				gs[ii][iic].兵数 = gs[ii][iic].兵数最大;
				gs[ii][iic].Ｓ体力 = gs[ii][iic].Ｓ体力最大;
			}
		}
	}
	if (rr == 3)
	{
		ＧＡＭＥＯＶＥＲ(1);
	}
	if (rr == 1)
	{
		return 1;
	}
	if (rr == 2)
	{
		return 2;
	}
	return 0;
}

lint 敗戦補正()
{
	lint ii = 0;
	lint iic;
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].番号 != 0)
		{
			gs[ii][iic].Ｓレベル -= ＧＦ[163] * 20;
			if (gs[ii][iic].Ｓレベル < 20)
			{
				gs[ii][iic].Ｓレベル = 20;
			}
		}
	}
	return 1;
}

lint 捕虜メイン()
{
	lint loop = 0;
	lint rr = 0;
	lint ii = 0;
	lint ii2 = 0;
	lint iic = 0;
	lint iic2 = 0;
	lint ra = 0;
	lint rr2 = 0;
	lint ▲キャラ = 0;
	lint aa = 0;
	ii2 = 20;
	lint 初期捕虜数 = 0;
	lint 処理後捕虜数 = 0;
	lint 初期武将数 = 0;
	if (キャラ数(20) == 0)
	{
		ＳＭ(5037, 0, 0);
		return 0;
	}
	for (iic = 1; iic < 61; iic++)
	{
		if (gs[ii2][iic].番号 != 0)
		{
			▲キャラ = gs[ii2][iic].番号;
			aa = gs[ii2][iic].捕虜抵抗値;
			if (◆予備０１ == 0)
			{
				if (▲キャラ == 1032)
				{
					aa = 999;
					if (キャラ確認(1031, 0, 0, 0) == 1)
					{
						aa = 5;
					}
				}
				if (▲キャラ == 1033)
				{
					aa = 999;
					if (キャラ確認(1031, 0, 0, 0) == 1)
					{
						aa = 5;
					}
				}
				if (▲キャラ == 1034)
				{
					aa = 999;
					if (キャラ確認(1031, 0, 0, 0) == 1)
					{
						aa = 5;
					}
				}
				if (▲キャラ == 1051)
				{
					aa = 999;
					if (EV("北条／ミナモト発生", -2147483648) == true)
					{
						aa = 5;
					}
				}
				if (▲キャラ == 1330 || ▲キャラ == 1331 || ▲キャラ == 1387 || ▲キャラ == 1390 || ▲キャラ == 1391 || ▲キャラ == 1333)
				{
					aa = 999;
					if (ＧＦ[383] == 1)
					{
						aa = 1;
					}
				}
				if (▲キャラ == 1326)
				{
					aa = 999;
					if (EV("アム／参上", -2147483648) == true)
					{
						aa = 5;
					}
				}
				if (▲キャラ == 1312)
				{
					aa = 999;
					if (EV("ホーネット派／陥落", -2147483648) == true)
					{
						aa = 5;
					}
				}
				if (▲キャラ == 1383)
				{
					aa = 999;
					if (EV("スー／勧誘成功", -2147483648) == true)
					{
						aa = 5;
					}
				}
				if (▲キャラ == 1397)
				{
					aa = 999;
					if (EV("フレイア／勧誘成功", -2147483648) == true)
					{
						aa = 1;
					}
				}
				if (▲キャラ == 1313)
				{
					aa = 999;
					if (EV("魔人サイゼル／勧誘成功", -2147483648) == true)
					{
						aa = 1;
					}
				}
				if (▲キャラ == 1341)
				{
					aa = 999;
					if (EV("魔王城深部／ガイ勝利", -2147483648) == true)
					{
						aa = 1;
					}
				}
				if (▲キャラ == 1386)
				{
					aa = 999;
					if (EV("ポロン／勧誘成功", -2147483648) == true)
					{
						aa = 5;
					}
				}
				if (▲キャラ == 1409)
				{
					aa = 999;
					if (キャラ確認(1325, 0, 0, 0) == 1)
					{
						aa = 1;
					}
				}
				if (▲キャラ == 1410)
				{
					aa = 999;
					if (EV("パステル／勧誘成功", -2147483648) == true)
					{
						aa = 1;
					}
				}
				if (▲キャラ == 1345)
				{
					aa = 999;
					if (EV("魔王ジル派／対決ジル", -2147483648) == true)
					{
						aa = 1;
					}
				}
			}
			if (aa > 5)
			{
				aa = 5;
			}
			if (◆予備０１ == 1 && ◆Ｐｉｉ == 6 && gs[ii2][iic].性別 == 1)
			{
				aa = 1;
			}
			if (◆予備０１ == 1 && ◆Ｐｉｉ == 6 && gs[ii2][iic].性別 == 0)
			{
				aa = 30;
			}
			gs[ii2][iic].捕虜抵抗値 = aa;
		}
	}
	フラグ調整();
	初期捕虜数 = キャラ数(20);
	初期武将数 = キャラ数(◆Ｐｉｉ);
	for (; ; )
	{
		◆攻防タイプ = 0;
		◆迷宮戦闘 = 0;
		rr = Ｐ捕虜／処遇決定(iic);
		if (rr == 0)
		{
			aa = 初期捕虜数 - キャラ数(20);
			aa -= キャラ数(◆Ｐｉｉ) - 初期武将数;
			if (◆予備０１ == 0)
			{
				汎用１(1000, 999);
				if (aa > 19)
				{
					ＳＭ(5062, 6, 0);
				}
				if (aa > 14)
				{
					ＳＭ(5062, 6, 0);
				}
				if (aa > 9)
				{
					ＳＭ(5062, 6, 0);
				}
				if (aa > 4)
				{
					ＳＭ(5062, 6, 0);
				}
			}
			return 0;
		}
		if (rr == 3)
		{
			ＳＭ(5012, 0, 0);
			continue;
		}
		if (rr == 2)
		{
			rr = ＩＶ捕虜＞武将(ii2, iic);
			if (rr == 2)
			{
				gs[ii2][iic].捕虜抵抗値 = 2;
				continue;
			}
			iic2 = 勢力空き番号(◆Ｐｉｉ);
			if (iic2 == 0)
			{
				continue;
			}
			gs[◆Ｐｉｉ][iic2] = gs[ii2][iic];
			キャラ消去(iic, ii2);
			gs[◆Ｐｉｉ][iic2].重要 = 0;
			ＡＣ(gs[◆Ｐｉｉ][iic2].番号, 10);
			汎用１(iic2, ◆Ｐｉｉ);
			if (rr == 3)
			{
				for (; ; )
				{
					if (◆予備０１ == 1)
					{
						ＳＭ(5079, 0, 0);
						break;
					}
					if (◆章 == 1)
					{
						汎用武将／信長に仕官();
						break;
					}
					if (ＡＣ(1078, 9999) == 10)
					{
						汎用武将／香姫に仕官();
						break;
					}
					汎用武将／ランスに仕官();
					break;
				}
			}
			continue;
		}
		break;
	}
	return 0;
}

lint ＩＶ捕虜＞武将(lint ii2, lint iic)
{
	lint キャラ番号 = gs[ii2][iic].番号;
	if (◆予備０１ == 1)
	{
		return 3;
	}
	if (キャラ番号 == 1024)
	{
		阿樹／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1025)
	{
		超神／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1027)
	{
		一休／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1026)
	{
		五十六／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1040)
	{
		柚原／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1039)
	{
		重彦／勧誘成功();
		在野(9, 20, 1161, 8);
		在野(10, 20, 1162, 8);
		return 1;
	}
	if (キャラ番号 == 1030)
	{
		風丸／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1035)
	{
		元就／勧誘成功();
		元就変身(1);
		return 1;
	}
	if (キャラ番号 == 1036)
	{
		てる／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1037)
	{
		きく／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1038)
	{
		ちぬ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1042)
	{
		本多／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1043)
	{
		井伊／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1046)
	{
		榊原／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1044)
	{
		服部／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1045)
	{
		酒井／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1071)
	{
		名取／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1031)
	{
		龍馬／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1032)
	{
		ゴン／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1033)
	{
		川之江譲／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1034)
	{
		川之江美禰／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1051)
	{
		蘭／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1052)
	{
		小松／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1053)
	{
		真田／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1056)
	{
		山県／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1054)
	{
		馬場／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1055)
	{
		高坂／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1013)
	{
		野菊／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1014)
	{
		折女／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1015)
	{
		ノワール／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1076)
	{
		アギレダ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1063)
	{
		トシヒサ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1064)
	{
		イエヒサ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1062)
	{
		カズヒサ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1061)
	{
		ヨシヒサ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1057)
	{
		朝倉義景／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1023)
	{
		神原昌示／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1006)
	{
		レイラ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1381)
	{
		メナド／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1383)
	{
		ハウレーン／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1384)
	{
		スー／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1305)
	{
		コルドバ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1306)
	{
		バレス／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1307)
	{
		リック／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1308)
	{
		エクス／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1309)
	{
		チャカ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1326)
	{
		ＢＳ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1327)
	{
		サチコ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1329)
	{
		レリューコフ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1330)
	{
		ロレックス／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1331)
	{
		アリストレス／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1332)
	{
		ネロ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1387)
	{
		カール／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1388)
	{
		コンバート／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1390)
	{
		オルオレ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1391)
	{
		アミトス／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1344)
	{
		魔人サテラ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1382)
	{
		キンケード／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1396)
	{
		フレイア／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1397)
	{
		闇鷺／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1397)
	{
		闇鷺／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1333)
	{
		クリーム／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1312)
	{
		魔人サイゼル／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1313)
	{
		魔人ハウゼル／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1342)
	{
		魔人シルキィ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1341)
	{
		魔人ホーネット／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1385)
	{
		ポロン／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1386)
	{
		ピッテン／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1409)
	{
		パステル／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1410)
	{
		イージス／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1411)
	{
		サクラ／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1345)
	{
		魔人ケイブリス／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1419)
	{
		ロードリング／勧誘成功();
		return 1;
	}
	if (キャラ番号 == 1420)
	{
		カチューシャ／勧誘成功();
		return 1;
	}
	return 3;
}

lint 捕虜追加確認()
{
	if (キャラ数(20) > 29)
	{
		return 0;
	}
	return 1;
}

lint 捕虜登録(lint iix, lint フラグ)
{
	lint iic = 0;
	if (キャラ数(20) > 29)
	{
		return 0;
	}
	if (iix != 0)
	{
		固有武将登録(0, 1, iix, 1);
	}
	gs[0][1].兵数最大 = 倍率計算関数(gs[0][1].兵数最大, 80);
	if (gs[0][1].兵数最大 > 4000 && ＧＦ[228] == 1)
	{
		gs[0][1].兵数最大 = 4000;
	}
	if (gs[0][1].兵数最大 > 2000 && ＧＦ[228] != 1)
	{
		gs[0][1].兵数最大 = 2000;
	}
	if (gs[0][1].兵数最大 > 1000 && ◆予備０８ != 1)
	{
		gs[0][1].兵数最大 = 1000;
	}
	gs[0][1].兵数 = 1;
	gs[0][1].ＦＦ = 0;
	if (◆予備０１ == 0)
	{
		gs[0][1].所属勢力 = 1;
	}
	if (gs[0][1].所属勢力 == 0)
	{
		gs[0][1].所属勢力 = 1;
	}
	キャラ重要変更(0, 1, 0);
	iic = 勢力空き番号(20);
	gs[20][iic] = gs[0][1];
	ＳＭ(5067, 0, 0);
	return iic;
}

void キャラ参加登録初期化()
{
	int loop;
	for (loop = 1; loop < 61; ++loop)
	{
		gs[◆Ｐｉｉ][loop].作戦参加 = 0;
	}
	for (loop = 11; loop < 17; ++loop)
	{
		ＧＳ初期化(0, loop);
	}
}

void キャラ参加登録(lint フラグ)
{
	int loop = 0;
	int aa = 0;
	int ▲参加数 = 0;
	for (loop = 1; loop < 61; ++loop)
	{
		if (gs[◆Ｐｉｉ][loop].作戦参加 > 0 && ▲参加数 < 7)
		{
			++▲参加数;
			if (フラグ != 5)
			{
				gs[◆Ｐｉｉ][loop].行動 = 1;
			}
			aa = gs[◆Ｐｉｉ][loop].作戦参加 + 10;
			gs[0][aa] = gs[◆Ｐｉｉ][loop];
			gs[0][aa].ＡＡ = ◆Ｐｉｉ;
			gs[0][aa].ＢＢ = loop;
			if (loop > 40)
			{
				gs[0][aa].ＡＡ = 0;
				gs[0][aa].ＢＢ = 0;
			}
			if (▲参加数 == 1)
			{
				gs[0][1] = gs[◆Ｐｉｉ][loop];
			}
		}
	}
}

lint キャラ参加登録２(lint a11, lint a12, lint a13, lint a14, lint a15, lint a16)
{
	lint loop = 0;
	lint loop2 = 0;
	lint iic = 0;
	lint ra = 0;
	lint ii = 0;
	lint ▲最終 = 0;
	lint ▲参加数 = 0;
	lint ▲兵種 = 0;
	lint ▲兵数 = 0;
	ii = ◆Ｐｉｉ;
	for (loop = 11; loop < 17; loop++)
	{
		ＧＳ初期化(0, loop);
	}
	if (a11 != 0 && キャラ確認(a11, 0, 0, 0) == 1)
	{
		iic = ＧＳ番号取得(a11, 999);
		gs[0][11] = gs[ii][iic];
		gs[0][11].迷宮技数 = gs[0][11].技数;
		gs[0][11].ＡＡ = ii;
		gs[0][11].ＢＢ = iic;
	}
	if (a12 != 0 && キャラ確認(a12, 0, 0, 0) == 1)
	{
		iic = ＧＳ番号取得(a12, 999);
		gs[0][12] = gs[ii][iic];
		gs[0][12].迷宮技数 = gs[0][12].技数;
		gs[0][12].ＡＡ = ii;
		gs[0][12].ＢＢ = iic;
	}
	if (a13 != 0 && キャラ確認(a13, 0, 0, 0) == 1)
	{
		iic = ＧＳ番号取得(a13, 999);
		gs[0][13] = gs[ii][iic];
		gs[0][13].迷宮技数 = gs[0][13].技数;
		gs[0][13].ＡＡ = ii;
		gs[0][13].ＢＢ = iic;
	}
	if (a14 != 0 && キャラ確認(a14, 0, 0, 0) == 1)
	{
		iic = ＧＳ番号取得(a14, 999);
		gs[0][14] = gs[ii][iic];
		gs[0][14].迷宮技数 = gs[0][14].技数;
		gs[0][14].ＡＡ = ii;
		gs[0][14].ＢＢ = iic;
	}
	if (a15 != 0 && キャラ確認(a15, 0, 0, 0) == 1)
	{
		iic = ＧＳ番号取得(a15, 999);
		gs[0][15] = gs[ii][iic];
		gs[0][15].迷宮技数 = gs[0][15].技数;
		gs[0][15].ＡＡ = ii;
		gs[0][15].ＢＢ = iic;
	}
	if (a16 != 0 && キャラ確認(a16, 0, 0, 0) == 1)
	{
		iic = ＧＳ番号取得(a16, 999);
		gs[0][16] = gs[ii][iic];
		gs[0][16].迷宮技数 = gs[0][16].技数;
		gs[0][16].ＡＡ = ii;
		gs[0][16].ＢＢ = iic;
	}
	return 0;
}

void ＦＰ戻し()
{
	int ii = 0;
	int iic = 0;
	int ▲iic = 0;
	ii = 0;
	for (iic = 11; iic < 17; ++iic)
	{
		if (gs[ii][iic].ＡＡ != 0)
		{
			▲iic = gs[ii][iic].ＢＢ;
			if (◆戦闘タイプ == 1)
			{
				gs[ii][iic].迷宮技数 = gs[ii][iic].現在技数;
			}
			if (gs[ii][iic].技セット == 1)
			{
				Ｃ技セット変更(ii, iic, 0);
			}
			gs[◆Ｐｉｉ][▲iic] = gs[ii][iic];
			gs[◆Ｐｉｉ][▲iic].ＡＡ = 0;
			gs[◆Ｐｉｉ][▲iic].ＢＢ = 0;
			if (gs[◆Ｐｉｉ][▲iic].兵数 == 0)
			{
				gs[◆Ｐｉｉ][▲iic].兵数 = 1;
				gs[◆Ｐｉｉ][▲iic].迷宮技数 = 0;
			}
		}
	}
}

lint Ｃ援軍登録(lint フラグ, lint キャラ番号, lint 所属勢力)
{
	lint ii = 0;
	lint iic = 0;
	if (フラグ == 1 && ＦＰ数() == 6)
	{
		return 0;
	}
	if (フラグ == 2 && 敵ＦＰ数() == 6)
	{
		return 0;
	}
	固有武将登録(ii, 1, キャラ番号, 所属勢力);
	if (フラグ == 1)
	{
		gs[ii][1].兵数最大 = ベース兵力取得(1, 120);
		gs[ii][1].兵数 = gs[ii][1].兵数最大;
	}
	if (フラグ == 2)
	{
		gs[ii][1].兵数最大 = ベース兵力取得(1, 150);
		gs[ii][1].兵数 = gs[ii][1].兵数最大;
	}
	iic = 0;
	if (フラグ == 1 && gs[ii][16].番号 == 0)
	{
		iic = 16;
	}
	if (フラグ == 1 && gs[ii][15].番号 == 0)
	{
		iic = 15;
	}
	if (フラグ == 1 && gs[ii][14].番号 == 0)
	{
		iic = 14;
	}
	if (フラグ == 1 && gs[ii][13].番号 == 0)
	{
		iic = 13;
	}
	if (フラグ == 1 && gs[ii][12].番号 == 0)
	{
		iic = 12;
	}
	if (フラグ == 1 && gs[ii][11].番号 == 0)
	{
		iic = 11;
	}
	if (フラグ == 2 && gs[ii][26].番号 == 0)
	{
		iic = 26;
	}
	if (フラグ == 2 && gs[ii][25].番号 == 0)
	{
		iic = 25;
	}
	if (フラグ == 2 && gs[ii][24].番号 == 0)
	{
		iic = 24;
	}
	if (フラグ == 2 && gs[ii][23].番号 == 0)
	{
		iic = 23;
	}
	if (フラグ == 2 && gs[ii][22].番号 == 0)
	{
		iic = 22;
	}
	if (フラグ == 2 && gs[ii][21].番号 == 0)
	{
		iic = 21;
	}
	if (iic == 0)
	{
		return 0;
	}
	gs[ii][iic] = gs[ii][1];
	gs[ii][iic].ＡＡ = 0;
	gs[ii][iic].ＢＢ = 0;
	return 1;
}

lint 敵ＦＰ登録(lint ii2, lint iim, lint 必死)
{
	lint loop = 0;
	lint loop2 = 0;
	lint iic = 0;
	lint iic2 = 0;
	lint ra = 0;
	lint aa = 0;
	lint rr = 0;
	lint ch = 0;
	lint ▲キャラ数 = 0;
	lint ▲参加数 = 0;
	lint ▲兵種 = 0;
	lint ▲兵数 = 0;
	lint ii = 0;
	lint ▲参加数上限 = 6;
	lint ▲武士 = 0;
	lint ▲足軽 = 0;
	lint ▲弓兵 = 0;
	lint ▲巫女 = 0;
	lint ▲軍師 = 0;
	lint ▲陰陽 = 0;
	lint ▲忍者 = 0;
	lint ▲戦場位置 = 0;
	lint ▲戦場施設 = 0;
	lint ▲要害 = 0;
	if (キャラ数(ii2) == 0)
	{
		return 0;
	}
	ＧＦ[152] = 0;
	▲参加数上限 = 3;
	▲参加数 = 0;
	if (◆ターン > 10)
	{
		▲参加数上限 = 4;
	}
	if (◆ターン > 20)
	{
		▲参加数上限 = 5;
	}
	if (◆ターン > 30)
	{
		▲参加数上限 = 4 + RAND(2);
	}
	if (必死 == 1)
	{
		▲参加数上限 = 6;
	}
	▲戦場施設 = 0;
	▲戦場位置 = 0;
	if (国[iim].支配国 != ◆Ｐｉｉ)
	{
		▲戦場位置 = 国[iim].支配土地;
	}
	▲戦場施設 = 国[iim].施設[▲戦場位置];
	▲要害 = 国[iim].要害[▲戦場位置];
	for (loop = 21; loop < 27; loop++)
	{
		ＧＳ初期化(ii, loop);
	}
	if (◆予備０１ == 1)
	{
		goto label0;
	}
	LOG_TADA("　敵ＦＰ登録　" + 勢力[ii2].名前 + "　特定（" + string(◆特定戦闘) + "）　要害（" + string(▲要害) + "）\n");
	if (◆攻防タイプ == 1)
	{
		if (必死 == 1 && 支配国数(ii2) == 1)
		{
			ＧＦ[152] = 1;
		}
		if (必死 == 1 && ii2 == 3 && (iim == 9 || iim == 8) && (織田支配確認(9, 0, 0, 0) == 1 || 織田支配確認(8, 0, 0, 0) == 1))
		{
			ＧＦ[152] = 1;
		}
		if (必死 == 1 && ii2 == 2 && (iim == 28 || iim == 29 || iim == 30 || iim == 31))
		{
			ＧＦ[152] = 1;
		}
		if (ii2 == 26 && iim == 26 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ固定登録(21, 1332, ii2);
			ＦＰ固定登録(22, 1329, ii2);
			ＦＰ固定登録(23, 1330, ii2);
			ＦＰ固定登録(25, 1331, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 28 && iim == 26 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録専用(21, 1376, 0);
			ＦＰ一時登録専用(22, 1376, 0);
			ＦＰ一時登録専用(23, 1376, 0);
			ＦＰ固定登録(25, 1335, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ＧＦ[461] == 0 && ii2 == 25 && iim == 49 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録専用(25, 1345, 0);
			gs[0][25].兵数最大 = 倍率計算関数(gs[0][25].兵数最大, 100 - ＧＦ[487] * 15);
			if (gs[0][25].兵数最大 < gs[0][25].兵数)
			{
				gs[0][25].兵数 = gs[0][25].兵数最大;
			}
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 29 && iim == 35 && ▲戦場位置 == 2 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ固定登録(25, 1343, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 26 && iim == 17 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ固定登録(22, 1329, ii2);
			ＦＰ一時登録汎用(24, "ログＢ守備隊", 10, 5, ii2, 5510);
			gs[0][24].兵数最大 = 2500;
			ＦＰ一時登録汎用(25, "ログＢ守備隊", 10, 5, ii2, 5510);
			gs[0][25].兵数最大 = 2500;
			ＦＰ一時登録汎用(26, "ログＢ守備隊", 10, 5, ii2, 5510);
			gs[0][26].兵数最大 = 2500;
			ＧＦ[329] += 1;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 26 && iim == 18 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ固定登録(22, 1365, ii2);
			ＦＰ一時登録汎用(24, "ログＡ守備隊", 10, 5, ii2, 5510);
			gs[0][24].兵数最大 = 2500;
			ＦＰ一時登録汎用(25, "ログＢ守備隊", 10, 5, ii2, 5510);
			gs[0][25].兵数最大 = 2500;
			ＦＰ一時登録汎用(26, "ログＢ守備隊", 10, 5, ii2, 5510);
			gs[0][26].兵数最大 = 2500;
			ＧＦ[329] += 1;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 29 && iim == 35 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＧＦ[237] = 1;
			ＦＰ固定登録(25, 1341, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 29 && iim == 34 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(22, "サテラ親衛隊", 10, 29, ii2, 5535);
			ＦＰ一時登録汎用(25, "サテラ親衛隊", 10, 29, ii2, 5535);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 29 && iim == 42 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(22, "ソニック突撃隊", 10, 29, ii2, 5535);
			ＦＰ一時登録汎用(25, "マッハ突撃隊", 10, 29, ii2, 5535);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ＧＦ[461] == 0 && ii2 == 25 && iim == 48 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "人間惨殺隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(22, "人間虐殺隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(23, "人間拷問隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(24, "人間殺戮隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(25, "人間凌辱隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(26, "人間抹殺隊", 10, 31, ii2, 937);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ＧＦ[461] == 0 && ii2 == 25 && iim == 51 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "マンシュタイン", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(22, "グデーリアン", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(23, "ルントシュテット", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(24, "ゲーリング", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(25, "アルベルト", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(26, "ラインハルト", 10, 31, ii2, 937);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ＧＦ[461] == 0 && ii2 == 25 && iim == 53 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "明日のくいもん", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(22, "明日の非常食", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(23, "明日のおやつ", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(24, "明日のばんごはん", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(25, "明後日のぶん", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(26, "明日の夜のおやつ", 10, 29, ii2, 937);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ＧＦ[461] == 0 && ii2 == 25 && iim == 54 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(22, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(23, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(24, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(25, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(26, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 23 && iim == 14 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(22, "ジークフリート", 12, 12, ii2, 5535);
			ＦＰ固定登録(24, 1309, ii2);
			ＦＰ固定登録(25, 1306, ii2);
			ＦＰ固定登録(26, 1308, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 22 && iim == 7 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "ｶｽﾀﾑ防衛隊", 10, 3, ii2, 5141);
			gs[0][21].兵数最大 = ベース兵力取得(ii2, 250);
			ＦＰ一時登録汎用(22, "ﾁｻ親衛隊", 10, 3, ii2, 5141);
			gs[0][22].兵数最大 = ベース兵力取得(ii2, 250);
			ＦＰ一時登録汎用(23, "ｶｽﾀﾑ防衛隊", 10, 3, ii2, 5141);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 250);
			ＦＰ固定登録(24, 1005, ii2);
			ＦＰ固定登録(25, 1145, ii2);
			ＦＰ固定登録(26, 1157, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 22 && iim == 6 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			if (◆ターン < 20)
			{
				ＧＦ[152] = 1;
				ＦＰ一時登録汎用(21, "フロイス", 10, 12, ii2, 4589);
				gs[0][21].兵数最大 = 300;
				gs[0][21].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(22, "ＣＲ７", 10, 34, ii2, 4589);
				gs[0][22].兵数最大 = 300;
				gs[0][22].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(23, "ヤジロー", 10, 12, ii2, 4589);
				gs[0][23].兵数最大 = 300;
				gs[0][23].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(24, "マゼラン", 10, 12, ii2, 4589);
				gs[0][24].兵数最大 = 200;
				gs[0][24].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(25, "エンリケ", 10, 13, ii2, 4589);
				gs[0][25].兵数最大 = 250;
				gs[0][25].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(26, "ディアス", 10, 12, ii2, 4589);
				gs[0][26].兵数最大 = 200;
				gs[0][26].ＵＮ１ = 6607;
			}
			else
			{
				ＧＦ[152] = 1;
				ＦＰ一時登録汎用(21, "フロイス", 10, 12, ii2, 4589);
				gs[0][21].兵数最大 = 750;
				gs[0][21].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(22, "ＣＲ７", 10, 34, ii2, 4589);
				gs[0][22].兵数最大 = 800;
				gs[0][22].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(23, "ヤジロー", 10, 12, ii2, 4589);
				gs[0][23].兵数最大 = 750;
				gs[0][23].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(24, "マゼラン", 10, 12, ii2, 4589);
				gs[0][24].兵数最大 = 450;
				gs[0][24].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(25, "エンリケ", 10, 13, ii2, 4589);
				gs[0][25].兵数最大 = 450;
				gs[0][25].ＵＮ１ = 6607;
				ＦＰ一時登録汎用(26, "ディアス", 10, 12, ii2, 4589);
				gs[0][26].兵数最大 = 450;
				gs[0][26].ＵＮ１ = 6607;
			}
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 22 && iim == 9 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "電撃鼠", 10, 20, ii2, 7044);
			兵数最大_二部難易度比例(0, 21, 4000);
			gs[0][25].技３ = 44;
			ＦＰ一時登録汎用(22, "小可愛奴", 10, 20, ii2, 7044);
			兵数最大_二部難易度比例(0, 22, 6000);
			ＦＰ一時登録汎用(23, "パンダ王子", 1, 20, ii2, 7044);
			兵数最大_二部難易度比例(0, 23, 4000);
			ＦＰ一時登録汎用(24, "姫路ライオン", 10, 20, ii2, 7044);
			兵数最大_二部難易度比例(0, 24, 1000);
			ＦＰ一時登録汎用(25, "危険ネズミ", 10, 11, ii2, 7011);
			兵数最大_二部難易度比例(0, 25, 1500);
			gs[0][25].技４ = 150;
			ＦＰ一時登録汎用(26, "ＵＳポッター", 1, 11, ii2, 7044);
			兵数最大_二部難易度比例(0, 26, 1000);
			gs[0][26].技４ = 150;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 22 && iim == 11 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "ギラン", 10, 1, ii2, 5507);
			兵数最大_二部難易度比例(0, 21, 1500);
			ＦＰ一時登録汎用(22, "ドズラ", 10, 3, ii2, 5261);
			兵数最大_二部難易度比例(0, 22, 1000);
			ＦＰ一時登録汎用(23, "キシリトール", 1, 4, ii2, 5371);
			兵数最大_二部難易度比例(0, 23, 800);
			ＦＰ一時登録汎用(24, "サスオ", 10, 6, ii2, 5191);
			兵数最大_二部難易度比例(0, 24, 600);
			ＦＰ一時登録汎用(25, "デキン", 10, 13, ii2, 5455);
			兵数最大_二部難易度比例(0, 25, 3000);
			ＦＰ一時登録汎用(26, "ヘップバーン", 1, 9, ii2, 5530);
			兵数最大_二部難易度比例(0, 26, 500);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 35 && iim == 12 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "ＦＸ廃人", 10, 1, ii2, 5507);
			兵数最大_二部難易度比例(0, 21, 200);
			ＦＰ一時登録汎用(22, "ブラックマンデー", 10, 3, ii2, 5261);
			兵数最大_二部難易度比例(0, 22, 200);
			ＦＰ一時登録汎用(23, "サキモノ", 1, 4, ii2, 5371);
			兵数最大_二部難易度比例(0, 23, 200);
			ＦＰ一時登録汎用(24, "ローソク", 10, 6, ii2, 5191);
			兵数最大_二部難易度比例(0, 24, 200);
			ＦＰ固定登録(25, 1422, ii2);
			ＦＰ一時登録汎用(26, "パチンカー", 1, 9, ii2, 5530);
			兵数最大_二部難易度比例(0, 26, 200);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 22 && iim == 5 && ▲戦場位置 == 2 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "闘将", 10, 61, ii2, 4617);
			gs[0][21].兵数最大 = 200;
			ＦＰ一時登録汎用(22, "闘将", 10, 61, ii2, 4617);
			gs[0][22].兵数最大 = 200;
			ＦＰ一時登録汎用(23, "闘将", 10, 61, ii2, 4617);
			gs[0][23].兵数最大 = 200;
			ＦＰ一時登録汎用(24, "闘将", 10, 61, ii2, 4617);
			gs[0][24].兵数最大 = 200;
			ＦＰ一時登録汎用(25, "闘将", 10, 61, ii2, 4617);
			gs[0][25].兵数最大 = 500;
			ＦＰ一時登録汎用(26, "闘将", 10, 61, ii2, 4617);
			gs[0][26].兵数最大 = 200;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 22 && iim == 5 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＧＦ[152] = 1;
			ＦＰ一時登録汎用(21, "闘将", 10, 61, ii2, 4617);
			gs[0][21].兵数最大 = 300;
			ＦＰ一時登録汎用(22, "闘将", 10, 61, ii2, 4617);
			gs[0][22].兵数最大 = 300;
			ＦＰ一時登録汎用(23, "闘将", 10, 61, ii2, 4617);
			gs[0][23].兵数最大 = 300;
			ＦＰ一時登録汎用(24, "闘将", 10, 61, ii2, 4617);
			gs[0][24].兵数最大 = 400;
			ＦＰ一時登録汎用(25, "闘将", 10, 61, ii2, 4617);
			gs[0][25].兵数最大 = 500;
			ＦＰ一時登録汎用(26, "闘将", 10, 61, ii2, 4617);
			gs[0][26].兵数最大 = 400;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 12 && iim == 16 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "原城防衛隊", 10, 3, ii2, 5141);
			gs[0][21].兵数最大 = ベース兵力取得(ii2, 250);
			ＦＰ一時登録汎用(23, "原城防衛隊", 10, 3, ii2, 5141);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 250);
			ＦＰ固定登録(25, 1023, ii2);
			敵ＦＰ定番編成(ii2, 0, 1, 0, 5, 0, 5);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 13 && iim == 19 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "新田義貞", 10, 1, ii2, 5141);
			gs[0][21].兵数最大 = ベース兵力取得(ii2, 300);
			ＦＰ一時登録汎用(22, "六波羅探題", 1, 6, ii2, 5411);
			ＦＰ一時登録汎用(23, "楠正成", 10, 3, ii2, 5211);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 300);
			if (ＦＰ固定登録(24, 1026, ii2) == 0)
			{
				ＦＰ一時登録汎用(24, "てるには", 1, 5, ii2, 5342);
			}
			ＦＰ固定登録(25, 1025, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 13 && iim == 13 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "赤蝮", 10, 1, ii2, 5192);
			gs[0][21].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録汎用(22, "青蝮", 10, 1, ii2, 5192);
			gs[0][22].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録汎用(23, "黄蝮", 10, 1, ii2, 5192);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 200);
			if (ＦＰ固定登録(24, 1026, ii2) == 0)
			{
				ＦＰ一時登録汎用(22, "てるには", 1, 5, ii2, 5342);
			}
			ＦＰ固定登録(25, 1025, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 11)
		{
			if (iim == 18 && ▲戦場位置 == 3 && ▲要害 != 0)
			{
				ＦＰ一時登録汎用(21, "伊賀森守り", 10, 6, ii2, 5161);
				ＦＰ一時登録汎用(22, "伊賀里守り", 10, 6, ii2, 5161);
				ＦＰ一時登録汎用(23, "伊賀川守り", 10, 6, ii2, 5161);
				ＦＰ一時登録汎用(24, "伊賀砦頭", 10, 13, ii2, 5191);
				ＦＰ一時登録汎用(25, "猿飼", 10, 6, ii2, 5245);
				ＦＰ要害難易度調整(iim, ▲戦場位置);
			}
			if (iim == 18 && 必死 == 1)
			{
				ＦＰ固定登録(25, 1065, ii2);
				敵ＦＰ定番編成(ii2, 6, 6, 6, 6, 0, 6);
			}
		}
		if (ii2 == 18 && iim == 14 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			if (EV("徳川／出陣", -2147483648) == false)
			{
				EV("徳川／出陣", 1);
				ch = 1041;
				Ｃ配備変更(0, ch, ii2);
				ch = 1042;
				Ｃ配備変更(0, ch, ii2);
				ch = 1043;
				Ｃ配備変更(0, ch, ii2);
				ch = 1046;
				Ｃ配備変更(0, ch, ii2);
				ch = 1045;
				Ｃ配備変更(0, ch, ii2);
				ch = 1044;
				Ｃ配備変更(0, ch, ii2);
			}
			if (ＦＰ固定登録(21, 1042, ii2) == 0)
			{
				ＦＰ一時登録汎用(21, "岡崎武士", 10, 1, ii2, 5212);
			}
			ＦＰ固定登録(22, 1041, ii2);
			if (ＦＰ固定登録(23, 1046, ii2) == 0)
			{
				ＦＰ一時登録汎用(23, "岡崎城衛兵", 10, 3, ii2, 5212);
			}
			if (ＦＰ固定登録(24, 1044, ii2) == 0)
			{
				ＦＰ一時登録汎用(24, "トクニン", 1, 6, ii2, 5212);
			}
			if (ＦＰ固定登録(25, 1045, ii2) == 0)
			{
				ＦＰ一時登録汎用(25, "南光坊天海", 10, 13, ii2, 5212);
			}
			if (ＦＰ固定登録(26, 1043, ii2) == 0)
			{
				ＦＰ一時登録汎用(26, "徳川秀忠", 1, 5, ii2, 5212);
			}
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 8 && iim == 12 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "反撃の鬼昌", 10, 3, ii2, 5141);
			gs[0][21].技能 = 109;
			ＦＰ固定登録(22, 1057, ii2);
			ＦＰ一時登録汎用(23, "反撃の越前", 10, 3, ii2, 5245);
			gs[0][23].技能 = 109;
			ＦＰ一時登録汎用(25, "浅井久政", 10, 13, ii2, 5211);
			ＦＰ一時登録汎用(26, "家宝の鉄砲隊", 10, 4, ii2, 5155);
			gs[0][26].兵数最大 = ベース兵力取得(ii2, 400);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 14 && iim == 21 && ▲戦場位置 == 3 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "教祖の財布", 1, 24, ii2, 5371);
			ＦＰ一時登録汎用(22, "教祖の情婦", 1, 24, ii2, 5371);
			ＦＰ一時登録汎用(23, "教祖の肉穴", 1, 24, ii2, 5371);
			ＦＰ一時登録汎用(24, "腐れ和尚", 10, 13, ii2, 5262);
			gs[0][24].技４ = 5;
			ＦＰ一時登録汎用(25, "エロ教祖", 10, 7, ii2, 5171);
			ＦＰ一時登録汎用(26, "消費者金融", 10, 13, ii2, 5155);
			gs[0][26].技４ = 5;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 14)
		{
			if (必死 == 1 && 支配国数(ii2) == 1)
			{
				ＦＰ固定登録(22, 1028, ii2);
				ch = 1126;
				if (敵ＦＰ参加条件(ch, ii2) == 1)
				{
					ＦＰ固定登録(21, ch, ii2);
				}
				ch = 1127;
				if (敵ＦＰ参加条件(ch, ii2) == 1)
				{
					ＦＰ固定登録(24, ch, ii2);
				}
				ch = 1128;
				if (敵ＦＰ参加条件(ch, ii2) == 1)
				{
					ＦＰ固定登録(25, ch, ii2);
				}
			}
			ch = 1047;
			if (敵ＦＰ参加条件(ch, ii2) == 1 && 支配国数(ii2) == 1)
			{
				ＦＰ固定登録(26, ch, ii2);
			}
		}
		if (ii2 == 9 && iim == 20 && ▲戦場位置 == 4 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "第１鉄砲隊", 1, 4, ii2, 5365);
			gs[0][21].兵数最大 = ベース兵力取得(ii2, 130);
			ＦＰ一時登録汎用(22, "第２鉄砲隊", 1, 4, ii2, 5361);
			gs[0][22].兵数最大 = ベース兵力取得(ii2, 150);
			ＦＰ一時登録汎用(23, "第３鉄砲隊", 1, 4, ii2, 5347);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 180);
			ＦＰ一時登録汎用(25, "晴天祈願師", 1, 13, ii2, 5331);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 9 && iim == 20 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ固定登録(21, 1039, ii2);
			ＦＰ一時登録汎用(22, "鉄砲防衛軍２", 1, 3, ii2, 5352);
			gs[0][22].技能 = 127;
			if (敵Ｃ確認(ii2, 1040, 0, 0, 0) == 1)
			{
				ＦＰ固定登録(23, 1040, ii2);
			}
			else
			{
				ＦＰ一時登録汎用(23, "柚美の叔父", 10, 4, ii2, 5192);
			}
			ＦＰ一時登録汎用(24, "救護兵", 10, 9, ii2, 5251);
			gs[0][24].技１ = 51;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 9)
		{
			if (国[20].支配土地 == 2 || 国[20].支配土地 == 3)
			{
				敵ＦＰ定番編成(ii2, 4, 3, 4, 0, 0, 0);
			}
		}
		if (ii2 == 4 && iim == 6 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "東条巫女隊", 1, 9, ii2, 5352);
			ＦＰ一時登録汎用(22, "小田原城兵", 10, 3, ii2, 5241);
			gs[0][22].兵数最大 = ベース兵力取得(ii2, 400);
			ＦＰ一時登録汎用(23, "東条巫女隊", 1, 9, ii2, 5361);
			ＦＰ一時登録汎用(24, "東条巫女隊", 1, 9, ii2, 5365);
			ＦＰ一時登録汎用(25, "小田原城兵", 10, 3, ii2, 5241);
			gs[0][25].兵数最大 = ベース兵力取得(ii2, 400);
			ＦＰ一時登録汎用(26, "東条巫女隊", 1, 9, ii2, 5371);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 4 && iim == 4 && ▲戦場位置 == 3 && ▲要害 != 0)
		{
			ＦＰ一時登録専用(21, 1087, 0);
			ＦＰ一時登録専用(22, 1086, 0);
			ＦＰ一時登録専用(23, 1087, 0);
			ＦＰ一時登録汎用(24, "鬼殺し慶子", 1, 8, ii2, 5331);
			ＦＰ一時登録汎用(25, "鬼脅しのカツ", 1, 8, ii2, 5345);
			ＦＰ一時登録汎用(26, "ジュピター", 1, 8, ii2, 5347);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 4 && iim == 5 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			if (敵Ｃ確認(ii2, 1050, 0, 0, 0) == 1)
			{
				ＦＰ固定登録(21, 1050, ii2);
			}
			else
			{
				ＦＰ一時登録汎用(21, "北条ウジウジ", 10, 8, ii2, 5322);
			}
			ＦＰ一時登録汎用(22, "大道寺政繁", 10, 3, ii2, 5211);
			gs[0][22].兵数最大 = 1000;
			if (敵Ｃ確認(ii2, 1051, 0, 0, 0) == 1)
			{
				ＦＰ固定登録(23, 1051, ii2);
			}
			else
			{
				ＦＰ一時登録汎用(23, "南条コタロー", 1, 8, ii2, 5321);
			}
			敵ＦＰ定番編成(ii2, 0, 0, 0, 8, 8, 8);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 4)
		{
			if (ＡＣＦ(1051, 9999) == 2 && 敵ＦＰ参加条件(1051, ii2) == 1)
			{
				ＦＰ固定登録(25, 1051, ii2);
			}
		}
		if (ii2 == 19 && iim == 23 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ固定登録(21, 1035, ii2);
			ＦＰ一時登録汎用(22, "陶晴賢", 1, 1, ii2, 5249);
			gs[0][22].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録専用(23, 1131, ii2);
			ＦＰ一時登録汎用(24, "毛利弓隊", 1, 5, ii2, 5341);
			gs[0][24].兵数最大 = ベース兵力取得(ii2, 150);
			ＦＰ一時登録汎用(25, "出雲軍師", 1, 13, ii2, 5301);
			gs[0][25].兵数最大 = ベース兵力取得(ii2, 150);
			ＦＰ一時登録汎用(26, "毛利弓隊", 1, 5, ii2, 5341);
			gs[0][26].兵数最大 = ベース兵力取得(ii2, 150);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 19 && iim == 27 && ▲戦場位置 == 2 && ▲要害 != 0)
		{
			ＦＰ固定登録(21, 1035, ii2);
			ＦＰ一時登録汎用(22, "毛利足軽隊", 1, 3, ii2, 5121);
			gs[0][22].兵数最大 = ベース兵力取得(ii2, 300);
			ＦＰ一時登録汎用(23, "毛利足軽隊", 10, 3, ii2, 5121);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 300);
			ＦＰ一時登録汎用(24, "毛利弓隊", 1, 5, ii2, 5341);
			gs[0][24].兵数最大 = ベース兵力取得(ii2, 120);
			ＦＰ一時登録汎用(25, "大内義隆", 10, 8, ii2, 5131);
			gs[0][25].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録専用(26, 1132, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 19 && iim == 26 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ固定登録(21, 1035, ii2);
			ＦＰ一時登録汎用(22, "レッドサン侍", 10, 1, ii2, 5261);
			ＦＰ一時登録汎用(23, "生駒盗賊団", 10, 3, ii2, 5245);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 300);
			ＦＰ一時登録汎用(24, "毛利弓隊", 1, 5, ii2, 5341);
			gs[0][24].兵数最大 = ベース兵力取得(ii2, 50);
			ＦＰ一時登録専用(25, 1133, ii2);
			ＦＰ一時登録汎用(26, "毛利弓隊", 1, 5, ii2, 5341);
			gs[0][26].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 15 && iim == 25 && ▲戦場位置 == 3 && ▲要害 != 0)
		{
			ＦＰ一時登録専用(21, 1104, 0);
			gs[0][21].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録専用(22, 1104, 0);
			gs[0][22].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録専用(23, 1104, 0);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録汎用(24, "ランラン", 10, 8, ii2, 5251);
			ＦＰ一時登録汎用(25, "謎の中国人", 10, 6, ii2, 5261);
			gs[0][25].兵数最大 = ベース兵力取得(ii2, 500);
			ＦＰ一時登録汎用(26, "カンカン", 10, 8, ii2, 5251);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 15)
		{
			if (必死 == 1 && 支配国数(ii2) == 1)
			{
				if (敵ＦＰ参加条件(1032, ii2) == 1)
				{
					ＦＰ固定登録(21, 1032, ii2);
				}
				if (敵ＦＰ参加条件(1033, ii2) == 1)
				{
					ＦＰ固定登録(22, 1033, ii2);
				}
				if (敵ＦＰ参加条件(1034, ii2) == 1)
				{
					ＦＰ固定登録(23, 1034, ii2);
				}
				if (敵ＦＰ参加条件(1031, ii2) == 1)
				{
					ＦＰ固定登録(26, 1031, ii2);
				}
			}
			ra = RAND(4);
			if (ra == 1 && 敵ＦＰ参加条件(1032, ii2) == 1)
			{
				ＦＰ固定登録(22, 1032, ii2);
			}
			if (ra == 2 && 敵ＦＰ参加条件(1033, ii2) == 1)
			{
				ＦＰ固定登録(22, 1033, ii2);
			}
			if (ra == 3 && 敵ＦＰ参加条件(1034, ii2) == 1)
			{
				ＦＰ固定登録(22, 1034, ii2);
			}
			if (ra == 4 && 敵ＦＰ参加条件(1031, ii2) == 1)
			{
				ＦＰ固定登録(26, 1031, ii2);
			}
		}
		if (ii2 == 7 && iim == 11 && ▲戦場位置 == 3 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "巫女ファン", 10, 3, ii2, 5131);
			gs[0][21].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録汎用(22, "巫女マニア", 10, 3, ii2, 5145);
			gs[0][22].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録汎用(23, "巫女クラブ", 10, 3, ii2, 5155);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 200);
			ＦＰ一時登録汎用(24, "妹尾雄大", 10, 13, ii2, 5173);
			gs[0][24].技能 = 136;
			ＦＰ一時登録汎用(25, "ＵＳＡ忍者", 10, 6, ii2, 5191);
			gs[0][25].兵数最大 = ベース兵力取得(ii2, 100);
			ＦＰ一時登録汎用(26, "巫女さらい", 10, 9, ii2, 5151);
			gs[0][26].兵数最大 = ベース兵力取得(ii2, 100);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 7)
		{
			if (必死 == 1 && 支配国数(ii2) == 1)
			{
				ＦＰ固定登録(25, 1071, ii2);
				敵ＦＰ定番編成(ii2, 3, 1, 0, 3, 0, 0);
			}
		}
		if (ii2 == 3 && iim == 9 && ▲戦場位置 == 4 && ▲要害 != 0 && 敵Ｃ確認(ii2, 1181, 0, 0, 0) == 1)
		{
			ＦＰ一時登録汎用(21, "啄木鳥隊", 10, 3, ii2, 5161);
			ＦＰ一時登録汎用(22, "武田鬼武者", 10, 1, ii2, 5245);
			ＦＰ一時登録汎用(23, "啄木鳥隊", 10, 3, ii2, 5161);
			ＦＰ固定登録(25, 1181, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 3 && iim == 9 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "赤備え隊", 10, 2, ii2, 5161);
			ＦＰ固定登録(22, 1056, ii2);
			ＦＰ一時登録汎用(23, "赤備え隊", 10, 2, ii2, 5161);
			ＦＰ一時登録汎用(24, "秋山信友", 10, 3, ii2, 5261);
			ＦＰ一時登録汎用(25, "内藤昌豊", 10, 3, ii2, 5241);
			ＦＰ一時登録汎用(26, "土屋昌次", 10, 3, ii2, 5142);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 3 && iim == 8 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			if (EV("信長ｖｓ馬場", -2147483648) == false)
			{
				ＦＰ固定登録(22, 1054, ii2);
			}
			ＦＰ固定登録(25, 1053, ii2);
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 3)
		{
			if (国[9].支配土地 == 4)
			{
				敵ＦＰ定番編成(ii2, 3, 0, 3, 2, 0, 2);
			}
		}
		if (ii2 == 5 && iim == 10 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			if (敵Ｃ確認(ii2, 1048, 0, 0, 0) == 1)
			{
				ＦＰ固定登録(21, 1048, ii2);
			}
			if (敵Ｃ確認(ii2, 1108, 0, 0, 0) == 1)
			{
				ＦＰ固定登録(22, 1108, ii2);
			}
			if (敵Ｃ確認(ii2, 1109, 0, 0, 0) == 1)
			{
				ＦＰ固定登録(23, 1109, ii2);
			}
			ＦＰ一時登録汎用(24, "毘沙門天", 10, 3, ii2, 5172);
			gs[0][24].兵数最大 = ベース兵力取得(ii2, 300);
			gs[0][24].技１ = 23;
			if (敵Ｃ確認(ii2, 1049, 0, 0, 0) == 1)
			{
				ＦＰ固定登録(25, 1049, ii2);
			}
			ＦＰ一時登録汎用(26, "北の工作員", 1, 6, 18, 5362);
			gs[0][26].兵数最大 = 10;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 16 && iim == 2 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "蝉丸", 10, 3, ii2, 938);
			gs[0][21].兵数最大 = 2000;
			ＦＰ一時登録汎用(22, "アテルイ", 10, 1, ii2, 938);
			gs[0][22].兵数最大 = 2000;
			ＦＰ一時登録汎用(23, "牛丸", 10, 3, ii2, 938);
			gs[0][23].兵数最大 = 2000;
			ＦＰ一時登録汎用(24, "雨女", 1, 9, ii2, 938);
			gs[0][24].兵数最大 = 2000;
			ＦＰ一時登録汎用(25, "産女", 1, 9, ii2, 938);
			gs[0][25].兵数最大 = 2000;
			ＦＰ一時登録汎用(26, "猫又", 1, 9, ii2, 938);
			gs[0][26].兵数最大 = 2000;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 16 && iim == 1 && ▲戦場位置 == 1 && ▲要害 != 0)
		{
			ＦＰ一時登録汎用(21, "アテルイ", 10, 1, ii2, 938);
			gs[0][21].兵数最大 = 3500;
			ＦＰ一時登録汎用(22, "坂田金時", 10, 1, ii2, 938);
			gs[0][22].兵数最大 = 3500;
			ＦＰ一時登録汎用(23, "猿田彦", 10, 3, ii2, 938);
			gs[0][23].兵数最大 = 3500;
			ＦＰ一時登録汎用(24, "海苔子", 1, 8, ii2, 938);
			gs[0][24].兵数最大 = 3500;
			ＦＰ一時登録汎用(25, "アナルメガネ", 1, 3, ii2, 938);
			gs[0][25].兵数最大 = 3500;
			ＦＰ一時登録汎用(26, "エタビニン", 1, 8, ii2, 938);
			gs[0][26].兵数最大 = 3500;
			ＦＰ要害難易度調整(iim, ▲戦場位置);
		}
		if (ii2 == 16)
		{
			for (; ; )
			{
				if (敵ＦＰ参加条件(1013, ii2) == 1)
				{
					ＦＰ固定登録(22, 1013, ii2);
					break;
				}
				if (敵ＦＰ参加条件(1015, ii2) == 1)
				{
					ＦＰ固定登録(22, 1015, ii2);
					break;
				}
				if (敵ＦＰ参加条件(1014, ii2) == 1)
				{
					ＦＰ固定登録(22, 1014, ii2);
					break;
				}
				if (敵ＦＰ参加条件(1016, ii2) == 1)
				{
					ＦＰ固定登録(22, 1016, ii2);
					break;
				}
				break;
			}
			if (必死 == 1 && 支配国数(ii2) == 1 && ◆攻防タイプ == 1)
			{
				ＦＰ固定登録(21, 1012, 0);
			}
		}
		if (ii2 == 2)
		{
			if (iim == 28 && ▲戦場位置 == 1 && ▲要害 != 0 && EV("魔軍／魔物将軍イスン", -2147483648) == false)
			{
				ＦＰ一時登録専用(21, 1183, 0);
				ＦＰ一時登録専用(22, 1183, 0);
				ＦＰ一時登録専用(23, 1183, 0);
				ＦＰ一時登録専用(24, 1186, 0);
				ＦＰ一時登録専用(25, 1083, 0);
				ＦＰ一時登録専用(26, 1186, 0);
				ＦＰ要害難易度調整(iim, ▲戦場位置);
			}
			if (iim == 28 && ▲戦場位置 == 3 && ▲要害 != 0)
			{
				ＦＰ一時登録専用(21, 1183, 0);
				ＦＰ一時登録専用(22, 1183, 0);
				ＦＰ一時登録専用(23, 1183, 0);
				ＦＰ一時登録専用(24, 1186, 0);
				ＦＰ一時登録専用(25, 1186, 0);
				ＦＰ一時登録専用(26, 1186, 0);
				ＦＰ要害難易度調整(iim, ▲戦場位置);
			}
			if (iim == 30 && ▲戦場位置 == 1 && ▲要害 != 0 && EV("魔軍／魔物将軍ベプチョ", -2147483648) == false)
			{
				ＦＰ一時登録専用(21, 1183, 0);
				ＦＰ一時登録専用(22, 1184, 0);
				ＦＰ一時登録専用(23, 1183, 0);
				ＦＰ一時登録専用(24, 1185, 0);
				ＦＰ一時登録専用(25, 1084, 0);
				ＦＰ一時登録専用(26, 1185, 0);
				ＦＰ要害難易度調整(iim, ▲戦場位置);
			}
			if (iim == 29 && ▲戦場位置 == 1 && ▲要害 != 0 && EV("魔軍／魔物将軍ウィスピン", -2147483648) == false)
			{
				ＦＰ一時登録専用(21, 1183, 0);
				gs[0][21].兵数最大 += 300;
				ＦＰ一時登録専用(22, 1184, 0);
				gs[0][22].兵数最大 += 300;
				ＦＰ一時登録専用(23, 1183, 0);
				gs[0][23].兵数最大 += 300;
				ＦＰ一時登録専用(24, 1185, 0);
				gs[0][24].兵数最大 += 300;
				ＦＰ一時登録専用(25, 1085, 0);
				ＦＰ一時登録専用(26, 1185, 0);
				gs[0][26].兵数最大 += 300;
				ＦＰ要害難易度調整(iim, ▲戦場位置);
			}
			if ((iim == 30 || iim == 29) && ▲要害 == 0 && EV("魔軍／トシヒサ防衛Ｂ", -2147483648) == false && EV("魔軍／ヨシヒサ強襲Ａ", -2147483648) == true)
			{
				ＦＰ一時登録専用(21, 1107, 0);
				ＦＰ一時登録専用(22, 1063, 0);
				ＦＰ一時登録専用(23, 1107, 0);
			}
			if ((iim == 30 || iim == 29) && ▲要害 == 0 && EV("魔軍／イエヒサ防衛Ｂ", -2147483648) == false && EV("魔軍／トシヒサ防衛Ｂ", -2147483648) == true)
			{
				ＦＰ一時登録専用(21, 1062, 6);
				ＦＰ一時登録汎用(22, "モロッコの王", 10, 1, 6, 5352);
				gs[0][22].兵数最大 += 500;
				ＦＰ一時登録専用(25, 1064, 6);
				ＦＰ一時登録汎用(26, "モナコの王", 10, 8, 6, 5361);
				gs[0][22].兵数最大 += 500;
			}
			if (iim == 31 && ▲戦場位置 == 1 && ▲要害 != 0)
			{
				ＦＰ一時登録汎用(21, "アパ・パール", 10, 27, ii2, 937);
				ＦＰ一時登録汎用(22, "レル・モップ", 10, 28, ii2, 937);
				gs[0][22].技能 = 127;
				ＦＰ一時登録汎用(23, "ペッ・ペール", 10, 27, ii2, 937);
				ＦＰ一時登録汎用(25, "アコンカグヤ", 10, 31, ii2, 937);
				gs[0][25].兵数最大 = 5000;
				ＦＰ一時登録汎用(26, "８８０１", 10, 28, ii2, 937);
				gs[0][26].兵数最大 = 3000;
				gs[0][26].技能 = 127;
				ＦＰ要害難易度調整(iim, ▲戦場位置);
			}
			if (必死 == 1 && EV("魔軍／魔物参入", -2147483648) == true)
			{
				ＦＰ一時登録汎用(21, "人間潰しビズ", 20, 27, ii2, 937);
				ＦＰ一時登録汎用(24, "時間潰しアリ", 20, 29, ii2, 937);
				gs[0][24].技４ = 5;
			}
		}
	}
	if (◆攻防タイプ == 2)
	{
		if (ii2 == 13 && ＧＦ[153] == 1)
		{
			ＦＰ一時登録汎用(21, "新田義貞", 10, 1, ii2, 5141);
			gs[0][21].兵数最大 = ベース兵力取得(ii2, 400);
			ＦＰ一時登録汎用(22, "六波羅探題", 1, 6, ii2, 5411);
			ＦＰ一時登録汎用(23, "楠正成", 10, 3, ii2, 5211);
			gs[0][23].兵数最大 = ベース兵力取得(ii2, 400);
			ＦＰ固定登録(25, 1025, ii2);
			敵ＦＰ兵力全回復();
		}
		if (ii2 == 18)
		{
			if (ＧＦ[154] == 1)
			{
				ＦＰ固定登録(25, 1044, ii2);
				敵ＦＰ定番編成(ii2, 1, 3, 1, 8, 0, 3);
			}
			if (ＧＦ[154] == 2)
			{
				ＦＰ固定登録(25, 1045, ii2);
				敵ＦＰ定番編成(ii2, 6, 3, 1, 13, 0, 3);
			}
		}
		if (ii2 == 14)
		{
			if (ＧＦ[155] == 1)
			{
				ＦＰ一時登録汎用(21, "教祖の財布", 1, 24, ii2, 5371);
				ＦＰ一時登録汎用(22, "教祖の情婦", 1, 24, ii2, 5371);
				ＦＰ一時登録汎用(23, "教祖の肉穴", 1, 24, ii2, 5371);
				ＦＰ一時登録汎用(25, "エロ教祖", 10, 7, ii2, 5171);
			}
			if (ＧＦ[155] == 3)
			{
				ＦＰ一時登録汎用(22, "教祖の情婦", 1, 24, ii2, 5371);
				ＦＰ一時登録汎用(25, "エロ教祖", 10, 7, ii2, 5171);
			}
			if (ＧＦ[155] == 5)
			{
				ＦＰ一時登録汎用(25, "エロ教祖", 10, 7, ii2, 5171);
			}
		}
		if (ii2 == 4)
		{
			if (ＧＦ[158] == 1)
			{
				ＦＰ一時登録汎用(21, "北条家護衛隊", 10, 3, ii2, 5212);
				ＦＰ一時登録汎用(24, "北条家護衛隊", 10, 3, ii2, 5212);
				ＦＰ固定登録(25, 1050, ii2);
			}
			if (ＧＦ[158] == 3)
			{
				ＦＰ一時登録汎用(21, "北条家護衛隊", 10, 3, ii2, 5212);
				ＦＰ一時登録汎用(24, "北条家護衛隊", 10, 3, ii2, 5212);
				ＦＰ固定登録(25, 1050, ii2);
				ＦＰ固定登録(26, 1051, ii2);
			}
			if (ＧＦ[158] == 5)
			{
				ＦＰ一時登録汎用(21, "北条家護衛隊", 10, 3, ii2, 5212);
				ＦＰ固定登録(22, 1052, ii2);
				ＦＰ一時登録汎用(24, "北条家護衛隊", 10, 3, ii2, 5212);
				ＦＰ固定登録(25, 1050, ii2);
				ＦＰ固定登録(26, 1051, ii2);
			}
			if (ＡＣＦ(1051, 9999) > 0 && 敵ＦＰ参加条件(1051, ii2) == 1)
			{
				ＦＰ一時登録汎用(21, "南条家護衛隊", 10, 3, ii2, 5212);
				ＦＰ固定登録(25, 1051, ii2);
				ＦＰ一時登録汎用(26, "南条家護衛隊", 10, 3, ii2, 5212);
			}
		}
	}
	if (ii2 == 13)
	{
		ch = 1026;
		if (敵ＦＰ参加条件(ch, ii2) == 1)
		{
			ＦＰ固定登録(25, ch, ii2);
		}
	}
	if (ii2 == 5 && EV("上杉／ランスｖｓ謙信", -2147483648) == false)
	{
		ch = 1048;
		if (敵ＦＰ参加条件(ch, ii2) == 1)
		{
			ＦＰ固定登録(22, ch, ii2);
		}
	}
	if (ii2 == 19 && EV("毛利／大決戦汎用", -2147483648) == true)
	{
		ra = RAND(4);
		if (ra == 1)
		{
			ch = 1036;
			if (敵ＦＰ参加条件(ch, ii2) == 1)
			{
				ＦＰ固定登録(21, ch, ii2);
			}
		}
		if (ra == 2 || ra == 4)
		{
			ch = 1037;
			if (敵ＦＰ参加条件(ch, ii2) == 1)
			{
				ＦＰ固定登録(25, ch, ii2);
			}
		}
		if (ra == 3)
		{
			ch = 1038;
			if (敵ＦＰ参加条件(ch, ii2) == 1)
			{
				ＦＰ固定登録(25, ch, ii2);
			}
		}
		ch = 1035;
		if (敵ＦＰ参加条件(ch, ii2) == 1 && ◆攻防タイプ == 2)
		{
			ＦＰ固定登録(22, 1035, ii2);
		}
	}
	if (ii2 == 23)
	{
		if (ＧＦ[221] == 1)
		{
			Ｃ行動変更(0, 1307, ii2);
			Ｃ兵数補充(300, 1307, ii2);
			ＦＰ固定登録(22, 1307, ii2);
			Ｃ行動変更(0, 1308, ii2);
			Ｃ兵数補充(300, 1308, ii2);
			ＦＰ固定登録(25, 1308, ii2);
		}
		if (ＧＦ[221] == 2)
		{
			Ｃ行動変更(0, 1305, ii2);
			Ｃ兵数補充(300, 1305, ii2);
			ＦＰ固定登録(22, 1305, ii2);
			Ｃ行動変更(0, 1306, ii2);
			Ｃ兵数補充(300, 1306, ii2);
			ＦＰ固定登録(25, 1306, ii2);
		}
		if (ＧＦ[221] == 3)
		{
			Ｃ行動変更(0, 1006, ii2);
			Ｃ兵数補充(300, 1006, ii2);
			ＦＰ固定登録(22, 1006, ii2);
			Ｃ行動変更(0, 1309, ii2);
			Ｃ兵数補充(300, 1309, ii2);
			ＦＰ固定登録(25, 1309, ii2);
		}
		if (ＧＦ[221] == 4)
		{
			Ｃ行動変更(0, 1307, ii2);
			Ｃ兵数補充(300, 1307, ii2);
			ＦＰ固定登録(21, 1307, ii2);
			Ｃ行動変更(0, 1308, ii2);
			Ｃ兵数補充(300, 1308, ii2);
			ＦＰ固定登録(24, 1308, ii2);
			Ｃ行動変更(0, 1305, ii2);
			Ｃ兵数補充(300, 1305, ii2);
			ＦＰ固定登録(22, 1305, ii2);
			Ｃ行動変更(0, 1306, ii2);
			Ｃ兵数補充(300, 1306, ii2);
			ＦＰ固定登録(25, 1306, ii2);
			Ｃ行動変更(0, 1006, ii2);
			Ｃ兵数補充(300, 1006, ii2);
			ＦＰ固定登録(23, 1006, ii2);
			Ｃ行動変更(0, 1309, ii2);
			Ｃ兵数補充(300, 1309, ii2);
			ＦＰ固定登録(26, 1309, ii2);
		}
	}
	if (ii2 == 25)
	{
		if (ＧＦ[333] == 1)
		{
			Ｃ行動変更(0, 1347, ii2);
			ＦＰ一時登録汎用(21, "くいもん", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(22, "非常食", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(23, "３時のおやつ", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(24, "ばんごはん", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(26, "夜のおやつ", 10, 29, ii2, 937);
			ＦＰ固定登録(25, 1347, ii2);
		}
		if (ＧＦ[333] == 2)
		{
			Ｃ行動変更(0, 1347, ii2);
			ＦＰ一時登録汎用(21, "レッドアイ下僕Ａ", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(22, "レッドアイ下僕Ｂ", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(23, "レッドアイ下僕Ｃ", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(24, "レッドアイ下僕Ｄ", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(26, "レッドアイ下僕Ｅ", 10, 31, ii2, 937);
			ＦＰ固定登録(25, 1350, ii2);
		}
		if (ＧＦ[333] == 3)
		{
			Ｃ行動変更(0, 1348, ii2);
			ＦＰ一時登録汎用(21, "人間惨殺隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(22, "人間虐殺隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(23, "人間拷問隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(24, "人間殺戮隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(26, "人間抹殺隊", 10, 31, ii2, 937);
			ＦＰ固定登録(25, 1348, ii2);
		}
		if (ＧＦ[333] == 4)
		{
			Ｃ行動変更(0, 1346, ii2);
			ＦＰ一時登録汎用(21, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(22, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(23, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(24, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(26, "カミーラ親衛隊", 10, 31, ii2, 937);
			ＦＰ固定登録(25, 1346, ii2);
		}
		if (ＧＦ[333] == 5)
		{
			Ｃ行動変更(0, 1346, ii2);
			ＦＰ一時登録汎用(21, "マンシュタイン", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(22, "グデーリアン", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(23, "ルントシュテット", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(24, "ゲーリング", 10, 31, ii2, 937);
			ＦＰ一時登録汎用(26, "ラインハルト", 10, 31, ii2, 937);
			ＦＰ固定登録(25, 1353, ii2);
		}
	}
	if (ii2 == 26)
	{
		if (ＧＦ[333] == 6)
		{
			Ｃ行動変更(0, 1331, ii2);
			ＦＰ固定登録(22, 1331, ii2);
			ＦＰ一時登録汎用(21, "第二軍装甲兵", 17, 62, ii2, 5510);
			ＦＰ一時登録汎用(23, "第二軍装甲兵", 17, 62, ii2, 5510);
			ＦＰ一時登録汎用(24, "第二軍弩兵", 17, 5, ii2, 5513);
			ＦＰ一時登録汎用(25, "第二軍弩兵", 17, 5, ii2, 5513);
			ＦＰ一時登録汎用(26, "第二軍弩兵", 17, 5, ii2, 5513);
		}
		if (ＧＦ[333] == 7)
		{
			Ｃ行動変更(0, 1332, ii2);
			ＦＰ固定登録(22, 1332, ii2);
			ＦＰ一時登録汎用(21, "第四軍装甲兵", 10, 62, ii2, 5510);
			ＦＰ一時登録汎用(23, "第四軍装甲兵", 10, 62, ii2, 5510);
			ＦＰ一時登録汎用(24, "第四軍弩兵", 10, 5, ii2, 5513);
			ＦＰ一時登録汎用(25, "第四軍弩兵", 10, 5, ii2, 5513);
			ＦＰ一時登録汎用(26, "第四軍弩兵", 10, 5, ii2, 5513);
		}
		if (ＧＦ[333] == 8)
		{
			Ｃ行動変更(0, 1330, ii2);
			ＦＰ固定登録(22, 1330, ii2);
			ＦＰ一時登録汎用(21, "第五軍装甲兵", 15, 62, ii2, 5510);
			ＦＰ一時登録汎用(23, "第五軍装甲兵", 15, 62, ii2, 5510);
			ＦＰ一時登録汎用(24, "第五軍弩兵", 15, 5, ii2, 5513);
			ＦＰ一時登録汎用(25, "第五軍弩兵", 15, 5, ii2, 5513);
			ＦＰ一時登録汎用(26, "第五軍弩兵", 15, 5, ii2, 5513);
		}
	}
	if (ii2 == 29)
	{
		if (ＧＦ[332] == 1)
		{
			Ｃ行動変更(0, 1344, ii2);
			ＦＰ固定登録(25, 1344, ii2);
			ＦＰ一時登録汎用(21, "サテラ親衛隊", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(22, "サテラ親衛隊", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(23, "サテラ親衛隊", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(24, "サテラ親衛隊", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(26, "サテラ親衛隊", 10, 29, ii2, 937);
		}
		if (ＧＦ[332] == 2)
		{
			Ｃ行動変更(0, 1343, ii2);
			ＦＰ固定登録(25, 1343, ii2);
			ＦＰ一時登録汎用(21, "メガラス奇襲隊", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(22, "メガラス奇襲隊", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(23, "メガラス奇襲隊", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(24, "メガラス奇襲隊", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(26, "メガラス奇襲隊", 10, 29, ii2, 937);
		}
		if (ＧＦ[332] == 3)
		{
			Ｃ行動変更(0, 1313, ii2);
			ＦＰ固定登録(25, 1313, ii2);
			ＦＰ一時登録汎用(21, "ハウゼル強襲隊", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(22, "ハウゼル強襲隊", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(23, "ハウゼル強襲隊", 10, 27, ii2, 937);
			ＦＰ一時登録汎用(24, "ハウゼル強襲隊", 10, 29, ii2, 937);
			ＦＰ一時登録汎用(26, "ハウゼル強襲隊", 10, 29, ii2, 937);
		}
	}
	if (ii2 == 3)
	{
		if (ＧＦ[6] == 1)
		{
			Ｃ行動変更(0, 1055, ii2);
			Ｃ兵数補充(300, 1055, ii2);
			ＦＰ固定登録(22, 1055, ii2);
		}
		if (ＧＦ[6] == 2)
		{
			Ｃ行動変更(0, 1053, ii2);
			Ｃ兵数補充(300, 1053, ii2);
			ＦＰ固定登録(22, 1053, ii2);
		}
		if (ＧＦ[6] == 3)
		{
			Ｃ行動変更(0, 1054, ii2);
			Ｃ兵数補充(300, 1054, ii2);
			ＦＰ固定登録(22, 1054, ii2);
		}
		if (ＧＦ[6] == 4)
		{
			Ｃ行動変更(0, 1056, ii2);
			Ｃ兵数補充(300, 1056, ii2);
			ＦＰ固定登録(22, 1056, ii2);
		}
		if (ＧＦ[6] == 1 || ＧＦ[6] == 2 || ＧＦ[6] == 3 || ＧＦ[6] == 4)
		{
			ＦＰ一時登録汎用(21, "武田騎馬隊", 10, 2, ii2, 5212);
			ＦＰ一時登録汎用(23, "武田騎馬隊", 10, 2, ii2, 5212);
		}
	}
	if (ii2 == 2)
	{
		if (◆特定戦闘 == 31)
		{
			ＦＰ一時登録汎用(21, "ヨシヒサの女", 1, 1, ii2, 5331);
			ＦＰ固定登録(22, 1061, ii2);
			ＦＰ一時登録汎用(23, "ヨシヒサの女", 1, 3, ii2, 5332);
		}
		if (◆特定戦闘 == 32)
		{
			ＦＰ一時登録汎用(21, "カズヒサの女", 1, 1, ii2, 5331);
			ＦＰ固定登録(22, 1062, ii2);
			ＦＰ一時登録汎用(23, "カズヒサの女", 1, 3, ii2, 5332);
		}
		if (◆特定戦闘 == 33)
		{
			ＦＰ一時登録汎用(21, "トシヒサの女", 1, 1, ii2, 5331);
			ＦＰ固定登録(22, 1063, ii2);
			ＦＰ一時登録汎用(23, "トシヒサの女", 1, 3, ii2, 5332);
		}
		if (◆特定戦闘 == 34)
		{
			ＦＰ一時登録汎用(21, "イエヒサの女", 1, 1, ii2, 5331);
			ＦＰ固定登録(22, 1064, ii2);
			ＦＰ一時登録汎用(23, "イエヒサの女", 1, 3, ii2, 5332);
		}
		if (◆特定戦闘 == 35)
		{
			ＦＰ固定登録(22, 1076, ii2);
		}
		if (iim == 28 && ＡＣ(1020, 9999) == 1 && ◆特定戦闘 == 0)
		{
			ＦＰ固定登録(21, 1184, 0);
			ＦＰ固定登録(22, 1020, 0);
			ＦＰ固定登録(24, 1185, 0);
		}
		if (◆攻防タイプ == 2 && ◆ルート == 20 && EV("傾国／魔軍参加", -2147483648) == false && Ｃ行動取得(1074, ii2) == 0 && RAND(2) == 1)
		{
			ＦＰ固定登録(22, 1074, ii2);
			ＦＰ一時登録汎用(21, "湿度８７％", 1, 28, ii2, 937);
			gs[0][21].技能 = 137;
			ＦＰ一時登録汎用(23, "読書禁止令", 1, 28, ii2, 937);
			gs[0][23].技能 = 137;
			if (Ｃ行動取得(1199, ii) == 0)
			{
				ＦＰ固定登録(24, 1199, ii2);
			}
			ＦＰ一時登録汎用(25, "ジョニー", 1, 29, ii2, 937);
			gs[0][25].技能 = 137;
			ＦＰ一時登録汎用(26, "マイケル", 1, 29, ii2, 937);
			gs[0][26].技能 = 137;
		}
		if (◆ルート == 60)
		{
			ra = RAND(3);
			if (ra == 1 && 敵Ｃ確認(ii2, 1018, 0, 0, 0) == 1 && Ｃ行動取得(1018, ii2) == 0)
			{
				ＦＰ固定登録(21, 1018, ii2);
			}
			if (ra == 1 && 敵Ｃ確認(ii2, 1017, 0, 0, 0) == 1 && Ｃ行動取得(1017, ii2) == 0)
			{
				ＦＰ固定登録(21, 1017, ii2);
			}
			if (ra == 1 && 敵Ｃ確認(ii2, 1003, 0, 0, 0) == 1 && Ｃ行動取得(1003, ii2) == 0)
			{
				ＦＰ固定登録(21, 1003, ii2);
			}
		}
	}
	aa = 0;
	if (ii2 == 11 && ＧＦ[17] == 1)
	{
		aa = 1;
	}
	if (ii2 == 12 && ＧＦ[18] == 1)
	{
		aa = 1;
	}
	if (ii2 == 16 && ＧＦ[23] == 1)
	{
		aa = 1;
	}
	if (ii2 == 5 && ＧＦ[19] == 1)
	{
		aa = 1;
	}
	if (ii2 == 4 && ＧＦ[22] == 1)
	{
		aa = 1;
	}
	if (ii2 == 3 && ＧＦ[20] == 1)
	{
		aa = 1;
	}
	if (ii2 == 19 && ＧＦ[21] == 1)
	{
		aa = 1;
	}
	if (aa == 1)
	{
		for (loop = 21; loop < 27; loop++)
		{
			ＧＳ初期化(ii, loop);
		}
	}
	if (EV("犬飼／蜘蛛弾正登場", -2147483648) == true && EV("犬飼／合戦後／蜘蛛弾正", -2147483648) == false && ◆◆ == 3)
	{
		ＦＰ一時登録専用(26, 1179, 11);
	}
	if (◆攻防タイプ == 1 && ＧＦ[496] == 1 && EV("セラクロラス／捕獲", -2147483648) == false && ◆◆ == 3 && ＧＦ[496] == 1)
	{
		ＦＰ一時登録専用(26, 1446, 11);
		if (ＧＦ[502] > 0 && ＧＦ[502] < 99999)
		{
			gs[0][26].兵数 = ＧＦ[502];
		}
	}
label0:
	if (RAND(4) == 1)
	{
		▲武士 = 兵種別キャラ数(ii2, 1, 1);
		▲足軽 = 兵種別キャラ数(ii2, 3, 1);
		▲弓兵 = 兵種別キャラ数(ii2, 5, 1);
		▲巫女 = 兵種別キャラ数(ii2, 9, 1);
		▲軍師 = 兵種別キャラ数(ii2, 13, 1);
		▲陰陽 = 兵種別キャラ数(ii2, 8, 1);
		▲忍者 = 兵種別キャラ数(ii2, 6, 1);
		rr = RAND(13);
		if (rr == 1 && ▲足軽 > 1)
		{
			敵ＦＰ定番編成(ii2, 0, 3, 0, 0, 3, 0);
		}
		if (rr == 2 && ▲武士 > 1 && ▲足軽 > 0)
		{
			敵ＦＰ定番編成(ii2, 1, 3, 1, 0, 0, 0);
		}
		if (rr == 3 && ▲足軽 > 0 && ▲弓兵 > 2)
		{
			敵ＦＰ定番編成(ii2, 3, 0, 0, 5, 5, 5);
		}
		if (rr == 4 && ▲忍者 > 2)
		{
			敵ＦＰ定番編成(ii2, 6, 0, 6, 0, 6, 0);
		}
		if (rr == 5 && ▲武士 > 0 && ▲足軽 > 0 && ▲軍師 > 0 && ▲巫女 > 0)
		{
			敵ＦＰ定番編成(ii2, 1, 3, 0, 0, 13, 9);
		}
		if (rr == 6 && ▲足軽 > 0 && ▲武士 > 0 && ▲忍者 > 0 && ▲軍師 > 0 && ▲弓兵 > 0)
		{
			敵ＦＰ定番編成(ii2, 3, 1, 6, 0, 13, 5);
		}
		if (rr == 7 && ▲武士 > 1 && ▲巫女 > 0)
		{
			敵ＦＰ定番編成(ii2, 0, 1, 1, 0, 9, 0);
		}
		if (rr == 8 && ▲足軽 > 0 && ▲忍者 > 2)
		{
			敵ＦＰ定番編成(ii2, 0, 3, 0, 6, 6, 6);
		}
		if (rr == 9 && ▲足軽 > 1 && ▲陰陽 > 1)
		{
			敵ＦＰ定番編成(ii2, 0, 3, 0, 8, 3, 8);
		}
		if (rr == 10 && ▲足軽 > 2 && ▲陰陽 > 2)
		{
			敵ＦＰ定番編成(ii2, 3, 0, 3, 8, 8, 8);
		}
		if (rr > 10 && ▲軍師 > 0)
		{
			敵ＦＰ定番編成(ii2, 0, 0, 0, 0, 13, 0);
		}
	}
	▲参加数 = 0;
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].番号 != 0)
		{
			▲参加数++;
		}
	}
	for (loop = 1; loop < 5; loop++)
	{
		for (iic = 21; iic < 27; iic++)
		{
			if (gs[ii][iic].番号 != 0)
			{
				continue;
			}
			if (▲参加数 >= ▲参加数上限)
			{
				continue;
			}
			iic2 = 乱キャラ取得(ii2, 0, 1);
			if (iic2 == 0)
			{
				continue;
			}
			if (gs[ii2][iic2].番号 == 0 || gs[ii2][iic2].行動 == 1)
			{
				continue;
			}
			▲兵種 = gs[ii2][iic2].兵種;
			▲兵数 = gs[ii2][iic2].兵数;
			aa = 118 - loop * 20;
			if (必死 == 1 && loop > 2)
			{
				aa = 10;
			}
			aa = 倍率計算関数(gs[ii2][iic2].兵数最大, aa);
			if (gs[ii2][iic2].兵数 < aa)
			{
				continue;
			}
			if (iic < 24 && (▲兵種 == 9 || ▲兵種 == 8 || ▲兵種 == 13 || ▲兵種 == 5))
			{
				continue;
			}
			if (iic > 23 && (▲兵種 == 1 || ▲兵種 == 4))
			{
				continue;
			}
			ＦＰ固定登録(iic, iic2, ii2);
			▲参加数++;
		}
	}
	if (◆攻防タイプ == 1 && ii2 == 2 && EV("魔軍／魔物参入", -2147483648) == true)
	{
		if (gs[0][21].番号 == 0)
		{
			ＦＰ一時登録専用(21, 1183, ii2);
			▲参加数++;
		}
		if (gs[0][22].番号 == 0)
		{
			ＦＰ一時登録専用(22, 1183, ii2);
			▲参加数++;
		}
		if (gs[0][23].番号 == 0)
		{
			ＦＰ一時登録専用(23, 1183, ii2);
			▲参加数++;
		}
		if (gs[0][24].番号 == 0)
		{
			ＦＰ一時登録専用(24, 1185, ii2);
			▲参加数++;
		}
		if (gs[0][25].番号 == 0)
		{
			ＦＰ一時登録専用(25, 1185, ii2);
			▲参加数++;
		}
		if (gs[0][26].番号 == 0)
		{
			ＦＰ一時登録専用(26, 1185, ii2);
			▲参加数++;
		}
	}
	if (◆攻防タイプ == 1 && ▲参加数 < 3)
	{
		if (gs[0][21].番号 == 0)
		{
			ＦＰ一時登録専用(21, 1193, ii2);
			▲参加数++;
		}
		if (gs[0][22].番号 == 0)
		{
			ＦＰ一時登録専用(22, 1193, ii2);
			▲参加数++;
		}
		if (gs[0][23].番号 == 0)
		{
			ＦＰ一時登録専用(23, 1193, ii2);
			▲参加数++;
		}
	}
	if (◆攻防タイプ == 2 && ▲参加数 < 3)
	{
		LOG_TADA("　" + 勢力[ii2].名前 + "は、攻め込んだのに部隊不足で撤退（" + string(▲参加数) + "）\n");
		return 0;
	}
	if (▲参加数 == 0)
	{
		return 0;
	}
	return 1;
}

lint 敵ＦＰ定番編成(lint ii2, lint a1, lint a2, lint a3, lint a4, lint a5, lint a6)
{
	lint aa = 0;
	lint ▲参加数 = 0;
	if (a1 != 0)
	{
		aa = 敵ＦＰ定番編成／内部(ii2, 21, a1);
		▲参加数 += aa;
	}
	if (a2 != 0)
	{
		aa = 敵ＦＰ定番編成／内部(ii2, 22, a2);
		▲参加数 += aa;
	}
	if (a3 != 0)
	{
		aa = 敵ＦＰ定番編成／内部(ii2, 23, a3);
		▲参加数 += aa;
	}
	if (a4 != 0)
	{
		aa = 敵ＦＰ定番編成／内部(ii2, 24, a4);
		▲参加数 += aa;
	}
	if (a5 != 0)
	{
		aa = 敵ＦＰ定番編成／内部(ii2, 25, a5);
		▲参加数 += aa;
	}
	if (a6 != 0)
	{
		aa = 敵ＦＰ定番編成／内部(ii2, 26, a6);
		▲参加数 += aa;
	}
	return ▲参加数;
}

lint 敵ＦＰ定番編成／内部(lint ii2, lint iic, lint 兵種)
{
	lint ii = 0;
	lint iic2 = 0;
	iic2 = 乱キャラ取得(ii2, 兵種, 1);
	if (iic2 == 0)
	{
		return 0;
	}
	Ｃ兵数補充(◆ターン * 4, iic2, ii2);
	ＦＰ固定登録(iic, iic2, ii2);
	return 1;
}

lint ＦＰ要害難易度調整(lint iim, lint 位置)
{
	lint ii = 0;
	lint iic = 0;
	LOG_TADA("　　固定的難易度調整・・・（" + string(国[iim].要害[位置]) + "％）\n");
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].番号 != 0)
		{
			gs[ii][iic].兵数 = gs[ii][iic].兵数最大;
			gs[ii][iic].兵数 = 倍率計算関数(gs[ii][iic].兵数, 国[iim].要害[位置]);
			LOG_TADA("　　　＠　" + gs[ii][iic].名前 + "　" + string(gs[ii][iic].兵数) + "／" + string(gs[ii][iic].兵数最大) + "\n");
		}
	}
	return 1;
}

lint ＦＰ要害難易度変更(lint iim, lint 位置)
{
	lint ii = 0;
	lint iic = 0;
	lint ▲総数 = 0;
	lint ▲残数 = 0;
	lint ▲倍率 = 0;
	lint aa = 0;
	if (ＧＦ[84] != 0)
	{
		国[iim].要害[位置] -= 5;
		return 1;
	}
	for (iic = 21; iic < 27; iic++)
	{
		▲総数 += gs[ii][iic].兵数最大;
		▲残数 += gs[ii][iic].兵数;
	}
	▲倍率 = ％取得関数(▲総数, ▲残数);
	aa = 国[iim].要害[位置] - ▲倍率;
	aa = aa / 2;
	▲倍率 = 国[iim].要害[位置] - aa;
	if (▲倍率 < 20)
	{
		▲倍率 = 20;
	}
	国[iim].要害[位置] = ▲倍率;
	return 1;
}

lint ＦＰ固定登録(lint iic, lint iic2, lint ii2)
{
	lint ii = 0;
	if (gs[ii][iic].番号 != 0)
	{
		return 0;
	}
	if (ii2 != 0)
	{
		if (iic2 > 999)
		{
			iic2 = ＧＳ番号取得(iic2, ii2);
		}
		if (iic2 == 0)
		{
			return 0;
		}
		if (gs[ii2][iic2].配備 == 1)
		{
			return 0;
		}
		gs[ii2][iic2].行動 = 1;
		上限加算関数(gs[ii2][iic2].Ｓ体力最大 / 5, gs[ii2][iic2].Ｓ体力, gs[ii2][iic2].Ｓ体力最大);
		上限加算関数(gs[ii2][iic2].兵数最大 / 5, gs[ii2][iic2].兵数, gs[ii2][iic2].兵数最大);
		gs[ii][iic] = gs[ii2][iic2];
		gs[ii][iic].ＡＡ = ii2;
		gs[ii][iic].ＢＢ = iic2;
		return 1;
	}
	固有武将登録(ii, iic, iic2, 0);
	return 1;
}

void ＦＰ一時登録専用(lint ▲配置番号, lint ▲キャラ番号, lint ▲組織番号)
{
	固有武将登録(0, 1, ▲キャラ番号, ▲組織番号);
	gs[0][▲配置番号] = gs[0][1];
	LOG_TADA("　ＦＰ一時登録専用　" + gs[0][1].名前 + "　（" + string(▲配置番号) + "）\n");
}

void ＦＰ一時登録汎用(lint ▲配置番号, string ▲名前, lint ▲性別, lint ▲兵種, lint ▲組織番号, lint ▲ＣＧ)
{
	キャラ生成(▲組織番号, ▲兵種, 1, ▲名前, ▲性別);
	gs[0][1].ＣＧ = ▲ＣＧ;
	gs[0][▲配置番号] = gs[0][1];
}

lint 敵ＦＰ参加条件(lint ch, lint ii2)
{
	lint iic = 0;
	iic = ＧＳ番号取得(ch, ii2);
	if (敵ＦＰ確認(ch, 0, 0, 0) == 0 && 敵Ｃ確認(ii2, ch, 0, 0, 0) == 1 && Ｃ兵数率(ch, ii2) > 50 && Ｃ行動取得(ch, ii2) == 0 && Ｃ配備取得(ch, ii2) == 0)
	{
		return 1;
	}
	return 0;
}

lint 敵ＦＰ強制登録(lint a21, lint a22, lint a23, lint a24, lint a25, lint a26)
{
	lint loop = 0;
	lint loop2 = 0;
	lint iic = 0;
	lint ra = 0;
	lint ▲最終 = 0;
	lint ▲参加数 = 0;
	lint ▲兵種 = 0;
	lint ▲兵数 = 0;
	for (loop = 21; loop < 27; loop++)
	{
		ＧＳ初期化(0, loop);
	}
	if (a21 != 0)
	{
		固有武将登録(0, 21, a21, 0);
	}
	if (a22 != 0)
	{
		固有武将登録(0, 22, a22, 0);
	}
	if (a23 != 0)
	{
		固有武将登録(0, 23, a23, 0);
	}
	if (a24 != 0)
	{
		固有武将登録(0, 24, a24, 0);
	}
	if (a25 != 0)
	{
		固有武将登録(0, 25, a25, 0);
	}
	if (a26 != 0)
	{
		固有武将登録(0, 26, a26, 0);
	}
	return 0;
}

void 敵ＦＰレベルアップ(lint aa)
{
	lint iic = 0;
	lint ii = 0;
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].番号 != 0)
		{
			gs[ii][iic].Ｓレベル += aa;
			Ｓ体力計算(ii, iic);
		}
	}
}

void 敵ＦＰ兵力全回復()
{
	lint iic = 0;
	lint ii = 0;
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].番号 != 0)
		{
			gs[ii][iic].兵数 = gs[ii][iic].兵数最大;
		}
	}
}

void 敵ＦＰ難易度調整()
{
	lint iic = 0;
	lint aa = 0;
	lint ii = 0;
	if (ＧＦ[84] == 0)
	{
		return;
	}
	aa = 120;
	if (ＧＦ[84] == 2)
	{
		aa = 150;
	}
	if (ＧＦ[84] == 3)
	{
		aa = 200;
	}
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].番号 != 0 && gs[ii][iic].ＡＡ == 0)
		{
			gs[ii][iic].兵数最大 = 倍率計算関数(gs[ii][iic].兵数最大, aa);
			if (gs[ii][iic].兵数最大 > 99999)
			{
				gs[ii][iic].兵数最大 = 99999;
			}
		}
	}
}

void 敵ＦＰ戻し(int ii2)
{
	lint ▲勢力 = 0;
	lint ▲キャラ = 0;
	lint ii = 0;
	lint iic = 0;
	ii = 0;
	for (iic = 21; iic < 27; iic++)
	{
		if (gs[ii][iic].ＡＡ != 0)
		{
			▲勢力 = gs[ii][iic].ＡＡ;
			▲キャラ = gs[ii][iic].ＢＢ;
			if (gs[ii][iic].技セット == 1)
			{
				Ｃ技セット変更(ii, iic, 0);
			}
			gs[▲勢力][▲キャラ] = gs[ii][iic];
			gs[▲勢力][▲キャラ].ＡＡ = 0;
			gs[▲勢力][▲キャラ].ＢＢ = 0;
			if (gs[▲勢力][▲キャラ].兵数 == 0)
			{
				gs[▲勢力][▲キャラ].兵数 = 1;
			}
			if (gs[▲勢力][▲キャラ].兵種 == 25 && gs[▲勢力][▲キャラ].兵数 < 50)
			{
				gs[▲勢力][▲キャラ].兵数 = 50;
				gs[▲勢力][▲キャラ].兵数最大 = 50;
			}
		}
	}
}

string 文字列／戦場配置(lint aa)
{
	if (aa == 11 || aa == 21)
	{
		return "左前";
	}
	if (aa == 12 || aa == 22)
	{
		return "中前";
	}
	if (aa == 13 || aa == 23)
	{
		return "右前";
	}
	if (aa == 14 || aa == 24)
	{
		return "左後";
	}
	if (aa == 15 || aa == 25)
	{
		return "中後";
	}
	if (aa == 16 || aa == 26)
	{
		return "右後";
	}
	return "？？";
}

string 文字列／地域コマンド(lint aa)
{
	if (aa == 1)
	{
		return "お宝探し";
	}
	if (aa == 2)
	{
		return "美女捜し";
	}
	if (aa == 3)
	{
		return "武将捜し";
	}
	if (aa == 4)
	{
		return "国力開発";
	}
	if (aa == 5)
	{
		return "防衛開発";
	}
	if (aa == 6)
	{
		return "迷宮探索";
	}
	if (aa == 7)
	{
		return "破壊工作";
	}
	if (aa == 8)
	{
		return "宣戦布告";
	}
	if (aa == 9)
	{
		return "降伏勧告";
	}
	if (aa == 10)
	{
		return "貢ぎ物要求";
	}
	return "";
}

string 文字列／技能(lint aa)
{
	if (aa == 1)
	{
		return "探索";
	}
	if (aa == 2)
	{
		return "交渉";
	}
	if (aa == 5)
	{
		return "兵数";
	}
	return "";
}

string 文字列／兵種(int aa)
{
	if (aa == 1)
	{
		return "武士";
	}
	if (aa == 2)
	{
		return "騎馬";
	}
	if (aa == 3)
	{
		return "足軽";
	}
	if (aa == 4)
	{
		return "鉄砲";
	}
	if (aa == 5)
	{
		return "弓兵";
	}
	if (aa == 6)
	{
		return "忍者";
	}
	if (aa == 7)
	{
		return "僧兵";
	}
	if (aa == 8)
	{
		return "陰陽";
	}
	if (aa == 9)
	{
		return "巫女";
	}
	if (aa == 10)
	{
		return "親衛";
	}
	if (aa == 11)
	{
		return "魔法";
	}
	if (aa == 12)
	{
		return "砲兵";
	}
	if (aa == 13)
	{
		return "軍師";
	}
	if (aa == 20)
	{
		return "動物";
	}
	if (aa == 21)
	{
		return "妖怪";
	}
	if (aa == 22)
	{
		return "魔物";
	}
	if (aa == 23)
	{
		return "ハニ";
	}
	if (aa == 24)
	{
		return "農民";
	}
	if (aa == 25)
	{
		return "魂縛";
	}
	if (aa == 27 || aa == 28 || aa == 29 || aa == 31)
	{
		return "魔物";
	}
	if (aa == 34)
	{
		return "リ騎";
	}
	if (aa == 60)
	{
		return "ＡＬ";
	}
	if (aa == 61)
	{
		return "闘将";
	}
	if (aa == 62)
	{
		return "黒騎";
	}
	if (aa == 63)
	{
		return "旗本";
	}
	if (aa == 64)
	{
		return "将軍";
	}
	if (aa == 65)
	{
		return "弓聖";
	}
	if (aa == 66)
	{
		return "上忍";
	}
	if (aa == 67)
	{
		return "賢者";
	}
	if (aa == 68)
	{
		return "魔戦";
	}
	if (aa == 69)
	{
		return "天騎";
	}
	if (aa == 70)
	{
		return "魔騎";
	}
	if (aa == 71)
	{
		return "竜騎";
	}
	if (aa == 72)
	{
		return "騎鉄";
	}
	if (aa == 73)
	{
		return "黒騎";
	}
	if (aa == 74)
	{
		return "闘神";
	}
	if (aa == 76)
	{
		return "機械";
	}
	if (aa == 91)
	{
		return "偽天";
	}
	if (aa == 92)
	{
		return "カク";
	}
	if (aa == 93)
	{
		return "怪獣";
	}
	if (aa == 94)
	{
		return "怪獣";
	}
	if (aa == 95)
	{
		return "怪獣";
	}
	if (aa == 96)
	{
		return "怪獣";
	}
	if (aa == 97)
	{
		return "天使";
	}
	if (aa == 98)
	{
		return "第１級神";
	}
	if (aa == 102)
	{
		return "魔機";
	}
	if (aa == 103)
	{
		return "男壁";
	}
	return "？？";
}

string 文字列／職種(int aa)
{
	if (aa == 35)
	{
		return "武士";
	}
	if (aa == 36)
	{
		return "鉄砲";
	}
	if (aa == 37)
	{
		return "弓士";
	}
	if (aa == 38)
	{
		return "忍者";
	}
	if (aa == 39)
	{
		return "僧侶";
	}
	if (aa == 40)
	{
		return "陰陽";
	}
	if (aa == 41)
	{
		return "巫女";
	}
	if (aa == 42)
	{
		return "騎士";
	}
	if (aa == 43)
	{
		return "魔法";
	}
	if (aa == 44)
	{
		return "技師";
	}
	if (aa == 45)
	{
		return "軍師";
	}
	if (aa == 34)
	{
		return "戦士";
	}
	if (aa == 60)
	{
		return "ＡＬ";
	}
	if (aa == 61)
	{
		return "闘将";
	}
	if (aa == 62)
	{
		return "騎士";
	}
	if (aa == 46)
	{
		return "動物";
	}
	if (aa == 47)
	{
		return "妖怪";
	}
	if (aa == 48)
	{
		return "魔物";
	}
	if (aa == 52)
	{
		return "使徒";
	}
	if (aa == 51)
	{
		return "魔人";
	}
	if (aa == 50)
	{
		return "魔王";
	}
	if (aa == 49)
	{
		return "一般";
	}
	if (aa == 61)
	{
		return "闘将";
	}
	if (aa == 74)
	{
		return "闘神";
	}
	if (aa == 75)
	{
		return "神　";
	}
	if (aa == 76)
	{
		return "機械";
	}
	if (aa == 93)
	{
		return "怪獣";
	}
	if (aa == 94)
	{
		return "怪獣";
	}
	if (aa == 95)
	{
		return "怪獣";
	}
	if (aa == 96)
	{
		return "怪獣";
	}
	if (aa == 97)
	{
		return "天使";
	}
	if (aa == 98)
	{
		return "第１級神";
	}
	if (aa == 99)
	{
		return "悪魔";
	}
	if (aa == 100)
	{
		return "第２級神";
	}
	if (aa == 101)
	{
		return "勇者";
	}
	if (aa == 102)
	{
		return "魔機";
	}
	if (aa == 103)
	{
		return "男壁";
	}
	return "？？";
}

string 文字列／関係(int aa1)
{
	if (aa1 == 5)
	{
		return "愛情";
	}
	if (aa1 == 4)
	{
		return "信頼";
	}
	if (aa1 == 3)
	{
		return "普通";
	}
	if (aa1 == 2)
	{
		return "険悪";
	}
	return "";
}

string 文字列／施設(int aa1)
{
	if (aa1 == 1)
	{
		return "砦　";
	}
	if (aa1 == 2)
	{
		return "屋敷";
	}
	if (aa1 == 3)
	{
		return "城　";
	}
	if (aa1 == 4)
	{
		return "要害";
	}
	return "";
}

string 文字列／ルート(int aa1)
{
	if (aa1 == 0)
	{
		return "正史（確定前）";
	}
	if (aa1 == 1)
	{
		return "正史";
	}
	if (aa1 == 10)
	{
		return "謙信";
	}
	if (aa1 == 20)
	{
		return "五十六";
	}
	if (aa1 == 30)
	{
		return "蘭";
	}
	if (aa1 == 40)
	{
		return "鈴女";
	}
	if (aa1 == 60)
	{
		return "魔王";
	}
	return "";
}

string 文字列／最高指揮官(int aa1)
{
	if (aa1 == 0)
	{
		return "信長";
	}
	if (aa1 == 1)
	{
		return "香姫";
	}
	if (aa1 == 2)
	{
		return "ランス";
	}
	return "";
}

