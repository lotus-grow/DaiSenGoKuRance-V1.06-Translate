tagNumberList::tagNumberList()
{
}

void tagNumberList::create(int nCount)
{
	if (!this.m_anList.Empty())
	{
		this.m_anList.Free();
	}
	if (!this.m_anBackup.Empty())
	{
		this.m_anBackup.Free();
	}
	this.m_anList.Alloc(nCount);
	this.m_anBackup.Alloc(nCount);
	this.clear(0);
}

void tagNumberList::clear(int nMode)
{
	int cnt = this.m_anList.Numof();
	if (nMode == 1)
	{
		this.m_anList.Fill(0, cnt, -1);
	}
	else if (nMode == 2)
	{
		this.m_anBackup.Fill(0, cnt, -1);
	}
	else
	{
		this.m_anList.Fill(0, cnt, -1);
		this.m_anBackup.Fill(0, cnt, -1);
	}
}

void tagNumberList::backup(bool bClear)
{
	int cnt = this.m_anList.Numof();
	this.m_anBackup.Copy(0, this.m_anList, 0, cnt);
	if (bClear)
	{
		this.clear(1);
	}
}

void tagNumberList::restore(bool bClear)
{
	int cnt = this.m_anList.Numof();
	this.m_anList.Copy(0, this.m_anBackup, 0, cnt);
	if (bClear)
	{
		this.clear(2);
	}
}

bool tagNumberList::add(int nNo)
{
	int idx = this.search(nNo);
	if (idx >= 0)
	{
		return true;
	}
	int cnt = this.getCount();
	if (cnt >= this.m_anList.Numof())
	{
		return false;
	}
	this.m_anList[cnt] = nNo;
	return true;
}

bool tagNumberList::del(int nNo)
{
	int idx = this.search(nNo);
	if (idx < 0)
	{
		return false;
	}
	int i = 0;
	int cnt = this.m_anList.Numof();
	for (i = idx; i < cnt - 1; ++i)
	{
		this.m_anList[i] = this.m_anList[i + 1];
	}
	this.m_anList[cnt - 1] = -1;
	return true;
}

bool tagNumberList::change(int nNo1, int nNo2)
{
	int idx1 = this.search(nNo1);
	int idx2 = this.search(nNo2);
	if (idx1 < 0 || idx2 < 0 || idx1 == idx2)
	{
		return false;
	}
	this.m_anList[idx1] <=> this.m_anList[idx2];
	return true;
}

bool tagNumberList::set(int nIndex, int nNo)
{
	int cnt = this.m_anList.Numof();
	if (cnt <= 0)
	{
		return false;
	}
	if (nIndex >= cnt)
	{
		return false;
	}
	if (nIndex < 0)
	{
		nIndex = cnt - 1;
	}
	this.m_anList[nIndex] = nNo;
	return true;
}

bool tagNumberList::ins(int nIndex, int nNo)
{
	if (this.search(nNo) >= 0)
	{
		return false;
	}
	if (this.getCount() >= this.m_anList.Numof())
	{
		return false;
	}
	int i = 0;
	int cnt = this.m_anList.Numof();
	if (cnt <= 0)
	{
		return false;
	}
	if (nIndex >= cnt)
	{
		return false;
	}
	if (nIndex < 0)
	{
		nIndex = cnt - 1;
	}
	for (i = cnt - 1; i > nIndex; --i)
	{
		this.m_anList[i] = this.m_anList[i - 1];
	}
	this.m_anList[nIndex] = nNo;
	return true;
}

int tagNumberList::getCount()
{
	int i = 0;
	int cnt = this.m_anList.Numof();
	int nRet = 0;
	for (i = 0; i < cnt; ++i)
	{
		if (this.m_anList[i] < 0)
		{
			break;
		}
		++nRet;
	}
	return nRet;
}

int tagNumberList::get(int nIndex)
{
	int cnt = this.m_anList.Numof();
	if (cnt <= 0)
	{
		return -1;
	}
	if (nIndex >= cnt)
	{
		return -1;
	}
	if (nIndex < 0)
	{
		nIndex = cnt - 1;
	}
	return this.m_anList[nIndex];
}

int tagNumberList::getIndex(int nNo)
{
	return this.search(nNo);
}

bool tagNumberList::isExist(int nNo)
{
	return this.search(nNo) >= 0;
}

int tagNumberList::search(int nNo)
{
	if (nNo < 0)
	{
		return -1;
	}
	int i = 0;
	int cnt = this.m_anList.Numof();
	for (i = 0; i < cnt; ++i)
	{
		if (this.m_anList[i] == nNo)
		{
			return i;
		}
	}
	return -1;
}

