void シナリオテスト()
{
	音楽(1, 0, false);
	while (true)
	{
		MENU_ADD(2, "てすと／プロローグ", NULL);
		MENU_ADD(3, "てすと／国", NULL);
		MENU_ADD(1, "てすと／キャラ", NULL);
		MENU_ADD(5, "てすと／システム", NULL);
		MENU_ADD(6, "てすと／正史", NULL);
		MENU_ADD(8, "てすと／蘭ルート", NULL);
		MENU_ADD(9, "てすと／五十六ルート", NULL);
		MENU_ADD(10, "てすと／謙信ルート", NULL);
		MENU_ADD(7, "てすと／地域", NULL);
		MENU_ADD(12, "てすと／地域２", NULL);
		MENU_ADD(15, "追加イベント", NULL);
		MENU_ADD(16, "追加イベント２", NULL);
		MENU_ADD(17, "追加イベント３", NULL);
		MENU_ADD(18, "追加イベント４", NULL);
		MENU_ADD(20, "追加イベント５", NULL);
		MENU_ADD(21, "追加イベント６", NULL);
		MENU_ADD(22, "追加イベント７", NULL);
		MENU_ADD(23, "追加イベント８", NULL);
		MENU_ADD(11, "朱雀がどーん", NULL);
		MENU_ADD(13, "プロローグ（仮）", NULL);
		MENU_ADD(14, "エンディング関連", NULL);
		MENU_ADD(4, "てすと／とり", NULL);
		MENU_ADD(19, "館", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				テスト／キャラ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				テスト／プロローグ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				テスト／国();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				テスト／とり();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				テスト／システム();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				テスト／正史();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				テスト／地域();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				テスト／蘭ルート();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				テスト／五十六ルート();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				テスト／謙信ルート();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				テスト／朱雀();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				テスト／地域２();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				テスト／プロローグ仮();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				テスト／エンド();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				テスト／追加();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				テスト／追加２();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				テスト／追加３();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				テスト／追加４();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				館＿メイン();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				テスト／追加５();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				テスト／追加６();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				テスト／追加７();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				テスト／追加８();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／追加()
{
	while (true)
	{
		MENU_ADD(1, "織田／３Ｇに矢", NULL);
		MENU_ADD(2, "織田／３Ｇと餅", NULL);
		MENU_ADD(3, "乱丸／合戦前／汎用２", NULL);
		MENU_ADD(4, "川之江譲／合戦前／汎用２", NULL);
		MENU_ADD(5, "神原昌示／勧誘成功", NULL);
		MENU_ADD(6, "五十六／太郎の死１", NULL);
		MENU_ADD(7, "五十六／太郎の死２", NULL);
		MENU_ADD(8, "織田／盆踊り／初", NULL);
		MENU_ADD(9, "織田／盆踊り／汎用", NULL);
		MENU_ADD(10, "織田／盆踊り／シィル", NULL);
		MENU_ADD(11, "織田／盆踊り／香", NULL);
		MENU_ADD(12, "織田／盆踊り／五十六", NULL);
		MENU_ADD(13, "織田／盆踊り／謙信", NULL);
		MENU_ADD(14, "織田／盆踊り／蘭", NULL);
		MENU_ADD(15, "織田／盆踊り／彰炎", NULL);
		MENU_ADD(16, "織田／盆踊り／３Ｇ", NULL);
		MENU_ADD(17, "織田／盆踊り／鈴女", NULL);
		MENU_ADD(18, "織田／タクガ全員", NULL);
		MENU_ADD(19, "織田／上杉全員", NULL);
		MENU_ADD(20, "織田／足利全員", NULL);
		MENU_ADD(21, "織田／ＡＡ全員", NULL);
		MENU_ADD(22, "織田／種子島全員", NULL);
		MENU_ADD(23, "織田／天志教全員", NULL);
		MENU_ADD(24, "織田／毛利全員", NULL);
		MENU_ADD(25, "織田／独眼流全員", NULL);
		MENU_ADD(26, "織田／徳川全員", NULL);
		MENU_ADD(27, "織田／武田全員", NULL);
		MENU_ADD(28, "織田／島津全員", NULL);
		MENU_ADD(30, "織田／ゼス全員", NULL);
		MENU_ADD(31, "織田／リーザス全員", NULL);
		MENU_ADD(32, "発禁堕山／雪", NULL);
		MENU_ADD(33, "早雲／エロ教育", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				織田／３Ｇに矢();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				織田／３Ｇと餅();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				乱丸／合戦前／汎用２();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				川之江譲／合戦前／汎用２();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				神原昌示／勧誘成功();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				五十六／太郎の死１();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				五十六／太郎の死２();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／初();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／汎用();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／シィル();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／香();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／五十六();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／謙信();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／蘭();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／彰炎();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／３Ｇ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				織田／盆踊り／鈴女();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				織田／タクガ全員();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				織田／上杉全員();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				織田／足利全員();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				織田／ＡＡ全員();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				織田／種子島全員();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				織田／天志教全員();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				織田／毛利全員();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				織田／独眼流全員();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				織田／徳川全員();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				織田／武田全員();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				織田／島津全員();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				織田／ゼス全員();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				織田／リーザス全員();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				発禁堕山／雪();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				早雲／エロ教育();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／追加２()
{
	while (true)
	{
		MENU_ADD(1, "種子島／降伏受け入れ", NULL);
		MENU_ADD(2, "なにわ／梅田地下街／クリア", NULL);
		MENU_ADD(3, "佐渡／佐渡金山／クリア", NULL);
		MENU_ADD(4, "ＭＡＺＯ／ＳＭ迷宮／クリア", NULL);
		MENU_ADD(5, "上総／里見帝国／クリア", NULL);
		MENU_ADD(6, "江戸／魔界都市／クリア", NULL);
		MENU_ADD(7, "丹波／丹波鉱山／クリア", NULL);
		MENU_ADD(8, "戦艦長門／ビキニ観賞／クリア", NULL);
		MENU_ADD(9, "蜜柑／蜜柑農園／クリア", NULL);
		MENU_ADD(10, "美濃／まむし油田／クリア", NULL);
		MENU_ADD(11, "姫路／虎の穴／クリア", NULL);
		MENU_ADD(12, "出雲／黄泉平坂／クリア", NULL);
		MENU_ADD(13, "傾国／謙信を倒す", NULL);
		MENU_ADD(14, "五十六／基本接触／足利滅亡前", NULL);
		MENU_ADD(15, "天志教／和睦の提案Ａ", NULL);
		MENU_ADD(16, "天志教／和睦の提案Ｂ", NULL);
		MENU_ADD(17, "貝／貝塚／クリア", NULL);
		MENU_ADD(18, "武田／織田に宣戦布告／五十六ルート", NULL);
		MENU_ADD(19, "毛利／織田に宣戦布告／五十六ルート", NULL);
		MENU_ADD(20, "鈴女／種付け／五十六ルート", NULL);
		MENU_ADD(21, "蘭／種付け／五十六ルート", NULL);
		MENU_ADD(22, "謙信／種付け／五十六ルート", NULL);
		MENU_ADD(23, "川之江美禰／合戦前／汎用２", NULL);
		MENU_ADD(24, "天志教／和睦の提案Ｃ", NULL);
		MENU_ADD(25, "魔導／登場／例外", NULL);
		MENU_ADD(26, "戯骸／登場／例外", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				種子島／降伏受け入れ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				なにわ／梅田地下街／クリア();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				佐渡／佐渡金山／クリア();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				ＭＡＺＯ／ＳＭ迷宮／クリア();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				上総／里見帝国／クリア();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				江戸／魔界都市／クリア();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				丹波／丹波鉱山／クリア();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				戦艦長門／ビキニ観賞／クリア();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				蜜柑／蜜柑農園／クリア();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				美濃／まむし油田／クリア();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				姫路／虎の穴／クリア();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				出雲／黄泉平坂／クリア();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				傾国／謙信を倒す();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				五十六／基本接触／足利滅亡前();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				天志教／和睦の提案Ａ();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				天志教／和睦の提案Ｂ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				貝／貝塚／クリア();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				武田／織田に宣戦布告／五十六ルート();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				毛利／織田に宣戦布告／五十六ルート();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				鈴女／種付け／五十六ルート();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				蘭／種付け／五十六ルート();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				謙信／種付け／五十六ルート();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／合戦前／汎用２();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				天志教／和睦の提案Ｃ();
				天志教／降伏受け入れ();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				魔導／登場／例外();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				戯骸／登場／例外();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／追加３()
{
	while (true)
	{
		MENU_ADD(1, "出雲／黄泉平坂／だいだーら／入り口", NULL);
		MENU_ADD(2, "出雲／黄泉平坂／だいだーら", NULL);
		MENU_ADD(3, "信長ｖｓ馬場／ソロ", NULL);
		MENU_ADD(4, "謙信ｖｓ織田馬場Ａ", NULL);
		MENU_ADD(5, "謙信ｖｓ織田馬場Ｂ", NULL);
		MENU_ADD(6, "謙信ｖｓ１点", NULL);
		MENU_ADD(7, "謙信ｖｓ２点", NULL);
		MENU_ADD(8, "謙信／基本接触／教本", NULL);
		MENU_ADD(9, "謙信／基本接触／祈り", NULL);
		MENU_ADD(10, "美濃／まむし油田／早雲探し", NULL);
		MENU_ADD(11, "迷宮／脱出／早雲探し", NULL);
		MENU_ADD(12, "夕張／初エッチ／香姫無し", NULL);
		MENU_ADD(13, "傾国／魔軍参加", NULL);
		MENU_ADD(14, "３Ｇ／合戦待った", NULL);
		MENU_ADD(15, "石爺／鈴女の飴", NULL);
		MENU_ADD(16, "石爺／鈴女の飴／汎用", NULL);
		MENU_ADD(17, "部下会話／汎用女キャラ子供／普通に", NULL);
		MENU_ADD(18, "部下会話／汎用女キャラ婆／普通に", NULL);
		MENU_ADD(19, "部下会話／汎用女キャラ子供／信頼に", NULL);
		MENU_ADD(20, "部下会話／汎用女キャラ婆／信頼に", NULL);
		MENU_ADD(21, "部下会話／汎用女キャラ子供／信頼汎用", NULL);
		MENU_ADD(22, "部下会話／汎用女キャラ婆／信頼汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				出雲／黄泉平坂／だいだーら／入り口();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				出雲／黄泉平坂／だいだーら();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ馬場／ソロ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ織田馬場Ａ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ織田馬場Ｂ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ１点();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ２点();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				謙信／基本接触／教本();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				謙信／基本接触／祈り();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				美濃／まむし油田／早雲探し();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				迷宮／脱出／早雲探し();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				夕張／初エッチ／香姫無し();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				傾国／魔軍参加();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				３Ｇ／合戦待った();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				石爺／鈴女の飴();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				石爺／鈴女の飴／汎用();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ子供／普通に();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ婆／普通に();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ子供／信頼に();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ婆／信頼に();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ子供／信頼汎用();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ婆／信頼汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／追加４()
{
	while (true)
	{
		MENU_ADD(1, "上杉／瓢箪献上", NULL);
		MENU_ADD(2, "足利／瓢箪献上", NULL);
		MENU_ADD(3, "明石／瓢箪献上", NULL);
		MENU_ADD(4, "石爺／美樹が見つからないので", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				上杉／瓢箪献上();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				足利／瓢箪献上();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				明石／瓢箪献上();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				石爺／美樹が見つからないので();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／追加５()
{
	while (true)
	{
		MENU_ADD(1, "ランス／夢", NULL);
		MENU_ADD(2, "早雲／のぞき", NULL);
		MENU_ADD(3, "透琳／大陸の事", NULL);
		MENU_ADD(4, "きく／香", NULL);
		MENU_ADD(5, "てる／子狸", NULL);
		MENU_ADD(6, "高坂／鈴女１", NULL);
		MENU_ADD(7, "高坂／鈴女２", NULL);
		MENU_ADD(8, "高坂／鈴女３", NULL);
		MENU_ADD(9, "言裏／香", NULL);
		MENU_ADD(10, "言裏／のぞみ", NULL);
		MENU_ADD(11, "言裏／子鹿", NULL);
		MENU_ADD(12, "ランス／太古判", NULL);
		MENU_ADD(13, "元就／看病", NULL);
		MENU_ADD(14, "元就／ゴン", NULL);
		MENU_ADD(15, "龍馬／おっぱい", NULL);
		MENU_ADD(16, "超神／政宗", NULL);
		MENU_ADD(17, "３Ｇ／充電", NULL);
		MENU_ADD(18, "ランス／子狸", NULL);
		MENU_ADD(19, "ランス／島津４兄弟", NULL);
		MENU_ADD(20, "３Ｇ／成仏寸前", NULL);
		MENU_ADD(21, "勝家／子鹿", NULL);
		MENU_ADD(22, "風丸／嫉妬", NULL);
		MENU_ADD(23, "でこ対決", NULL);
		MENU_ADD(24, "政宗／禁妖怪", NULL);
		MENU_ADD(25, "重彦と柚美", NULL);
		MENU_ADD(26, "結婚／譲", NULL);
		MENU_ADD(27, "結婚／美禰", NULL);
		MENU_ADD(28, "龍馬／ゴンなし", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				ランス／夢();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				早雲／のぞき();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				透琳／大陸の事();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				きく／香();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				てる／子狸();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				高坂／鈴女１();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				高坂／鈴女２();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				高坂／鈴女３();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				言裏／香();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				言裏／のぞみ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				言裏／子鹿();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				ランス／太古判();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				元就／看病();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				元就／ゴン();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				龍馬／おっぱい();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				超神／政宗();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				３Ｇ／充電();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				ランス／子狸();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				ランス／島津４兄弟();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				３Ｇ／成仏寸前();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				勝家／子鹿();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				風丸／嫉妬();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				でこ対決();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				政宗／禁妖怪();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				重彦と柚美();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				結婚／譲();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				結婚／美禰();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				龍馬／ゴンなし();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／追加６()
{
	while (true)
	{
		MENU_ADD(1, "織田／全国トップ", NULL);
		MENU_ADD(2, "織田／全国クリア", NULL);
		MENU_ADD(3, "魔軍／全国トップ", NULL);
		MENU_ADD(4, "魔軍／全国クリア", NULL);
		MENU_ADD(5, "武田／全国トップ", NULL);
		MENU_ADD(6, "武田／全国クリア", NULL);
		MENU_ADD(7, "北条／全国トップ", NULL);
		MENU_ADD(8, "北条／全国クリア", NULL);
		MENU_ADD(9, "上杉／全国トップ", NULL);
		MENU_ADD(10, "上杉／全国クリア", NULL);
		MENU_ADD(11, "島津／全国トップ", NULL);
		MENU_ADD(12, "島津／全国クリア", NULL);
		MENU_ADD(13, "巫女機関／全国トップ", NULL);
		MENU_ADD(14, "巫女機関／全国クリア", NULL);
		MENU_ADD(15, "ＡＡ／全国トップ", NULL);
		MENU_ADD(16, "ＡＡ／全国クリア", NULL);
		MENU_ADD(17, "種子島／全国トップ", NULL);
		MENU_ADD(18, "種子島／全国クリア", NULL);
		MENU_ADD(19, "明石／全国トップ", NULL);
		MENU_ADD(20, "明石／全国クリア", NULL);
		MENU_ADD(21, "伊賀／全国トップ", NULL);
		MENU_ADD(22, "伊賀／全国クリア", NULL);
		MENU_ADD(23, "原／全国トップ", NULL);
		MENU_ADD(24, "原／全国クリア", NULL);
		MENU_ADD(25, "足利／全国トップ", NULL);
		MENU_ADD(26, "足利／全国クリア", NULL);
		MENU_ADD(27, "天志教／全国トップ", NULL);
		MENU_ADD(28, "天志教／全国クリア", NULL);
		MENU_ADD(29, "タクガ／全国トップ", NULL);
		MENU_ADD(30, "タクガ／全国クリア", NULL);
		MENU_ADD(31, "独眼流／全国トップ", NULL);
		MENU_ADD(32, "独眼流／全国クリア", NULL);
		MENU_ADD(33, "今川／全国トップ", NULL);
		MENU_ADD(34, "今川／全国クリア", NULL);
		MENU_ADD(35, "徳川／全国トップ", NULL);
		MENU_ADD(36, "徳川／全国クリア", NULL);
		MENU_ADD(37, "毛利／全国トップ", NULL);
		MENU_ADD(38, "毛利／全国クリア", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				織田／全国トップ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				織田／全国クリア();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				魔軍／全国トップ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				魔軍／全国クリア();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				武田／全国トップ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				武田／全国クリア();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				北条／全国トップ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				北条／全国クリア();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				上杉／全国トップ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				上杉／全国クリア();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				島津／全国トップ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				島津／全国クリア();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				巫女機関／全国トップ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				巫女機関／全国クリア();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／全国トップ();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／全国クリア();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				種子島／全国トップ();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				種子島／全国クリア();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				明石／全国トップ();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				明石／全国クリア();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				伊賀／全国トップ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				伊賀／全国クリア();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				原／全国トップ();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				原／全国クリア();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				足利／全国トップ();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				足利／全国クリア();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				天志教／全国トップ();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				天志教／全国クリア();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				タクガ／全国トップ();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				タクガ／全国クリア();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				独眼流／全国トップ();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				独眼流／全国クリア();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				今川／全国トップ();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				今川／全国クリア();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				徳川／全国トップ();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				徳川／全国クリア();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				毛利／全国トップ();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				毛利／全国クリア();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／追加７()
{
	while (true)
	{
		MENU_ADD(1, "籐吉郎／殺す", NULL);
		MENU_ADD(2, "猿殺し／クリア", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				籐吉郎／殺す();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				猿殺し／クリア();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／追加８()
{
	while (true)
	{
		MENU_ADD(1, "月光／登場", NULL);
		MENU_ADD(2, "月光／信頼", NULL);
		MENU_ADD(3, "月光／伊賀が敵", NULL);
		MENU_ADD(4, "月光／お町", NULL);
		MENU_ADD(5, "月光／信長の死", NULL);
		MENU_ADD(6, "月光／香の死", NULL);
		MENU_ADD(7, "月光／爆死", NULL);
		MENU_ADD(8, "月光／基本接触", NULL);
		MENU_ADD(9, "月光／合戦前／汎用", NULL);
		MENU_ADD(10, "志津香／登場", NULL);
		MENU_ADD(11, "志津香／０１", NULL);
		MENU_ADD(12, "志津香／０２", NULL);
		MENU_ADD(13, "志津香／０３", NULL);
		MENU_ADD(14, "志津香／基本接触", NULL);
		MENU_ADD(15, "志津香／離脱", NULL);
		MENU_ADD(16, "月光／勝家", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				月光／登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				月光／信頼();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				月光／伊賀が敵();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				月光／お町();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				月光／信長の死();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				月光／香の死();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				月光／爆死();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				月光／基本接触();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				月光／合戦前／汎用();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				志津香／登場();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				志津香／０１();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				志津香／０２();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				志津香／０３();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				志津香／基本接触();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				志津香／離脱();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				月光／勝家();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／プロローグ仮()
{
	プロローグＡ();
	プロローグＢ();
}

void テスト／朱雀()
{
	朱雀召喚();
}

void テスト／エンド()
{
	while (true)
	{
		MENU_ADD(1, "正史", NULL);
		MENU_ADD(2, "五十六", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				ラストバトルＣ();
				ＥＤムービー(true);
				ラストバトルＤ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				五十六／ラストバトルＣ();
				ＥＤムービー(true);
				五十六／エピローグ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／国()
{
	while (true)
	{
		MENU_ADD(7, "てすと／織田", NULL);
		MENU_ADD(4, "てすと／足利", NULL);
		MENU_ADD(9, "てすと／明石", NULL);
		MENU_ADD(10, "てすと／今川", NULL);
		MENU_ADD(11, "てすと／天志教", NULL);
		MENU_ADD(1, "てすと／北条", NULL);
		MENU_ADD(2, "てすと／徳川", NULL);
		MENU_ADD(3, "てすと／伊賀", NULL);
		MENU_ADD(5, "てすと／種子島", NULL);
		MENU_ADD(6, "てすと／上杉", NULL);
		MENU_ADD(8, "てすと／毛利", NULL);
		MENU_ADD(12, "てすと／タクガ", NULL);
		MENU_ADD(13, "てすと／原", NULL);
		MENU_ADD(14, "てすと／浅井朝倉", NULL);
		MENU_ADD(15, "てすと／巫女機関", NULL);
		MENU_ADD(16, "てすと／武田", NULL);
		MENU_ADD(17, "てすと／島津", NULL);
		MENU_ADD(18, "てすと／伊達", NULL);
		MENU_ADD(19, "てすと／魔人", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				テスト／北条();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				テスト／徳川();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				テスト／伊賀();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				テスト／足利();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				テスト／種子島();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				テスト／上杉();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				テスト／織田();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				テスト／毛利();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				テスト／明石();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				テスト／今川();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				テスト／天志教();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				テスト／タクガ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				テスト／原();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				テスト／浅井朝倉();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				テスト／巫女機関();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				テスト／武田();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				テスト／島津();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				テスト／伊達();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				テスト／魔人();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／キャラ()
{
	while (true)
	{
		MENU_ADD(1, "てすと／ランス", NULL);
		MENU_ADD(2, "てすと／シィル", NULL);
		MENU_ADD(3, "てすと／一休", NULL);
		MENU_ADD(4, "てすと／鈴女", NULL);
		MENU_ADD(6, "てすと／香", NULL);
		MENU_ADD(5, "てすと／超神", NULL);
		MENU_ADD(8, "てすと／魔人", NULL);
		MENU_ADD(12, "てすと／あんこ", NULL);
		MENU_ADD(13, "てすと／のぞみ", NULL);
		MENU_ADD(7, "てすと／乱丸", NULL);
		MENU_ADD(9, "てすと／五十六", NULL);
		MENU_ADD(10, "てすと／勝家", NULL);
		MENU_ADD(14, "てすと／龍馬", NULL);
		MENU_ADD(15, "てすと／譲", NULL);
		MENU_ADD(16, "てすと／美禰", NULL);
		MENU_ADD(17, "てすと／ゴン", NULL);
		MENU_ADD(18, "てすと／風丸", NULL);
		MENU_ADD(19, "てすと／レイラ", NULL);
		MENU_ADD(20, "てすと／ウルザ", NULL);
		MENU_ADD(21, "てすと／かなみ", NULL);
		MENU_ADD(22, "てすと／マジック", NULL);
		MENU_ADD(23, "てすと／マリア", NULL);
		MENU_ADD(24, "てすと／リズナ", NULL);
		MENU_ADD(25, "てすと／健太郎", NULL);
		MENU_ADD(26, "てすと／火鉢", NULL);
		MENU_ADD(27, "てすと／阿樹", NULL);
		MENU_ADD(28, "てすと／昌示", NULL);
		MENU_ADD(29, "てすと／雪姫", NULL);
		MENU_ADD(30, "てすと／発禁", NULL);
		MENU_ADD(11, "てすと／ちぬ", NULL);
		MENU_ADD(31, "てすと／きく", NULL);
		MENU_ADD(32, "てすと／てる", NULL);
		MENU_ADD(33, "てすと／元就", NULL);
		MENU_ADD(35, "てすと／愛", NULL);
		MENU_ADD(36, "てすと／謙信", NULL);
		MENU_ADD(34, "てすと／柚美", NULL);
		MENU_ADD(37, "てすと／重彦", NULL);
		MENU_ADD(38, "てすと／蘭", NULL);
		MENU_ADD(39, "てすと／早雲", NULL);
		MENU_ADD(40, "てすと／小松", NULL);
		MENU_ADD(41, "てすと／信長", NULL);
		MENU_ADD(42, "てすと／もっこ", NULL);
		MENU_ADD(43, "てすと／アギレダ", NULL);
		MENU_ADD(44, "てすと／ヨシヒサ", NULL);
		MENU_ADD(45, "てすと／カズヒサ", NULL);
		MENU_ADD(46, "てすと／トシヒサ", NULL);
		MENU_ADD(47, "てすと／イエヒサ", NULL);
		MENU_ADD(48, "てすと／性眼", NULL);
		MENU_ADD(49, "てすと／言裏", NULL);
		MENU_ADD(50, "てすと／お町", NULL);
		MENU_ADD(51, "てすと／ノワール", NULL);
		MENU_ADD(52, "てすと／折女", NULL);
		MENU_ADD(53, "てすと／野菊", NULL);
		MENU_ADD(54, "てすと／政宗", NULL);
		MENU_ADD(55, "てすと／子鹿", NULL);
		MENU_ADD(56, "てすと／戦姫", NULL);
		MENU_ADD(57, "てすと／黒姫", NULL);
		MENU_ADD(58, "てすと／戯骸", NULL);
		MENU_ADD(59, "てすと／魔導", NULL);
		MENU_ADD(60, "てすと／かぐや姫", NULL);
		MENU_ADD(61, "てすと／まんまる", NULL);
		MENU_ADD(62, "てすと／徳川（人）", NULL);
		MENU_ADD(63, "てすと／新撰組", NULL);
		MENU_ADD(64, "てすと／犬飼", NULL);
		MENU_ADD(65, "てすと／義景", NULL);
		MENU_ADD(66, "てすと／名取", NULL);
		MENU_ADD(67, "てすと／夕張", NULL);
		MENU_ADD(68, "てすと／真田", NULL);
		MENU_ADD(69, "てすと／井伊", NULL);
		MENU_ADD(70, "てすと／服部", NULL);
		MENU_ADD(71, "てすと／榊原", NULL);
		MENU_ADD(72, "てすと／本多", NULL);
		MENU_ADD(73, "てすと／酒井", NULL);
		MENU_ADD(74, "てすと／高坂", NULL);
		MENU_ADD(75, "てすと／山県", NULL);
		MENU_ADD(76, "てすと／馬場", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				テスト／ランス();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				テスト／シィル();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				テスト／一休();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				テスト／鈴女();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				テスト／超神();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				テスト／香();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				テスト／乱丸();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				テスト／魔人();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				テスト／五十六();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				テスト／勝家();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				テスト／ちぬ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				テスト／あんこ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				テスト／のぞみ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				テスト／龍馬();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				テスト／譲();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				テスト／美禰();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				テスト／ゴン();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				テスト／風丸();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				テスト／レイラ();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				テスト／ウルザ();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				テスト／かなみ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				テスト／マジック();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				テスト／マリア();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				テスト／リズナ();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				テスト／健太郎();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				テスト／火鉢();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				テスト／阿樹();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				テスト／昌示();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				テスト／雪姫();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				テスト／発禁();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				テスト／きく();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				テスト／てる();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				テスト／元就();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				テスト／柚美();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				テスト／愛();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				テスト／謙信();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				テスト／重彦();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				テスト／蘭();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				テスト／早雲();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				テスト／小松();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				テスト／信長();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				テスト／もっこ();
				break;
			case 43:
				WP_SET_COLOR(0, 0, 0);
				テスト／アギレダ();
				break;
			case 44:
				WP_SET_COLOR(0, 0, 0);
				テスト／ヨシヒサ();
				break;
			case 45:
				WP_SET_COLOR(0, 0, 0);
				テスト／カズヒサ();
				break;
			case 46:
				WP_SET_COLOR(0, 0, 0);
				テスト／トシヒサ();
				break;
			case 47:
				WP_SET_COLOR(0, 0, 0);
				テスト／イエヒサ();
				break;
			case 48:
				WP_SET_COLOR(0, 0, 0);
				テスト／性眼();
				break;
			case 49:
				WP_SET_COLOR(0, 0, 0);
				テスト／言裏();
				break;
			case 50:
				WP_SET_COLOR(0, 0, 0);
				テスト／お町();
				break;
			case 51:
				WP_SET_COLOR(0, 0, 0);
				テスト／ノワール();
				break;
			case 52:
				WP_SET_COLOR(0, 0, 0);
				テスト／折女();
				break;
			case 53:
				WP_SET_COLOR(0, 0, 0);
				テスト／野菊();
				break;
			case 54:
				WP_SET_COLOR(0, 0, 0);
				テスト／政宗();
				break;
			case 55:
				WP_SET_COLOR(0, 0, 0);
				テスト／子鹿();
				break;
			case 56:
				WP_SET_COLOR(0, 0, 0);
				テスト／戦姫();
				break;
			case 57:
				WP_SET_COLOR(0, 0, 0);
				テスト／黒姫();
				break;
			case 58:
				WP_SET_COLOR(0, 0, 0);
				テスト／戯骸();
				break;
			case 59:
				WP_SET_COLOR(0, 0, 0);
				テスト／魔導();
				break;
			case 60:
				WP_SET_COLOR(0, 0, 0);
				テスト／かぐや姫();
				break;
			case 61:
				WP_SET_COLOR(0, 0, 0);
				テスト／まんまる();
				break;
			case 62:
				WP_SET_COLOR(0, 0, 0);
				テスト／徳川２();
				break;
			case 63:
				WP_SET_COLOR(0, 0, 0);
				テスト／新撰組();
				break;
			case 64:
				WP_SET_COLOR(0, 0, 0);
				テスト／犬飼();
				break;
			case 65:
				WP_SET_COLOR(0, 0, 0);
				テスト／義景();
				break;
			case 66:
				WP_SET_COLOR(0, 0, 0);
				テスト／名取();
				break;
			case 67:
				WP_SET_COLOR(0, 0, 0);
				テスト／夕張();
				break;
			case 68:
				WP_SET_COLOR(0, 0, 0);
				テスト／真田();
				break;
			case 69:
				WP_SET_COLOR(0, 0, 0);
				テスト／井伊();
				break;
			case 70:
				WP_SET_COLOR(0, 0, 0);
				テスト／服部();
				break;
			case 71:
				WP_SET_COLOR(0, 0, 0);
				テスト／榊原();
				break;
			case 72:
				WP_SET_COLOR(0, 0, 0);
				テスト／本多();
				break;
			case 73:
				WP_SET_COLOR(0, 0, 0);
				テスト／酒井();
				break;
			case 74:
				WP_SET_COLOR(0, 0, 0);
				テスト／高坂();
				break;
			case 75:
				WP_SET_COLOR(0, 0, 0);
				テスト／山県();
				break;
			case 76:
				WP_SET_COLOR(0, 0, 0);
				テスト／馬場();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／香()
{
	while (true)
	{
		MENU_ADD(1, "香姫／行方不明", NULL);
		MENU_ADD(2, "香姫／助ける", NULL);
		MENU_ADD(3, "香姫／行方不明／汎用", NULL);
		MENU_ADD(4, "香姫／レイプのフォロー", NULL);
		MENU_ADD(5, "香姫／信長の心配汎用", NULL);
		MENU_ADD(6, "香姫を襲う", NULL);
		MENU_ADD(7, "織田／信長抹殺計画／汎用", NULL);
		MENU_ADD(8, "香姫／総大将ですから", NULL);
		MENU_ADD(9, "香姫／婿捜し", NULL);
		MENU_ADD(10, "香姫／兄ランス", NULL);
		MENU_ADD(11, "香姫／本陣に現れた信長", NULL);
		MENU_ADD(12, "香姫／倒れる", NULL);
		MENU_ADD(13, "香姫／マジックと", NULL);
		MENU_ADD(14, "香姫／行かず後家", NULL);
		MENU_ADD(16, "香姫／信長の心配２汎用", NULL);
		MENU_ADD(17, "香姫／信長の心配３汎用", NULL);
		MENU_ADD(18, "香姫／信長の心配４汎用", NULL);
		MENU_ADD(19, "香姫／美樹暴走中", NULL);
		MENU_ADD(20, "香姫／領内の散歩", NULL);
		MENU_ADD(21, "香姫／信長の小遣い", NULL);
		MENU_ADD(22, "香姫／２章汎用", NULL);
		MENU_ADD(23, "香姫／成長１", NULL);
		MENU_ADD(24, "香姫／成長２", NULL);
		MENU_ADD(25, "香姫／２章その１", NULL);
		MENU_ADD(26, "香姫／２章その２", NULL);
		MENU_ADD(27, "香姫／２章その３", NULL);
		MENU_ADD(28, "香姫／２章その４", NULL);
		MENU_ADD(29, "香姫／日常会話汎用", NULL);
		MENU_ADD(30, "香姫／行方不明／時間切れ", NULL);
		MENU_ADD(31, "香姫／出陣", NULL);
		MENU_ADD(32, "香姫／ランスの異変１", NULL);
		MENU_ADD(33, "香姫／ランスの異変２", NULL);
		MENU_ADD(34, "香姫／パーティ", NULL);
		MENU_ADD(35, "香姫／疲れて寝ているＡ", NULL);
		MENU_ADD(36, "香姫／疲れて寝ているＢ", NULL);
		MENU_ADD(37, "香姫／疲れて寝ているＣ", NULL);
		MENU_ADD(38, "香姫／お風呂", NULL);
		MENU_ADD(39, "香姫／本能寺前汎用", NULL);
		MENU_ADD(40, "香姫／３章Ａ汎用", NULL);
		MENU_ADD(41, "香姫／３章Ｂ汎用", NULL);
		MENU_ADD(42, "香姫／戦死", NULL);
		MENU_ADD(43, "香姫／後半時間経過", NULL);
		MENU_ADD(44, "香姫／氷漬け後／汎用", NULL);
		MENU_ADD(45, "香姫／作戦許可書中止", NULL);
		MENU_ADD(46, "香姫／守り紙様", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				香姫／行方不明();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				香姫／助ける();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				香姫／行方不明／汎用();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				香姫／レイプのフォロー();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				香姫／信長の心配汎用();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				香姫を襲う();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				織田／信長抹殺計画／汎用();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				香姫／総大将ですから();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				香姫／婿捜し();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				香姫／兄ランス();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				香姫／本陣に現れた信長();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				香姫／倒れる();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				香姫／マジックと();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				香姫／行かず後家();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				香姫／信長の心配２汎用();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				香姫／信長の心配３汎用();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				香姫／信長の心配４汎用();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				香姫／美樹暴走中();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				香姫／領内の散歩();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				香姫／信長の小遣い();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				香姫／２章汎用();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				香姫／成長１();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				香姫／成長２();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				香姫／２章その１();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				香姫／２章その２();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				香姫／２章その３();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				香姫／２章その４();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				香姫／日常会話汎用();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				香姫／行方不明／時間切れ();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				香姫／出陣();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				香姫／ランスの異変１();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				香姫／ランスの異変２();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				香姫／パーティ();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				香姫／疲れて寝ているＡ();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				香姫／疲れて寝ているＢ();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				香姫／疲れて寝ているＣ();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				香姫／お風呂();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				香姫／本能寺前汎用();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				香姫／３章Ａ汎用();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				香姫／３章Ｂ汎用();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				香姫／戦死();
				break;
			case 43:
				WP_SET_COLOR(0, 0, 0);
				香姫／後半時間経過();
				break;
			case 44:
				WP_SET_COLOR(0, 0, 0);
				香姫／氷漬け後／汎用();
				break;
			case 45:
				WP_SET_COLOR(0, 0, 0);
				香姫／作戦許可書中止();
				break;
			case 46:
				WP_SET_COLOR(0, 0, 0);
				香姫／守り紙様();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／鈴女()
{
	while (true)
	{
		MENU_ADD(1, "鈴女／登場", NULL);
		MENU_ADD(2, "鈴女／武将に", NULL);
		MENU_ADD(3, "鈴女／部下会話／初", NULL);
		MENU_ADD(5, "鈴女／部下会話／愛情に", NULL);
		MENU_ADD(6, "鈴女／大奥１回目", NULL);
		MENU_ADD(8, "鈴女／大奥性欲絶倫", NULL);
		MENU_ADD(9, "鈴女／大奥分身の術", NULL);
		MENU_ADD(10, "鈴女／犬飼の情報", NULL);
		MENU_ADD(11, "鈴女／伊賀合戦", NULL);
		MENU_ADD(12, "鈴女／汎用エッチ", NULL);
		MENU_ADD(13, "鈴女／基本接触", NULL);
		MENU_ADD(14, "鈴女／迷宮ヒント", NULL);
		MENU_ADD(15, "鈴女／倒れる", NULL);
		MENU_ADD(16, "鈴女／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				鈴女／登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				鈴女／武将に();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				鈴女／部下会話／初();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				鈴女／部下会話／愛情に();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				鈴女／大奥１回目();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				鈴女／大奥性欲絶倫();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				鈴女／大奥分身の術();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				鈴女／犬飼の情報();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				鈴女／伊賀合戦();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				鈴女／汎用エッチ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				鈴女／基本接触();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				鈴女／迷宮ヒント();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				鈴女／倒れる();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				鈴女／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／シィル()
{
	while (true)
	{
		MENU_ADD(1, "シィル／部下会話１", NULL);
		MENU_ADD(2, "シィル／部下会話汎用", NULL);
		MENU_ADD(3, "シィル／大奥１", NULL);
		MENU_ADD(4, "シィル／大奥２", NULL);
		MENU_ADD(5, "シィル／大奥３", NULL);
		MENU_ADD(6, "シィル／大奥４", NULL);
		MENU_ADD(7, "シィル／大奥０", NULL);
		MENU_ADD(8, "シィル／汎用会話２", NULL);
		MENU_ADD(9, "シィル／基本接触", NULL);
		MENU_ADD(10, "シィル／日常１", NULL);
		MENU_ADD(11, "シィル／日常２", NULL);
		MENU_ADD(12, "シィル／日常３", NULL);
		MENU_ADD(13, "シィル／日常４", NULL);
		MENU_ADD(14, "シィル／誕生日", NULL);
		MENU_ADD(15, "シィル／温泉", NULL);
		MENU_ADD(16, "シィル／セーラ服エロ", NULL);
		MENU_ADD(17, "シィル／氷１Ａ", NULL);
		MENU_ADD(18, "シィル／氷１Ｂ", NULL);
		MENU_ADD(19, "シィル／氷１Ｃ", NULL);
		MENU_ADD(20, "シィル／氷１Ｄ", NULL);
		MENU_ADD(21, "シィル／氷１Ｅ", NULL);
		MENU_ADD(22, "シィル／氷１Ｆ", NULL);
		MENU_ADD(23, "シィル／氷２Ａ", NULL);
		MENU_ADD(24, "シィル／氷２Ｂ", NULL);
		MENU_ADD(25, "シィル／氷２Ｃ", NULL);
		MENU_ADD(26, "シィル／氷３", NULL);
		MENU_ADD(27, "シィル／基本接触／氷", NULL);
		MENU_ADD(28, "シィル／セーラ服エロ　２", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				シィル／部下会話１();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				シィル／部下会話汎用();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				シィル／大奥１();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				シィル／大奥２();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				シィル／大奥３();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				シィル／大奥４();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				シィル／大奥０();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				シィル／汎用会話２();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				シィル／基本接触();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				シィル／日常１();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				シィル／日常２();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				シィル／日常３();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				シィル／日常４();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				シィル／誕生日();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				シィル／温泉();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				シィル／セーラ服エロ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷１Ａ();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷１Ｂ();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷１Ｃ();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷１Ｄ();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷１Ｅ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷１Ｆ();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷２Ａ();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷２Ｂ();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷２Ｃ();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				シィル／氷３();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				シィル／基本接触／氷();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				▲数値 = 1;
				シィル／セーラ服エロ();
				▲数値 = 0;
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／ランス()
{
	while (true)
	{
		MENU_ADD(1, "ランス／部下会話汎用", NULL);
		MENU_ADD(2, "ランス／援軍要請Ａ", NULL);
		MENU_ADD(3, "ランス／援軍要請Ｂ", NULL);
		MENU_ADD(4, "ランス／援軍要請汎用", NULL);
		MENU_ADD(5, "ランス／ひらめき１", NULL);
		MENU_ADD(6, "ランス／ひらめき２", NULL);
		MENU_ADD(7, "ランス／ひらめき３", NULL);
		MENU_ADD(8, "ランス／ひらめき４", NULL);
		MENU_ADD(9, "ランス／汎用会話２", NULL);
		MENU_ADD(10, "ランス／部下会話汎用３", NULL);
		MENU_ADD(11, "ランス／魂縛りの戦況", NULL);
		MENU_ADD(12, "ランス／コマンド回数", NULL);
		MENU_ADD(13, "ランス隊が精鋭に", NULL);
		MENU_ADD(14, "ランス／傍若無人１", NULL);
		MENU_ADD(15, "ランス／傍若無人２", NULL);
		MENU_ADD(16, "ランス／傍若無人３", NULL);
		MENU_ADD(17, "臨時徴収１", NULL);
		MENU_ADD(18, "ランス／貝塚でうはうは１", NULL);
		MENU_ADD(19, "ランス／貝塚でうはうは２", NULL);
		MENU_ADD(20, "ランス／貝塚でうはうは３", NULL);
		MENU_ADD(21, "ランス／戦死／シィル", NULL);
		MENU_ADD(22, "ランス／戦死／鈴女", NULL);
		MENU_ADD(23, "ランス／コマンド回数／シィル無し", NULL);
		MENU_ADD(24, "ランス／合戦後の刺客１Ａ", NULL);
		MENU_ADD(25, "ランス／合戦後の刺客１Ｂ", NULL);
		MENU_ADD(26, "ランス／合戦後の刺客２Ａ", NULL);
		MENU_ADD(27, "ランス／合戦後の刺客２Ｂ", NULL);
		MENU_ADD(28, "ランス／合戦後の刺客３Ａ", NULL);
		MENU_ADD(29, "ランス／合戦後の刺客３Ｂ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				ランス／部下会話汎用();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				ランス／援軍要請Ａ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				ランス／援軍要請Ｂ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				ランス／援軍要請汎用();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				ランス／ひらめき１();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				ランス／ひらめき２();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				ランス／ひらめき３();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				ランス／ひらめき４();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				ランス／汎用会話２();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				ランス／部下会話汎用３();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				ランス／魂縛りの戦況();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				ランス／コマンド回数();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				ランス隊が精鋭に();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				ランス／傍若無人１();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				ランス／傍若無人２();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				ランス／傍若無人３();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				臨時徴収１();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				ランス／貝塚でうはうは１();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				ランス／貝塚でうはうは２();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				ランス／貝塚でうはうは３();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				ランス／戦死／シィル();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				ランス／戦死／鈴女();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				ランス／コマンド回数／シィル無し();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				ランス／合戦後の刺客１Ａ();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				ランス／合戦後の刺客１Ｂ();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				ランス／合戦後の刺客２Ａ();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				ランス／合戦後の刺客２Ｂ();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				ランス／合戦後の刺客３Ａ();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				ランス／合戦後の刺客３Ｂ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／のぞみ()
{
	while (true)
	{
		MENU_ADD(1, "のぞみ／新撰組１", NULL);
		MENU_ADD(2, "のぞみ／新撰組２", NULL);
		MENU_ADD(3, "のぞみ／新撰組３", NULL);
		MENU_ADD(4, "のぞみ／京で遊ぶ", NULL);
		MENU_ADD(5, "のぞみ／武将に取り立てる", NULL);
		MENU_ADD(6, "のぞみ／武将初", NULL);
		MENU_ADD(7, "のぞみ／信頼", NULL);
		MENU_ADD(8, "のぞみ／ハードエロ", NULL);
		MENU_ADD(9, "のぞみ／基本接触", NULL);
		MENU_ADD(10, "のぞみ／ハードプレイ１", NULL);
		MENU_ADD(14, "のぞみ／ハードプレイ２", NULL);
		MENU_ADD(15, "のぞみ／ハードプレイ３", NULL);
		MENU_ADD(16, "のぞみ／ハードプレイ４", NULL);
		MENU_ADD(11, "のぞみ／愛情", NULL);
		MENU_ADD(12, "のぞみ／合戦前／汎用", NULL);
		MENU_ADD(13, "のぞみ／基本接触／愛情", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／新撰組１();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／新撰組２();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／新撰組３();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／京で遊ぶ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／武将に取り立てる();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／武将初();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／信頼();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／ハードエロ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／基本接触();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／ハードプレイ();
				のぞみ／ハードプレイ１();
				のぞみ／ハードプレイ終わり();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／愛情();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／合戦前／汎用();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／基本接触／愛情();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／ハードプレイ();
				のぞみ／ハードプレイ２();
				のぞみ／ハードプレイ終わり();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／ハードプレイ();
				のぞみ／ハードプレイ３();
				のぞみ／ハードプレイ終わり();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				のぞみ／ハードプレイ();
				のぞみ／ハードプレイ４();
				のぞみ／ハードプレイ終わり();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／あんこ()
{
	while (true)
	{
		MENU_ADD(1, "あんこ／奴隷大奥１回目", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				あんこ／奴隷大奥１回目();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／乱丸()
{
	while (true)
	{
		MENU_ADD(1, "乱丸／信頼", NULL);
		MENU_ADD(2, "乱丸／基本接触", NULL);
		MENU_ADD(3, "乱丸／ランス口説く１", NULL);
		MENU_ADD(4, "乱丸／勝家と戦場", NULL);
		MENU_ADD(5, "乱丸／ランスが口説く２", NULL);
		MENU_ADD(6, "乱丸／着替え", NULL);
		MENU_ADD(7, "乱丸／結婚の決意", NULL);
		MENU_ADD(8, "乱丸／勝家ゲット", NULL);
		MENU_ADD(9, "乱丸／基本接触／勝家", NULL);
		MENU_ADD(10, "乱丸／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				乱丸／信頼();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				乱丸／基本接触();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				乱丸／ランス口説く１();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				乱丸／勝家と戦場();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				乱丸／ランスが口説く２();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				乱丸／着替え();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				乱丸／結婚の決意();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				乱丸／勝家ゲット();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				乱丸／基本接触／勝家();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				乱丸／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／五十六()
{
	while (true)
	{
		MENU_ADD(1, "五十六／登場", NULL);
		MENU_ADD(2, "五十六／ランス狙撃", NULL);
		MENU_ADD(3, "五十六／足利家の軍議", NULL);
		MENU_ADD(4, "五十六／１回目の敗走", NULL);
		MENU_ADD(5, "五十六／超神にいびられる", NULL);
		MENU_ADD(6, "五十六／勧誘成功", NULL);
		MENU_ADD(7, "五十六／山本家の村", NULL);
		MENU_ADD(8, "五十六／求婚者の列", NULL);
		MENU_ADD(9, "五十六／２人の仲間", NULL);
		MENU_ADD(10, "五十六／信頼", NULL);
		MENU_ADD(11, "五十六／初エッチ", NULL);
		MENU_ADD(12, "五十六／汎用エッチ", NULL);
		MENU_ADD(13, "五十六／合戦前／エッチ後", NULL);
		MENU_ADD(14, "五十六／基本接触／お寺", NULL);
		MENU_ADD(15, "五十六／基本接触／神社", NULL);
		MENU_ADD(16, "五十六／守り紙様", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				五十六／登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				五十六／ランス狙撃();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				五十六／足利家の軍議();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				五十六／１回目の敗走();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				五十六／超神にいびられる();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				五十六／勧誘成功();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				五十六／山本家の村();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				五十六／求婚者の列();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				五十六／２人の仲間();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				五十六／信頼();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				五十六／初エッチ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				五十六／汎用エッチ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				五十六／合戦前／エッチ後();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				五十六／基本接触／お寺();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				五十六／基本接触／神社();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				五十六／守り紙様();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／勝家()
{
	while (true)
	{
		MENU_ADD(1, "勝家／信頼", NULL);
		MENU_ADD(2, "勝家／基本接触", NULL);
		MENU_ADD(3, "勝家／怪我治る", NULL);
		MENU_ADD(4, "勝家／友達１Ａ", NULL);
		MENU_ADD(5, "勝家／友達１Ｂ", NULL);
		MENU_ADD(6, "勝家／友達１Ｃ", NULL);
		MENU_ADD(7, "勝家／友達２Ａ", NULL);
		MENU_ADD(8, "勝家／友達２Ｂ", NULL);
		MENU_ADD(9, "勝家／友達２Ｃ", NULL);
		MENU_ADD(10, "勝家と香姫Ａ", NULL);
		MENU_ADD(11, "勝家と香姫Ｂ", NULL);
		MENU_ADD(12, "勝家と香姫Ｃ", NULL);
		MENU_ADD(13, "勝家／基本接触／香姫", NULL);
		MENU_ADD(14, "勝家／基本接触／乱丸", NULL);
		MENU_ADD(15, "勝家／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				勝家／信頼();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				勝家／基本接触();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				勝家／怪我治る();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				勝家／友達１Ａ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				勝家／友達１Ｂ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				勝家／友達１Ｃ();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				勝家／友達２Ａ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				勝家／友達２Ｂ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				勝家／友達２Ｃ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				勝家と香姫Ａ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				勝家と香姫Ｂ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				勝家と香姫Ｃ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				勝家／基本接触／香姫();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				勝家／基本接触／乱丸();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				勝家／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／龍馬()
{
	while (true)
	{
		MENU_ADD(1, "龍馬／勧誘成功", NULL);
		MENU_ADD(2, "龍馬／信頼", NULL);
		MENU_ADD(3, "龍馬／妖怪なめくじ情報", NULL);
		MENU_ADD(4, "龍馬／妖怪なめくじＡ", NULL);
		MENU_ADD(5, "龍馬／妖怪なめくじＢ", NULL);
		MENU_ADD(6, "龍馬／男になる", NULL);
		MENU_ADD(7, "龍馬／女になる", NULL);
		MENU_ADD(8, "龍馬／女になってから", NULL);
		MENU_ADD(9, "龍馬／ランスとエッチ", NULL);
		MENU_ADD(10, "龍馬／基本接触", NULL);
		MENU_ADD(11, "龍馬／香姫１", NULL);
		MENU_ADD(12, "龍馬／香姫２", NULL);
		MENU_ADD(13, "龍馬／香姫３", NULL);
		MENU_ADD(14, "龍馬／ゴンを出せ", NULL);
		MENU_ADD(15, "龍馬／美禰を出せ", NULL);
		MENU_ADD(16, "龍馬／譲を出せ", NULL);
		MENU_ADD(17, "龍馬／汎用エロ", NULL);
		MENU_ADD(18, "龍馬／基本接触／エロ後", NULL);
		MENU_ADD(19, "龍馬／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				龍馬／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				龍馬／信頼();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				龍馬／妖怪なめくじ情報();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				龍馬／妖怪なめくじＡ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				龍馬／妖怪なめくじＢ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				龍馬／男になる();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				龍馬／女になる();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				龍馬／女になってから();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				龍馬／ランスとエッチ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				龍馬／基本接触();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				龍馬／香姫１();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				龍馬／香姫２();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				龍馬／香姫３();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				龍馬／ゴンを出せ();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				龍馬／美禰を出せ();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				龍馬／譲を出せ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				龍馬／汎用エロ();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				龍馬／基本接触／エロ後();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				龍馬／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／譲()
{
	while (true)
	{
		MENU_ADD(1, "川之江譲／勧誘成功", NULL);
		MENU_ADD(2, "川之江譲／普通", NULL);
		MENU_ADD(3, "川之江譲／龍馬ゲット", NULL);
		MENU_ADD(4, "川之江譲／基本接触", NULL);
		MENU_ADD(5, "川之江譲／基本接触２", NULL);
		MENU_ADD(6, "川之江譲／龍馬の意志", NULL);
		MENU_ADD(7, "川之江譲／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				川之江譲／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				川之江譲／普通();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				川之江譲／龍馬ゲット();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				川之江譲／基本接触();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				川之江譲／基本接触２();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				川之江譲／龍馬の意志();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				川之江譲／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／美禰()
{
	while (true)
	{
		MENU_ADD(1, "川之江美禰／勧誘成功", NULL);
		MENU_ADD(2, "川之江美禰／武将初", NULL);
		MENU_ADD(3, "川之江美禰／信頼", NULL);
		MENU_ADD(4, "川之江美禰／約束反故", NULL);
		MENU_ADD(5, "川之江美禰／エッチ", NULL);
		MENU_ADD(6, "川之江美禰／龍馬ゲット", NULL);
		MENU_ADD(7, "川之江美禰／基本接触", NULL);
		MENU_ADD(8, "川之江美禰／基本接触２", NULL);
		MENU_ADD(9, "川之江美禰／休憩", NULL);
		MENU_ADD(10, "川之江美禰／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／武将初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／信頼();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／約束反故();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／エッチ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／龍馬ゲット();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／基本接触();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／基本接触２();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／休憩();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				川之江美禰／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／ゴン()
{
	while (true)
	{
		MENU_ADD(1, "ゴン／勧誘成功", NULL);
		MENU_ADD(2, "ゴン／呪い付き", NULL);
		MENU_ADD(3, "ゴン／妖怪情報", NULL);
		MENU_ADD(4, "ゴン／信頼", NULL);
		MENU_ADD(5, "ゴン／基本接触", NULL);
		MENU_ADD(6, "ゴン／さようなら", NULL);
		MENU_ADD(7, "ゴン／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				ゴン／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				ゴン／呪い付き();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				ゴン／妖怪情報();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				ゴン／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				ゴン／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				ゴン／さようなら();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				ゴン／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／ちぬ()
{
	while (true)
	{
		MENU_ADD(1, "小早川／魔導の予兆１", NULL);
		MENU_ADD(2, "小早川／魔導の予兆２", NULL);
		MENU_ADD(3, "ちぬ／合戦前／毒作戦", NULL);
		MENU_ADD(4, "ちぬ／勧誘成功", NULL);
		MENU_ADD(5, "ちぬ／信頼", NULL);
		MENU_ADD(6, "ちぬ／愛情", NULL);
		MENU_ADD(7, "ちぬ／基本接触", NULL);
		MENU_ADD(8, "ちぬ／合戦前／汎用", NULL);
		MENU_ADD(9, "ちぬ／汎用エロ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				小早川／魔導の予兆１();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				小早川／魔導の予兆２();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				ちぬ／合戦前／毒作戦();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				ちぬ／勧誘成功();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				ちぬ／信頼();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				ちぬ／愛情();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				ちぬ／基本接触();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				ちぬ／合戦前／汎用();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				ちぬ／汎用エロ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／風丸()
{
	while (true)
	{
		MENU_ADD(1, "風丸／勧誘成功", NULL);
		MENU_ADD(2, "風丸／部下会話／信頼へ", NULL);
		MENU_ADD(3, "風丸／部下会話／火鉢１", NULL);
		MENU_ADD(4, "風丸／部下会話／火鉢２", NULL);
		MENU_ADD(5, "風丸／基本接触", NULL);
		MENU_ADD(6, "風丸／基本接触２", NULL);
		MENU_ADD(7, "風丸／合戦前／エロ対決", NULL);
		MENU_ADD(8, "風丸／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				風丸／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				風丸／部下会話／信頼へ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				風丸／部下会話／火鉢１();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				風丸／部下会話／火鉢２();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				風丸／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				風丸／基本接触２();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				風丸／合戦前／エロ対決();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				風丸／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／レイラ()
{
	while (true)
	{
		MENU_ADD(1, "レイラ／参上", NULL);
		MENU_ADD(2, "レイラ／信頼", NULL);
		MENU_ADD(3, "レイラ／ｖｓ謙信", NULL);
		MENU_ADD(4, "レイラ／エッチ", NULL);
		MENU_ADD(5, "レイラ／基本接触", NULL);
		MENU_ADD(6, "レイラ／捕獲される", NULL);
		MENU_ADD(7, "レイラ／陵辱", NULL);
		MENU_ADD(8, "レイラ／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				レイラ／参上();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				レイラ／信頼();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				レイラ／ｖｓ謙信();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				レイラ／エッチ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				レイラ／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				レイラ／捕獲される();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				レイラ／陵辱();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				レイラ／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／ウルザ()
{
	while (true)
	{
		MENU_ADD(1, "ウルザ／参上", NULL);
		MENU_ADD(2, "ウルザ／信頼", NULL);
		MENU_ADD(3, "ウルザ／魔法電話", NULL);
		MENU_ADD(4, "ウルザ／花火大会", NULL);
		MENU_ADD(5, "ウルザ／基本接触", NULL);
		MENU_ADD(6, "ウルザ／青姦", NULL);
		MENU_ADD(7, "ウルザ／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				ウルザ／参上();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				ウルザ／信頼();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				ウルザ／魔法電話();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				ウルザ／花火大会();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				ウルザ／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				ウルザ／青姦();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				ウルザ／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／かなみ()
{
	while (true)
	{
		MENU_ADD(1, "かなみ／参上", NULL);
		MENU_ADD(2, "かなみ／普通", NULL);
		MENU_ADD(3, "かなみ／エッチ", NULL);
		MENU_ADD(4, "かなみ／信頼", NULL);
		MENU_ADD(5, "かなみ／風魔の里で大ピンチ", NULL);
		MENU_ADD(6, "かなみ／無理矢理犯す", NULL);
		MENU_ADD(7, "かなみ／基本接触", NULL);
		MENU_ADD(8, "かなみ／いじけ", NULL);
		MENU_ADD(9, "かなみ／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				かなみ／参上();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				かなみ／普通();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				かなみ／エッチ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				かなみ／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				かなみ／風魔の里で大ピンチ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				かなみ／無理矢理犯す();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				かなみ／基本接触();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				かなみ／いじけ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				かなみ／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／マジック()
{
	while (true)
	{
		MENU_ADD(1, "マジック／参上", NULL);
		MENU_ADD(2, "マジック／武将初", NULL);
		MENU_ADD(3, "マジック／誘い", NULL);
		MENU_ADD(4, "マジック／夜這い", NULL);
		MENU_ADD(5, "マジック／ランスの愛", NULL);
		MENU_ADD(6, "マジック／基本接触", NULL);
		MENU_ADD(7, "マジック／基本接触２", NULL);
		MENU_ADD(8, "マジック／２度目のエロ", NULL);
		MENU_ADD(9, "マジック／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				マジック／参上();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				マジック／武将初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				マジック／誘い();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				マジック／夜這い();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				マジック／ランスの愛();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				マジック／基本接触();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				マジック／基本接触２();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				マジック／２度目のエロ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				マジック／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／マリア()
{
	while (true)
	{
		MENU_ADD(1, "マリア／参上", NULL);
		MENU_ADD(2, "マリア／リアからの手紙", NULL);
		MENU_ADD(3, "マリア／エッチ", NULL);
		MENU_ADD(4, "マリア／カスミの参加", NULL);
		MENU_ADD(5, "マリア／基本接触", NULL);
		MENU_ADD(6, "マリア／女神エロ", NULL);
		MENU_ADD(7, "マリア／汎用エロ", NULL);
		MENU_ADD(8, "マリア／おまもり", NULL);
		MENU_ADD(9, "マリア／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				マリア／参上();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				マリア／リアからの手紙();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				マリア／エッチ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				マリア／カスミの参加();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				マリア／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				マリア／女神エロ();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				マリア／汎用エロ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				マリア／おまもり();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				マリア／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／リズナ()
{
	while (true)
	{
		MENU_ADD(1, "リズナ／参上", NULL);
		MENU_ADD(2, "リズナ／淫欲を押さえる薬", NULL);
		MENU_ADD(3, "リズナ／薬をぱくる", NULL);
		MENU_ADD(4, "リズナ／薬が無くて困る", NULL);
		MENU_ADD(5, "リズナ／エッチ", NULL);
		MENU_ADD(6, "リズナ／基本接触", NULL);
		MENU_ADD(7, "リズナ／基本接触２", NULL);
		MENU_ADD(8, "リズナ／エッチ２", NULL);
		MENU_ADD(9, "リズナ／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				リズナ／参上();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				リズナ／淫欲を押さえる薬();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				リズナ／薬をぱくる();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				リズナ／薬が無くて困る();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				リズナ／エッチ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				リズナ／基本接触();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				リズナ／基本接触２();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				リズナ／エッチ２();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				リズナ／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／健太郎()
{
	while (true)
	{
		MENU_ADD(1, "健太郎／登場", NULL);
		MENU_ADD(2, "健太郎／合戦前", NULL);
		MENU_ADD(3, "健太郎／逃亡", NULL);
		MENU_ADD(4, "健太郎／浪人", NULL);
		MENU_ADD(5, "健太郎／茶屋での出会い", NULL);
		MENU_ADD(6, "健太郎／仕官", NULL);
		MENU_ADD(7, "健太郎／合戦前の魔王話", NULL);
		MENU_ADD(8, "健太郎／必殺技取得", NULL);
		MENU_ADD(9, "健太郎／不死", NULL);
		MENU_ADD(10, "健太郎／ランスが美樹を狙うＡ", NULL);
		MENU_ADD(11, "健太郎／ランスが美樹を狙うＢ", NULL);
		MENU_ADD(12, "健太郎／ランスが美樹を狙うＣ", NULL);
		MENU_ADD(13, "健太郎／信頼", NULL);
		MENU_ADD(14, "健太郎／美樹とカオス", NULL);
		MENU_ADD(15, "健太郎／美樹ヒラミ事件の後", NULL);
		MENU_ADD(16, "健太郎／基本接触", NULL);
		MENU_ADD(17, "健太郎／基本接触／魔人", NULL);
		MENU_ADD(18, "健太郎／大冒険／死国", NULL);
		MENU_ADD(19, "健太郎／大冒険／ＭＡＺＯ", NULL);
		MENU_ADD(20, "健太郎／大冒険／伊賀", NULL);
		MENU_ADD(21, "健太郎／大冒険／カイロ", NULL);
		MENU_ADD(22, "健太郎／合戦前／汎用", NULL);
		MENU_ADD(23, "健太郎／魔人", NULL);
		MENU_ADD(24, "健太郎／美樹苦しむ／汎用", NULL);
		MENU_ADD(25, "健太郎／美樹暴走汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				健太郎／登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				健太郎／合戦前();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				健太郎／逃亡();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				健太郎／浪人();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				健太郎／茶屋での出会い();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				健太郎／仕官();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				健太郎／合戦前の魔王話();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				健太郎／必殺技取得();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				健太郎／不死();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				健太郎／ランスが美樹を狙うＡ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				健太郎／ランスが美樹を狙うＢ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				健太郎／ランスが美樹を狙うＣ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				健太郎／信頼();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				健太郎／美樹とカオス();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				健太郎／美樹ヒラミ事件の後();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				健太郎／基本接触();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				健太郎／基本接触／魔人();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				健太郎／大冒険／死国();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				健太郎／大冒険／ＭＡＺＯ();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				健太郎／大冒険／伊賀();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				健太郎／大冒険／カイロ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				健太郎／合戦前／汎用();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				健太郎／魔人();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				健太郎／美樹苦しむ／汎用();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				健太郎／美樹暴走汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／火鉢()
{
	while (true)
	{
		MENU_ADD(1, "火鉢／ランスの命令でエッチ", NULL);
		MENU_ADD(2, "火鉢／捕まえてエッチ", NULL);
		MENU_ADD(3, "火鉢／捕まえてエッチ２", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				火鉢／ランスの命令でエッチ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				火鉢／捕まえてエッチ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				火鉢／捕まえてエッチ２();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／阿樹()
{
	while (true)
	{
		MENU_ADD(1, "阿樹／部下会話／普通へ", NULL);
		MENU_ADD(2, "阿樹／部下会話／信頼へ", NULL);
		MENU_ADD(3, "阿樹／部下エッチ１", NULL);
		MENU_ADD(4, "阿樹／奴隷大奥１回目", NULL);
		MENU_ADD(5, "阿樹／奴隷大奥２回目", NULL);
		MENU_ADD(6, "阿樹／奴隷大奥３回目", NULL);
		MENU_ADD(7, "阿樹／奴隷大奥４回目", NULL);
		MENU_ADD(8, "阿樹／部下会話／初", NULL);
		MENU_ADD(9, "阿樹／愛情に", NULL);
		MENU_ADD(10, "阿樹／基本接触", NULL);
		MENU_ADD(11, "阿樹／基本接触／愛情", NULL);
		MENU_ADD(12, "阿樹／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				阿樹／部下会話／普通へ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				阿樹／部下会話／信頼へ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				阿樹／部下エッチ１();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				阿樹／奴隷大奥１回目();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				阿樹／奴隷大奥２回目();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				阿樹／奴隷大奥３回目();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				阿樹／奴隷大奥４回目();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				阿樹／部下会話／初();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				阿樹／愛情に();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				阿樹／基本接触();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				阿樹／基本接触／愛情();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				阿樹／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／昌示()
{
	while (true)
	{
		MENU_ADD(1, "神原昌示／部下会話／信頼にＡ", NULL);
		MENU_ADD(2, "神原昌示／部下会話／信頼にＢ", NULL);
		MENU_ADD(3, "神原昌示／部下会話／信頼にＣ", NULL);
		MENU_ADD(4, "神原昌示／部下会話／悪ルート", NULL);
		MENU_ADD(5, "神原昌示／部下会話／正義ルート", NULL);
		MENU_ADD(6, "神原昌示／その後", NULL);
		MENU_ADD(7, "原昌示／基本接触", NULL);
		MENU_ADD(8, "原昌示／基本接触／正義", NULL);
		MENU_ADD(9, "原昌示／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				神原昌示／部下会話／信頼にＡ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				神原昌示／部下会話／信頼にＢ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				神原昌示／部下会話／信頼にＣ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				神原昌示／部下会話／悪ルート();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				神原昌示／部下会話／正義ルート();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				神原昌示／その後();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				原昌示／基本接触();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				原昌示／基本接触／正義();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				原昌示／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／雪姫()
{
	while (true)
	{
		MENU_ADD(1, "雪姫／脱出", NULL);
		MENU_ADD(2, "雪姫／他国家老の元へ", NULL);
		MENU_ADD(3, "雪姫／他国家老に抱かれる", NULL);
		MENU_ADD(4, "雪姫／他国家老を殺す", NULL);
		MENU_ADD(5, "雪姫／その後", NULL);
		MENU_ADD(6, "雪姫／仕官", NULL);
		MENU_ADD(7, "雪姫／武将初", NULL);
		MENU_ADD(8, "雪姫／普通Ａ", NULL);
		MENU_ADD(9, "雪姫／普通Ｂ", NULL);
		MENU_ADD(10, "雪姫／普通Ｃ", NULL);
		MENU_ADD(11, "雪姫／信頼", NULL);
		MENU_ADD(14, "雪姫／愛情", NULL);
		MENU_ADD(12, "雪姫／基本接触", NULL);
		MENU_ADD(13, "雪姫／基本接触／信頼", NULL);
		MENU_ADD(15, "雪姫／基本接触／愛情", NULL);
		MENU_ADD(16, "雪姫／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				雪姫／脱出();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				雪姫／他国家老の元へ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				雪姫／他国家老に抱かれる();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				雪姫／他国家老を殺す();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				雪姫／その後();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				雪姫／仕官();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				雪姫／武将初();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				雪姫／普通Ａ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				雪姫／普通Ｂ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				雪姫／普通Ｃ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				雪姫／信頼();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				雪姫／基本接触();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				雪姫／基本接触／信頼();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				雪姫／愛情();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				雪姫／基本接触／愛情();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				雪姫／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／発禁()
{
	while (true)
	{
		MENU_ADD(1, "発禁堕山／発見Ａ", NULL);
		MENU_ADD(2, "発禁堕山／発見Ｂ", NULL);
		MENU_ADD(3, "発禁堕山／発見Ｃ", NULL);
		MENU_ADD(4, "発禁堕山／部下会話／初", NULL);
		MENU_ADD(5, "発禁堕山／基本接触", NULL);
		MENU_ADD(6, "発禁堕山／信頼", NULL);
		MENU_ADD(7, "発禁堕山／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				発禁堕山／発見Ａ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				発禁堕山／発見Ｂ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				発禁堕山／発見Ｃ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				発禁堕山／部下会話／初();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				発禁堕山／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				発禁堕山／信頼();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				発禁堕山／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／きく()
{
	while (true)
	{
		MENU_ADD(1, "きく／勧誘成功", NULL);
		MENU_ADD(2, "きく／普通", NULL);
		MENU_ADD(3, "きく／信頼", NULL);
		MENU_ADD(4, "きく／愛情", NULL);
		MENU_ADD(5, "きく／基本接触", NULL);
		MENU_ADD(6, "きく／合戦前／汎用", NULL);
		MENU_ADD(7, "きく／基本接触／愛情", NULL);
		MENU_ADD(8, "きく／愛情２", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				きく／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				きく／普通();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				きく／信頼();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				きく／愛情();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				きく／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				きく／合戦前／汎用();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				きく／基本接触／愛情();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				きく／愛情２();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／てる()
{
	while (true)
	{
		MENU_ADD(1, "てる／妖怪退治撃退", NULL);
		MENU_ADD(2, "てる／勧誘成功", NULL);
		MENU_ADD(3, "てる／普通", NULL);
		MENU_ADD(4, "てる／信頼", NULL);
		MENU_ADD(5, "てる／愛情", NULL);
		MENU_ADD(6, "てる／基本接触", NULL);
		MENU_ADD(7, "てる／汎用エロ", NULL);
		MENU_ADD(8, "てる／基本接触／愛情", NULL);
		MENU_ADD(9, "てる／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				てる／妖怪退治撃退();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				てる／勧誘成功();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				てる／普通();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				てる／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				てる／愛情();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				てる／基本接触();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				てる／汎用エロ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				てる／基本接触／愛情();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				てる／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／元就()
{
	while (true)
	{
		MENU_ADD(1, "元就／合戦後／ｖｓランス", NULL);
		MENU_ADD(2, "元就／妖怪の秘密／竜馬", NULL);
		MENU_ADD(3, "元就／勧誘成功", NULL);
		MENU_ADD(4, "元就／武将初", NULL);
		MENU_ADD(5, "元就／老衰近し", NULL);
		MENU_ADD(6, "元就／信頼", NULL);
		MENU_ADD(7, "元就／基本接触", NULL);
		MENU_ADD(8, "元就／基本接触／幽霊", NULL);
		MENU_ADD(9, "元就／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				元就／合戦後／ｖｓランス();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				元就／妖怪の秘密／竜馬();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				元就／勧誘成功();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				元就／武将初();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				元就／老衰近し();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				元就／信頼();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				元就／基本接触();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				元就／基本接触／幽霊();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				元就／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／柚美()
{
	while (true)
	{
		MENU_ADD(1, "柚原／勧誘成功", NULL);
		MENU_ADD(2, "柚原／部下会話／普通に", NULL);
		MENU_ADD(3, "柚原／合戦前", NULL);
		MENU_ADD(4, "柚原／部下会話／信頼に", NULL);
		MENU_ADD(5, "柚原／合戦後／愛情に", NULL);
		MENU_ADD(6, "柚原／たぬーとの遭遇", NULL);
		MENU_ADD(7, "柚原／基本接触", NULL);
		MENU_ADD(8, "柚原／基本接触／愛情", NULL);
		MENU_ADD(9, "柚原／徳川家訪問", NULL);
		MENU_ADD(10, "柚原／犬飼家訪問", NULL);
		MENU_ADD(11, "柚原／種子島家の話", NULL);
		MENU_ADD(12, "柚原／子供ほしい", NULL);
		MENU_ADD(13, "柚原／基本接触／愛情２", NULL);
		MENU_ADD(14, "柚原／合戦前／汎用", NULL);
		MENU_ADD(15, "柚原／汎用エロ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				柚原／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				柚原／部下会話／普通に();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				柚原／合戦前();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				柚原／部下会話／信頼に();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				柚原／合戦後／愛情に();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				柚原／たぬーとの遭遇();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				柚原／基本接触();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				柚原／基本接触／愛情();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				柚原／徳川家訪問();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				柚原／犬飼家訪問();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				柚原／種子島家の話();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				柚原／子供ほしい();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				柚原／基本接触／愛情２();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				柚原／合戦前／汎用();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				柚原／汎用エロ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／愛()
{
	while (true)
	{
		MENU_ADD(1, "直江／謙信奪還", NULL);
		MENU_ADD(2, "直江／潜伏中を捕獲する", NULL);
		MENU_ADD(3, "直江／仕官", NULL);
		MENU_ADD(4, "直江／普通", NULL);
		MENU_ADD(5, "直江／信頼", NULL);
		MENU_ADD(6, "直江／基本接触", NULL);
		MENU_ADD(7, "直江／謙信奪還計画", NULL);
		MENU_ADD(8, "直江／愛情", NULL);
		MENU_ADD(9, "直江／基本接触／愛情", NULL);
		MENU_ADD(10, "直江／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				直江／謙信奪還();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				直江／潜伏中を捕獲する();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				直江／仕官();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				直江／普通();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				直江／信頼();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				直江／基本接触();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				直江／謙信奪還計画();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				直江／愛情();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				直江／基本接触／愛情();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				直江／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／謙信()
{
	while (true)
	{
		MENU_ADD(1, "謙信／仕官", NULL);
		MENU_ADD(2, "謙信／ランスに迫る", NULL);
		MENU_ADD(3, "謙信／信頼", NULL);
		MENU_ADD(4, "謙信／合戦前", NULL);
		MENU_ADD(5, "謙信／愛情", NULL);
		MENU_ADD(6, "謙信／基本接触", NULL);
		MENU_ADD(7, "謙信／基本接触２", NULL);
		MENU_ADD(8, "謙信／汎用エロ", NULL);
		MENU_ADD(9, "謙信／守り紙様", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				謙信／仕官();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				謙信／ランスに迫る();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				謙信／信頼();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				謙信／合戦前();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				謙信／愛情();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				謙信／基本接触();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				謙信／基本接触２();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				謙信／汎用エロ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				謙信／守り紙様();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／重彦()
{
	while (true)
	{
		MENU_ADD(1, "重彦／勧誘成功", NULL);
		MENU_ADD(2, "重彦／部下会話／普通に", NULL);
		MENU_ADD(3, "重彦／部下会話／信頼に", NULL);
		MENU_ADD(4, "重彦／鉄砲鍛冶場の建設１", NULL);
		MENU_ADD(5, "重彦／鉄砲鍛冶場の建設２", NULL);
		MENU_ADD(6, "重彦／マリアを紹介してほしい", NULL);
		MENU_ADD(7, "重彦／合戦前／汎用", NULL);
		MENU_ADD(8, "重彦／基本接触", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				重彦／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				重彦／部下会話／普通に();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				重彦／部下会話／信頼に();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				重彦／鉄砲鍛冶場の建設１();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				重彦／鉄砲鍛冶場の建設２();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				重彦／マリアを紹介してほしい();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				重彦／合戦前／汎用();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				重彦／基本接触();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／蘭()
{
	while (true)
	{
		MENU_ADD(1, "蘭／勧誘成功", NULL);
		MENU_ADD(2, "蘭／武将初", NULL);
		MENU_ADD(3, "蘭／約束", NULL);
		MENU_ADD(4, "蘭／約束の催促", NULL);
		MENU_ADD(5, "蘭／基本接触", NULL);
		MENU_ADD(6, "蘭／約束の催促１", NULL);
		MENU_ADD(7, "蘭／１人で石油穴", NULL);
		MENU_ADD(8, "蘭／守り紙様", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				蘭／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				蘭／武将初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				蘭／約束();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				蘭／約束の催促();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				蘭／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				蘭／約束の催促１();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				蘭／１人で石油穴();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				蘭／守り紙様();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／早雲()
{
	while (true)
	{
		MENU_ADD(1, "早雲／石油穴で発見Ａ", NULL);
		MENU_ADD(2, "早雲／石油穴で発見Ｂ", NULL);
		MENU_ADD(3, "早雲／石油穴で発見Ｃ", NULL);
		MENU_ADD(4, "早雲／仕官", NULL);
		MENU_ADD(5, "早雲／信頼", NULL);
		MENU_ADD(6, "早雲／基本接触", NULL);
		MENU_ADD(7, "早雲／性眼と対談", NULL);
		MENU_ADD(8, "早雲／名取と対談", NULL);
		MENU_ADD(9, "早雲／陰陽道の仕事", NULL);
		MENU_ADD(10, "早雲／蘭の思い出", NULL);
		MENU_ADD(11, "早雲／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				早雲／石油穴で発見Ａ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				早雲／石油穴で発見Ｂ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				早雲／石油穴で発見Ｃ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				早雲／仕官();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				早雲／信頼();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				早雲／基本接触();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				早雲／性眼と対談();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				早雲／名取と対談();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				早雲／陰陽道の仕事();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				早雲／蘭の思い出();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				早雲／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／小松()
{
	while (true)
	{
		MENU_ADD(1, "小松／ファンの声", NULL);
		MENU_ADD(2, "小松／陵辱", NULL);
		MENU_ADD(3, "小松／勧誘成功", NULL);
		MENU_ADD(4, "小松／武将初", NULL);
		MENU_ADD(5, "小松／普通", NULL);
		MENU_ADD(6, "小松／信頼", NULL);
		MENU_ADD(7, "小松／愛情", NULL);
		MENU_ADD(8, "小松／初エッチ", NULL);
		MENU_ADD(9, "小松／基本接触", NULL);
		MENU_ADD(10, "小松／やる気無し", NULL);
		MENU_ADD(11, "小松／基本接触／信頼", NULL);
		MENU_ADD(12, "小松／基本接触／エロ後", NULL);
		MENU_ADD(13, "小松／合戦前／汎用", NULL);
		MENU_ADD(14, "小松／汎用エロ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				小松／ファンの声();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				小松／陵辱();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				小松／勧誘成功();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				小松／武将初();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				小松／普通();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				小松／信頼();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				小松／愛情();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				小松／初エッチ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				小松／基本接触();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				小松／やる気無し();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				小松／基本接触／信頼();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				小松／基本接触／エロ後();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				小松／合戦前／汎用();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				小松／汎用エロ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／信長()
{
	while (true)
	{
		MENU_ADD(1, "信長／合戦前", NULL);
		MENU_ADD(2, "信長／日常１", NULL);
		MENU_ADD(3, "信長／日常２", NULL);
		MENU_ADD(4, "信長／日常３", NULL);
		MENU_ADD(5, "信長／見舞い１", NULL);
		MENU_ADD(6, "信長／見舞い２", NULL);
		MENU_ADD(7, "信長／見舞い３", NULL);
		MENU_ADD(8, "信長／日常会話汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				信長／合戦前();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				信長／日常１();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				信長／日常２();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				信長／日常３();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				信長／見舞い１();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				信長／見舞い２();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				信長／見舞い３();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				信長／日常会話汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／もっこ()
{
	while (true)
	{
		MENU_ADD(1, "てばさき牧場１", NULL);
		MENU_ADD(2, "てばさき牧場２", NULL);
		MENU_ADD(3, "てばさき牧場／汎用", NULL);
		MENU_ADD(4, "てばさき牧場３", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				てばさき牧場１();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				てばさき牧場２();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				てばさき牧場／汎用();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				てばさき牧場３();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／アギレダ()
{
	while (true)
	{
		MENU_ADD(6, "アギレダ／出陣", NULL);
		MENU_ADD(1, "アギレダ／勧誘成功", NULL);
		MENU_ADD(3, "アギレダ／セックスの条件", NULL);
		MENU_ADD(4, "アギレダ／セックス", NULL);
		MENU_ADD(5, "アギレダ／汎用セックス", NULL);
		MENU_ADD(7, "アギレダ／カイロにて", NULL);
		MENU_ADD(8, "アギレダ／アマゾンにて", NULL);
		MENU_ADD(9, "アギレダ／基本接触", NULL);
		MENU_ADD(10, "アギレダ／基本接触／エロ", NULL);
		MENU_ADD(11, "アギレダ／愛情確認", NULL);
		MENU_ADD(12, "アギレダ／愛情", NULL);
		MENU_ADD(13, "アギレダ／合戦前／汎用", NULL);
		MENU_ADD(14, "アギレダ／基本接触／愛情", NULL);
		MENU_ADD(15, "アギレダ／汎用セックス／愛情", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／勧誘成功();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／セックスの条件();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／セックス();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／汎用セックス();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／出陣();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／カイロにて();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／アマゾンにて();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／基本接触();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／基本接触／エロ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／愛情確認();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／愛情();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／合戦前／汎用();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／基本接触／愛情();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				アギレダ／汎用セックス／愛情();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／ヨシヒサ()
{
	while (true)
	{
		MENU_ADD(1, "ヨシヒサ／普通", NULL);
		MENU_ADD(2, "ヨシヒサ／信頼", NULL);
		MENU_ADD(3, "ヨシヒサ／勧誘成功", NULL);
		MENU_ADD(4, "ヨシヒサ／基本接触", NULL);
		MENU_ADD(5, "ヨシヒサ／基本接触／毛利てる", NULL);
		MENU_ADD(6, "ヨシヒサ／信頼２", NULL);
		MENU_ADD(7, "ヨシヒサ／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				ヨシヒサ／普通();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				ヨシヒサ／信頼();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				ヨシヒサ／勧誘成功();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				ヨシヒサ／基本接触();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				ヨシヒサ／基本接触／毛利てる();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				ヨシヒサ／信頼２();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				ヨシヒサ／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／カズヒサ()
{
	while (true)
	{
		MENU_ADD(1, "カズヒサ／普通", NULL);
		MENU_ADD(2, "カズヒサ／信頼", NULL);
		MENU_ADD(3, "カズヒサ／勧誘成功", NULL);
		MENU_ADD(4, "カズヒサ／基本接触", NULL);
		MENU_ADD(5, "カズヒサ／基本接触／直江愛", NULL);
		MENU_ADD(6, "カズヒサ／信頼２", NULL);
		MENU_ADD(7, "カズヒサ／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／普通();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／信頼();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／勧誘成功();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／基本接触();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／基本接触／直江愛();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／信頼２();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／トシヒサ()
{
	while (true)
	{
		MENU_ADD(1, "トシヒサ／普通", NULL);
		MENU_ADD(2, "トシヒサ／信頼", NULL);
		MENU_ADD(3, "トシヒサ／勧誘成功", NULL);
		MENU_ADD(4, "トシヒサ／基本接触", NULL);
		MENU_ADD(5, "トシヒサ／基本接触／大道寺小松", NULL);
		MENU_ADD(6, "トシヒサ／信頼２", NULL);
		MENU_ADD(7, "トシヒサ／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				トシヒサ／普通();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				トシヒサ／信頼();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				トシヒサ／勧誘成功();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				トシヒサ／基本接触();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				トシヒサ／基本接触／大道寺小松();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				トシヒサ／信頼２();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				トシヒサ／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／イエヒサ()
{
	while (true)
	{
		MENU_ADD(1, "イエヒサ／普通", NULL);
		MENU_ADD(2, "イエヒサ／信頼", NULL);
		MENU_ADD(3, "イエヒサ／勧誘成功", NULL);
		MENU_ADD(4, "イエヒサ／基本接触", NULL);
		MENU_ADD(5, "イエヒサ／基本接触／乱丸", NULL);
		MENU_ADD(6, "イエヒサ／信頼２", NULL);
		MENU_ADD(7, "イエヒサ／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				イエヒサ／普通();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				イエヒサ／信頼();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				イエヒサ／勧誘成功();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				イエヒサ／基本接触();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				イエヒサ／基本接触／乱丸();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				イエヒサ／信頼２();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				イエヒサ／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／性眼()
{
	while (true)
	{
		MENU_ADD(1, "性眼／逃亡１", NULL);
		MENU_ADD(2, "性眼／逃亡２", NULL);
		MENU_ADD(3, "性眼／未熟", NULL);
		MENU_ADD(4, "性眼／仕官", NULL);
		MENU_ADD(5, "性眼／作戦の提案", NULL);
		MENU_ADD(6, "性眼／信頼", NULL);
		MENU_ADD(7, "性眼／三度の依頼", NULL);
		MENU_ADD(8, "性眼／三度の依頼実行", NULL);
		MENU_ADD(9, "性眼／香姫と", NULL);
		MENU_ADD(10, "性眼／シィルと", NULL);
		MENU_ADD(11, "性眼／基本接触", NULL);
		MENU_ADD(12, "性眼／ランスと", NULL);
		MENU_ADD(13, "性眼／合戦前／ｖｓ魔軍", NULL);
		MENU_ADD(14, "性眼／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				性眼／逃亡１();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				性眼／逃亡２();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				性眼／未熟();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				性眼／仕官();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				性眼／作戦の提案();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				性眼／信頼();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				性眼／三度の依頼();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				性眼／三度の依頼実行();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				性眼／香姫と();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				性眼／シィルと();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				性眼／基本接触();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				性眼／ランスと();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				性眼／合戦前／ｖｓ魔軍();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				性眼／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／言裏()
{
	while (true)
	{
		MENU_ADD(1, "言裏／仕官", NULL);
		MENU_ADD(2, "言裏／仲良し１", NULL);
		MENU_ADD(3, "言裏／仲良し２", NULL);
		MENU_ADD(4, "言裏／基本接触", NULL);
		MENU_ADD(5, "言裏／信頼", NULL);
		MENU_ADD(6, "言裏／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				言裏／仕官();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				言裏／仲良し１();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				言裏／仲良し２();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				言裏／基本接触();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				言裏／信頼();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				言裏／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／お町()
{
	while (true)
	{
		MENU_ADD(1, "お町／出撃", NULL);
		MENU_ADD(2, "お町／倒す", NULL);
		MENU_ADD(3, "お町／部下会話／初", NULL);
		MENU_ADD(4, "お町／基本接触", NULL);
		MENU_ADD(5, "お町／普通", NULL);
		MENU_ADD(6, "お町／信頼", NULL);
		MENU_ADD(7, "お町／愛情", NULL);
		MENU_ADD(8, "お町／基本接触／愛情", NULL);
		MENU_ADD(9, "お町／汎用エロ", NULL);
		MENU_ADD(10, "お町／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				お町／出撃();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				お町／倒す();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				お町／部下会話／初();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				お町／基本接触();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				お町／普通();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				お町／信頼();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				お町／愛情();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				お町／基本接触／愛情();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				お町／汎用エロ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				お町／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／ノワール()
{
	while (true)
	{
		MENU_ADD(1, "ノワール／出撃", NULL);
		MENU_ADD(2, "ノワール／捕獲エロ", NULL);
		MENU_ADD(3, "ノワール／勧誘成功", NULL);
		MENU_ADD(4, "ノワール／部下会話／初", NULL);
		MENU_ADD(5, "ノワール／基本接触", NULL);
		MENU_ADD(6, "ノワール／普通", NULL);
		MENU_ADD(7, "ノワール／信頼", NULL);
		MENU_ADD(8, "ノワール／愛情", NULL);
		MENU_ADD(9, "ノワール／基本接触／愛情", NULL);
		MENU_ADD(10, "ノワール／汎用エロ", NULL);
		MENU_ADD(11, "ノワール／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				ノワール／出撃();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				ノワール／捕獲エロ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				ノワール／勧誘成功();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				ノワール／部下会話／初();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				ノワール／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				ノワール／普通();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				ノワール／信頼();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				ノワール／愛情();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				ノワール／基本接触／愛情();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				ノワール／汎用エロ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				ノワール／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／折女()
{
	while (true)
	{
		MENU_ADD(1, "折女／出撃", NULL);
		MENU_ADD(2, "折女／捕獲エロ", NULL);
		MENU_ADD(3, "折女／勧誘成功", NULL);
		MENU_ADD(4, "折女／部下会話／初", NULL);
		MENU_ADD(5, "折女／基本接触", NULL);
		MENU_ADD(6, "折女／信頼", NULL);
		MENU_ADD(7, "折女／愛情", NULL);
		MENU_ADD(8, "折女／基本接触／愛情", NULL);
		MENU_ADD(9, "折女／汎用エロ", NULL);
		MENU_ADD(10, "折女／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				折女／出撃();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				折女／捕獲エロ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				折女／勧誘成功();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				折女／部下会話／初();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				折女／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				折女／信頼();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				折女／愛情();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				折女／基本接触／愛情();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				折女／汎用エロ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				折女／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／野菊()
{
	while (true)
	{
		MENU_ADD(1, "野菊／出撃", NULL);
		MENU_ADD(2, "野菊／捕獲エロ", NULL);
		MENU_ADD(3, "野菊／勧誘成功", NULL);
		MENU_ADD(4, "野菊／部下会話／初", NULL);
		MENU_ADD(5, "野菊／基本接触", NULL);
		MENU_ADD(6, "野菊／普通", NULL);
		MENU_ADD(7, "野菊／信頼", NULL);
		MENU_ADD(8, "野菊／愛情", NULL);
		MENU_ADD(9, "野菊／基本接触／愛情", NULL);
		MENU_ADD(10, "野菊／汎用エロ", NULL);
		MENU_ADD(11, "野菊／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				野菊／出撃();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				野菊／捕獲エロ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				野菊／勧誘成功();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				野菊／部下会話／初();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				野菊／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				野菊／普通();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				野菊／信頼();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				野菊／愛情();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				野菊／基本接触／愛情();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				野菊／汎用エロ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				野菊／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／政宗()
{
	while (true)
	{
		MENU_ADD(1, "政宗／仕官", NULL);
		MENU_ADD(2, "政宗／基本接触", NULL);
		MENU_ADD(3, "政宗／部下会話／初", NULL);
		MENU_ADD(4, "政宗／信頼", NULL);
		MENU_ADD(5, "政宗／合戦／汎用", NULL);
		MENU_ADD(6, "政宗／殺生石", NULL);
		MENU_ADD(7, "政宗／お町復活", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				政宗／仕官();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				政宗／基本接触();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				政宗／部下会話／初();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				政宗／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				政宗／合戦／汎用();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				政宗／殺生石();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				政宗／お町復活();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／子鹿()
{
	while (true)
	{
		MENU_ADD(1, "子鹿／足利家訪問", NULL);
		MENU_ADD(2, "子鹿／伊賀家訪問", NULL);
		MENU_ADD(3, "子鹿／天志教訪問", NULL);
		MENU_ADD(4, "子鹿／織田家訪問", NULL);
		MENU_ADD(5, "子鹿／戦準備", NULL);
		MENU_ADD(6, "子鹿／元就強襲", NULL);
		MENU_ADD(7, "子鹿／子犬と", NULL);
		MENU_ADD(8, "子鹿／エロ", NULL);
		MENU_ADD(9, "子鹿／仕官", NULL);
		MENU_ADD(10, "子鹿／部下会話／初", NULL);
		MENU_ADD(11, "子鹿／基本接触", NULL);
		MENU_ADD(12, "子鹿／普通", NULL);
		MENU_ADD(13, "子鹿／信頼", NULL);
		MENU_ADD(14, "子鹿／愛情", NULL);
		MENU_ADD(15, "子鹿／基本接触／愛情", NULL);
		MENU_ADD(16, "子鹿／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				子鹿／足利家訪問();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				子鹿／伊賀家訪問();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				子鹿／天志教訪問();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				子鹿／織田家訪問();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				子鹿／戦準備();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				子鹿／元就強襲();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				子鹿／子犬と();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				子鹿／エロ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				子鹿／仕官();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				子鹿／部下会話／初();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				子鹿／基本接触();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				子鹿／普通();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				子鹿／信頼();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				子鹿／愛情();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				子鹿／基本接触／愛情();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				子鹿／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／戦姫()
{
	while (true)
	{
		MENU_ADD(1, "戦姫／エロ／シィル", NULL);
		MENU_ADD(14, "戦姫／エロ／シィルなし", NULL);
		MENU_ADD(2, "戦姫／仕官", NULL);
		MENU_ADD(3, "戦姫／基本接触", NULL);
		MENU_ADD(4, "戦姫／普通", NULL);
		MENU_ADD(5, "戦姫／信頼", NULL);
		MENU_ADD(6, "戦姫／出奔", NULL);
		MENU_ADD(7, "戦姫／愛情条件", NULL);
		MENU_ADD(8, "戦姫／負け戦１", NULL);
		MENU_ADD(9, "戦姫／負け戦３", NULL);
		MENU_ADD(10, "戦姫／愛情", NULL);
		MENU_ADD(11, "戦姫／合戦前／汎用", NULL);
		MENU_ADD(12, "戦姫／基本接触／愛情前", NULL);
		MENU_ADD(13, "戦姫／基本接触／愛情", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				戦姫／エロ／シィル();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				戦姫／仕官();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				戦姫／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				戦姫／普通();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				戦姫／信頼();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				戦姫／出奔();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				戦姫／愛情条件();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				戦姫／負け戦１();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				戦姫／負け戦３();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				戦姫／愛情();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				戦姫／合戦前／汎用();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				戦姫／基本接触／愛情前();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				戦姫／基本接触／愛情();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				戦姫／エロ／シィルなし();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／黒姫()
{
	while (true)
	{
		MENU_ADD(1, "黒姫／信長と対面", NULL);
		MENU_ADD(2, "黒姫／捕獲／香", NULL);
		MENU_ADD(8, "黒姫／捕獲／香なし", NULL);
		MENU_ADD(5, "黒姫／捕獲２", NULL);
		MENU_ADD(3, "黒姫／ゲット計画", NULL);
		MENU_ADD(4, "黒姫／ゲット計画／実行", NULL);
		MENU_ADD(6, "黒姫／信長陵辱", NULL);
		MENU_ADD(7, "黒姫／汎用エッチ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				黒姫／信長と対面();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				黒姫／捕獲／香();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				黒姫／ゲット計画();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				黒姫／ゲット計画／実行();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				黒姫／捕獲２();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				黒姫／信長陵辱();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				黒姫／汎用エッチ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				黒姫／捕獲／香なし();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／戯骸()
{
	while (true)
	{
		MENU_ADD(1, "戯骸／登場／織田", NULL);
		MENU_ADD(2, "戯骸／出撃", NULL);
		MENU_ADD(3, "戯骸／挑戦", NULL);
		MENU_ADD(4, "戯骸／挑戦／汎用", NULL);
		MENU_ADD(5, "戯骸／ｖｓ汎用キャラ", NULL);
		MENU_ADD(6, "戯骸／ｖｓ魔人健太郎", NULL);
		MENU_ADD(7, "戯骸／ｖｓランス／情報無し", NULL);
		MENU_ADD(8, "戯骸／ｖｓランスＡ", NULL);
		MENU_ADD(9, "戯骸／ｖｓランスＢ", NULL);
		MENU_ADD(10, "戯骸／対策プラン", NULL);
		MENU_ADD(11, "戯骸／ｖｓ早雲", NULL);
		MENU_ADD(12, "戯骸／ランスゲット", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				戯骸／登場／織田();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				戯骸／出撃();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				戯骸／挑戦();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				戯骸／挑戦／汎用();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				戯骸／ｖｓ汎用キャラ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				戯骸／ｖｓ魔人健太郎();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				戯骸／ｖｓランス／情報無し();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				戯骸／ｖｓランスＡ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				戯骸／ｖｓランスＢ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				戯骸／対策プラン();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				戯骸／ｖｓ早雲();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				戯骸／ランスゲット();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／魔導()
{
	while (true)
	{
		MENU_ADD(1, "魔導／登場", NULL);
		MENU_ADD(2, "魔導／登場／部下", NULL);
		MENU_ADD(3, "魔導／登場／捕虜", NULL);
		MENU_ADD(4, "魔導／その頃１", NULL);
		MENU_ADD(5, "魔導／その頃２", NULL);
		MENU_ADD(6, "魔導／出撃", NULL);
		MENU_ADD(7, "魔導／ラストバトルＡ", NULL);
		MENU_ADD(8, "魔導／ラストバトルＢ", NULL);
		MENU_ADD(9, "魔導／ラストバトルＡＡ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				魔導／登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				魔導／登場／部下();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				魔導／登場／捕虜();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				魔導／その頃１();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				魔導／その頃２();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				魔導／出撃();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				魔導／ラストバトルＡ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				魔導／ラストバトルＢ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				魔導／ラストバトルＡＡ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／かぐや姫()
{
	while (true)
	{
		MENU_ADD(1, "三河／宇宙人１", NULL);
		MENU_ADD(2, "三河／宇宙人２", NULL);
		MENU_ADD(3, "三河／宇宙人／汎用", NULL);
		MENU_ADD(4, "三河／宇宙人３", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				三河／宇宙人１();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				三河／宇宙人２();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				三河／宇宙人／汎用();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				三河／宇宙人３();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／まんまる()
{
	while (true)
	{
		MENU_ADD(1, "まんまる／陵辱", NULL);
		MENU_ADD(2, "まんまる／陵辱２", NULL);
		MENU_ADD(3, "まんまる／逃がすＡ", NULL);
		MENU_ADD(4, "まんまる／逃がすＢ", NULL);
		MENU_ADD(5, "まんまる／逃がすＣ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				まんまる／陵辱();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				まんまる／陵辱２();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				まんまる／逃がすＡ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				まんまる／逃がすＢ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				まんまる／逃がすＣ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／徳川２()
{
	while (true)
	{
		MENU_ADD(1, "徳川家康／仕官", NULL);
		MENU_ADD(2, "徳川家康／基本接触", NULL);
		MENU_ADD(3, "徳川家康／本多", NULL);
		MENU_ADD(4, "徳川家康／井伊", NULL);
		MENU_ADD(5, "徳川家康／服部", NULL);
		MENU_ADD(6, "徳川家康／酒井", NULL);
		MENU_ADD(7, "徳川家康／信頼", NULL);
		MENU_ADD(8, "徳川家康／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				徳川家康／仕官();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				徳川家康／基本接触();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				徳川家康／本多();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				徳川家康／井伊();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				徳川家康／服部();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				徳川家康／酒井();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				徳川家康／信頼();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				徳川家康／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／新撰組()
{
	while (true)
	{
		MENU_ADD(1, "新撰組と子鹿", NULL);
		MENU_ADD(2, "新撰組とタクガ１", NULL);
		MENU_ADD(3, "新撰組とタクガ２", NULL);
		MENU_ADD(4, "新撰組支援Ａ", NULL);
		MENU_ADD(5, "新撰組支援Ｂ", NULL);
		MENU_ADD(6, "新撰組支援Ｃ", NULL);
		MENU_ADD(7, "新撰組テロリスト１", NULL);
		MENU_ADD(8, "新撰組テロリスト２", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				新撰組と子鹿();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				新撰組とタクガ１();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				新撰組とタクガ２();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				新撰組支援Ａ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				新撰組支援Ｂ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				新撰組支援Ｃ();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				新撰組テロリスト１();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				新撰組テロリスト２();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／犬飼()
{
	while (true)
	{
		MENU_ADD(1, "犬飼／タイマン勝負Ａ", NULL);
		MENU_ADD(2, "犬飼／タイマン勝負Ｂ", NULL);
		MENU_ADD(3, "犬飼／武将初", NULL);
		MENU_ADD(4, "犬飼／信頼", NULL);
		MENU_ADD(5, "犬飼と鈴女", NULL);
		MENU_ADD(6, "犬飼とかなみ", NULL);
		MENU_ADD(7, "犬飼／蜘蛛弾正登場", NULL);
		MENU_ADD(8, "犬飼／合戦前／蜘蛛弾正", NULL);
		MENU_ADD(9, "犬飼／合戦後／蜘蛛弾正", NULL);
		MENU_ADD(10, "犬飼／銀目教", NULL);
		MENU_ADD(11, "犬飼／基本接触", NULL);
		MENU_ADD(12, "犬飼／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				犬飼／タイマン勝負Ａ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				犬飼／タイマン勝負Ｂ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				犬飼／武将初();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				犬飼／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				犬飼と鈴女();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				犬飼とかなみ();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				犬飼／蜘蛛弾正登場();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				犬飼／合戦前／蜘蛛弾正();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				犬飼／合戦後／蜘蛛弾正();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				犬飼／銀目教();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				犬飼／基本接触();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				犬飼／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／義景()
{
	while (true)
	{
		MENU_ADD(1, "朝倉義景／勧誘成功", NULL);
		MENU_ADD(2, "朝倉義景／武将初", NULL);
		MENU_ADD(3, "朝倉義景／普通", NULL);
		MENU_ADD(4, "朝倉義景／信頼", NULL);
		MENU_ADD(5, "朝倉義景／基本接触", NULL);
		MENU_ADD(6, "朝倉義景／基本接触／信頼", NULL);
		MENU_ADD(7, "朝倉義景／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				朝倉義景／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				朝倉義景／武将初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				朝倉義景／普通();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				朝倉義景／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				朝倉義景／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				朝倉義景／基本接触／信頼();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				朝倉義景／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／名取()
{
	while (true)
	{
		MENU_ADD(1, "名取／勧誘成功", NULL);
		MENU_ADD(2, "名取／武将初", NULL);
		MENU_ADD(3, "名取／基本接触", NULL);
		MENU_ADD(4, "名取／汎用エロ", NULL);
		MENU_ADD(5, "名取／信頼", NULL);
		MENU_ADD(6, "名取／愛情", NULL);
		MENU_ADD(7, "名取／オロチの説明", NULL);
		MENU_ADD(8, "名取／信頼ＮＧ", NULL);
		MENU_ADD(9, "名取／基本接触／愛情", NULL);
		MENU_ADD(10, "名取／基本接触／オロチ", NULL);
		MENU_ADD(11, "名取／合戦前／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				名取／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				名取／武将初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				名取／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				名取／汎用エロ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				名取／信頼();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				名取／愛情();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				名取／オロチの説明();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				名取／信頼ＮＧ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				名取／基本接触／愛情();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				名取／基本接触／オロチ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				名取／合戦前／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／夕張()
{
	while (true)
	{
		MENU_ADD(1, "夕張／仕官／香", NULL);
		MENU_ADD(27, "夕張／仕官／香なし", NULL);
		MENU_ADD(2, "夕張／武将初", NULL);
		MENU_ADD(3, "夕張／基本接触", NULL);
		MENU_ADD(4, "夕張／初エッチ", NULL);
		MENU_ADD(5, "夕張／基本接触／エロ後", NULL);
		MENU_ADD(6, "夕張／基本接触／オロチ", NULL);
		MENU_ADD(7, "夕張／汎用エロ", NULL);
		MENU_ADD(8, "夕張と巫女機関１", NULL);
		MENU_ADD(9, "夕張と巫女機関２", NULL);
		MENU_ADD(10, "夕張／信頼Ａ", NULL);
		MENU_ADD(11, "夕張／信頼Ｂ", NULL);
		MENU_ADD(12, "夕張／信頼Ｃ", NULL);
		MENU_ADD(13, "夕張／信頼Ｄ", NULL);
		MENU_ADD(14, "夕張／オロチの話", NULL);
		MENU_ADD(15, "オロチの穴／結界開く", NULL);
		MENU_ADD(16, "オロチの穴／夕張の異変", NULL);
		MENU_ADD(17, "オロチと対決Ａ", NULL);
		MENU_ADD(18, "オロチと対決Ｂ", NULL);
		MENU_ADD(19, "オロチと対決Ｃ", NULL);
		MENU_ADD(20, "オロチと対決Ｄ", NULL);
		MENU_ADD(21, "夕張／邪馬台で合戦中", NULL);
		MENU_ADD(22, "夕張／基本接触／ＶＳ巫女機関", NULL);
		MENU_ADD(23, "夕張／夕張と名取", NULL);
		MENU_ADD(24, "夕張／愛情", NULL);
		MENU_ADD(25, "夕張／合戦前／汎用", NULL);
		MENU_ADD(26, "夕張／基本接触／愛情", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				夕張／仕官／香();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				夕張／武将初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				夕張／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				夕張／初エッチ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				夕張／基本接触／エロ後();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				夕張／基本接触／オロチ();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				夕張／汎用エロ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				夕張と巫女機関１();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				夕張と巫女機関２();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				夕張／信頼Ａ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				夕張／信頼Ｂ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				夕張／信頼Ｃ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				夕張／信頼Ｄ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				夕張／オロチの話();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				オロチの穴／結界開く();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				オロチの穴／夕張の異変();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				オロチと対決Ａ();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				オロチと対決Ｂ();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				オロチと対決Ｃ();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				オロチと対決Ｄ();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				夕張／邪馬台で合戦中();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				夕張／基本接触／ＶＳ巫女機関();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				夕張／夕張と名取();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				夕張／愛情();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				夕張／合戦前／汎用();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				夕張／基本接触／愛情();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				夕張／仕官／香なし();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／真田()
{
	while (true)
	{
		MENU_ADD(1, "真田／勧誘成功", NULL);
		MENU_ADD(2, "真田／部下会話／初", NULL);
		MENU_ADD(3, "真田／信頼", NULL);
		MENU_ADD(4, "真田／合戦前／汎用", NULL);
		MENU_ADD(5, "真田／基本接触", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				真田／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				真田／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				真田／信頼();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				真田／合戦前／汎用();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				真田／基本接触();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／井伊()
{
	while (true)
	{
		MENU_ADD(1, "井伊／勧誘成功", NULL);
		MENU_ADD(2, "井伊／部下会話／初", NULL);
		MENU_ADD(3, "井伊／基本接触", NULL);
		MENU_ADD(4, "井伊／信頼", NULL);
		MENU_ADD(5, "井伊／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				井伊／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				井伊／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				井伊／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				井伊／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				井伊／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／酒井()
{
	while (true)
	{
		MENU_ADD(1, "酒井／勧誘成功", NULL);
		MENU_ADD(2, "酒井／部下会話／初", NULL);
		MENU_ADD(3, "酒井／基本接触", NULL);
		MENU_ADD(4, "酒井／信頼", NULL);
		MENU_ADD(5, "酒井／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				酒井／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				酒井／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				酒井／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				酒井／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				酒井／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／本多()
{
	while (true)
	{
		MENU_ADD(1, "本多／勧誘成功", NULL);
		MENU_ADD(2, "本多／部下会話／初", NULL);
		MENU_ADD(3, "本多／基本接触", NULL);
		MENU_ADD(4, "本多／信頼", NULL);
		MENU_ADD(5, "本多／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				本多／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				本多／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				本多／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				本多／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				本多／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／服部()
{
	while (true)
	{
		MENU_ADD(1, "服部／勧誘成功", NULL);
		MENU_ADD(2, "服部／部下会話／初", NULL);
		MENU_ADD(3, "服部／基本接触", NULL);
		MENU_ADD(4, "服部／信頼", NULL);
		MENU_ADD(5, "服部／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				服部／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				服部／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				服部／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				服部／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				服部／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／榊原()
{
	while (true)
	{
		MENU_ADD(1, "榊原／勧誘成功", NULL);
		MENU_ADD(2, "榊原／部下会話／初", NULL);
		MENU_ADD(3, "榊原／基本接触", NULL);
		MENU_ADD(4, "榊原／信頼", NULL);
		MENU_ADD(5, "榊原／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				榊原／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				榊原／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				榊原／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				榊原／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				榊原／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／高坂()
{
	while (true)
	{
		MENU_ADD(1, "高坂／勧誘成功", NULL);
		MENU_ADD(2, "高坂／部下会話／初", NULL);
		MENU_ADD(3, "高坂／基本接触", NULL);
		MENU_ADD(4, "高坂／信頼", NULL);
		MENU_ADD(5, "高坂／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				高坂／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				高坂／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				高坂／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				高坂／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				高坂／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／山県()
{
	while (true)
	{
		MENU_ADD(1, "山県／勧誘成功", NULL);
		MENU_ADD(2, "山県／部下会話／初", NULL);
		MENU_ADD(3, "山県／基本接触", NULL);
		MENU_ADD(4, "山県／信頼", NULL);
		MENU_ADD(5, "山県／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				山県／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				山県／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				山県／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				山県／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				山県／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／馬場()
{
	while (true)
	{
		MENU_ADD(1, "馬場／勧誘成功", NULL);
		MENU_ADD(2, "馬場／部下会話／初", NULL);
		MENU_ADD(3, "馬場／基本接触", NULL);
		MENU_ADD(4, "馬場／信頼", NULL);
		MENU_ADD(5, "馬場／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				馬場／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				馬場／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				馬場／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				馬場／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				馬場／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／プロローグ()
{
	while (true)
	{
		MENU_ADD(1, "プロローグＡ", NULL);
		MENU_ADD(2, "プロローグＢ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				プロローグＡ();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				プロローグＢ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／一休()
{
	while (true)
	{
		MENU_ADD(1, "一休／勧誘成功", NULL);
		MENU_ADD(2, "一休／部下会話／初", NULL);
		MENU_ADD(3, "一休／基本接触", NULL);
		MENU_ADD(4, "一休／信頼", NULL);
		MENU_ADD(5, "一休／合戦／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				一休／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				一休／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				一休／基本接触();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				一休／信頼();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				一休／合戦／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／超神()
{
	while (true)
	{
		MENU_ADD(1, "超神／勧誘成功", NULL);
		MENU_ADD(2, "超神／部下会話／初", NULL);
		MENU_ADD(3, "超神／名前変更", NULL);
		MENU_ADD(4, "超神／尊氏の屏風", NULL);
		MENU_ADD(5, "超神／基本接触", NULL);
		MENU_ADD(6, "超神／基本接触／うんこ", NULL);
		MENU_ADD(7, "超神／合戦前／汎用", NULL);
		MENU_ADD(8, "超神／普通", NULL);
		MENU_ADD(9, "超神／信頼", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				超神／勧誘成功();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				超神／部下会話／初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				超神／名前変更();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				超神／尊氏の屏風();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				超神／基本接触();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				超神／基本接触／うんこ();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				超神／合戦前／汎用();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				超神／普通();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				超神／信頼();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／足利()
{
	while (true)
	{
		MENU_ADD(1, "美濃／美濃３人衆の噂", NULL);
		MENU_ADD(2, "京／足利に滅ぼされた国", NULL);
		MENU_ADD(3, "京／超神の噂", NULL);
		MENU_ADD(4, "足利／初登場", NULL);
		MENU_ADD(5, "足利／初要求Ａ", NULL);
		MENU_ADD(6, "足利／要求Ｂ", NULL);
		MENU_ADD(7, "足利／要求Ｃ", NULL);
		MENU_ADD(8, "足利／汎用要求", NULL);
		MENU_ADD(9, "足利／宣戦布告", NULL);
		MENU_ADD(10, "足利／帝のリング", NULL);
		MENU_ADD(11, "足利／織田を誅殺", NULL);
		MENU_ADD(12, "足利／陥落", NULL);
		MENU_ADD(13, "足利／降伏受け入れ", NULL);
		MENU_ADD(14, "足利／瓢箪略奪", NULL);
		MENU_ADD(15, "足利／原家滅亡", NULL);
		MENU_ADD(16, "足利／リーザス援軍", NULL);
		MENU_ADD(17, "足利／京の場合", NULL);
		MENU_ADD(18, "足利／美濃の場合", NULL);
		MENU_ADD(19, "京／公家の娘", NULL);
		MENU_ADD(20, "足利／天志教ネタで宣戦布告", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				美濃／美濃３人衆の噂();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				京／足利に滅ぼされた国();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				京／超神の噂();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				足利／初登場();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				足利／初要求Ａ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				足利／要求Ｂ();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				足利／要求Ｃ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				足利／汎用要求();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				足利／宣戦布告();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				足利／帝のリング();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				足利／織田を誅殺();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				足利／陥落();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				足利／降伏受け入れ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				足利／瓢箪略奪();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				足利／原家滅亡();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				足利／リーザス援軍();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				足利／京の場合();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				足利／美濃の場合();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				京／公家の娘();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				足利／天志教ネタで宣戦布告();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／織田()
{
	while (true)
	{
		MENU_ADD(1, "織田／ターン１", NULL);
		MENU_ADD(4, "地域／初めて", NULL);
		MENU_ADD(5, "合戦／初めて", NULL);
		MENU_ADD(6, "大奥／初めて", NULL);
		MENU_ADD(7, "武将／初めて", NULL);
		MENU_ADD(8, "捕虜／初めて", NULL);
		MENU_ADD(9, "システム／初めて", NULL);
		MENU_ADD(10, "織田／ターン２", NULL);
		MENU_ADD(11, "織田／花見", NULL);
		MENU_ADD(12, "織田／信長と瓢箪", NULL);
		MENU_ADD(13, "織田／信長と瓢箪２", NULL);
		MENU_ADD(16, "織田／第２の瓢箪", NULL);
		MENU_ADD(17, "織田／第３の瓢箪", NULL);
		MENU_ADD(18, "織田／第４の瓢箪", NULL);
		MENU_ADD(19, "織田／第５の瓢箪", NULL);
		MENU_ADD(20, "織田／第Ｘの瓢箪", NULL);
		MENU_ADD(21, "織田／天志教事件開始", NULL);
		MENU_ADD(22, "織田／比叡山焼き討ち", NULL);
		MENU_ADD(23, "織田／門徒の反乱Ａ", NULL);
		MENU_ADD(24, "織田／門徒の反乱Ｂ", NULL);
		MENU_ADD(25, "織田／カオスの話", NULL);
		MENU_ADD(32, "織田／信長抹殺計画", NULL);
		MENU_ADD(27, "本能寺の変Ａ", NULL);
		MENU_ADD(28, "本能寺の変Ｂ", NULL);
		MENU_ADD(29, "本能寺の変Ｃ", NULL);
		MENU_ADD(30, "本能寺の変Ｄ", NULL);
		MENU_ADD(31, "織田／織田家分裂", NULL);
		MENU_ADD(33, "人望の杖", NULL);
		MENU_ADD(34, "織田／汎用会話２１", NULL);
		MENU_ADD(35, "織田／汎用会話２２", NULL);
		MENU_ADD(36, "信長を殺しに行く／返り討ち", NULL);
		MENU_ADD(37, "織田／義勇団１", NULL);
		MENU_ADD(38, "織田／義勇団２", NULL);
		MENU_ADD(39, "学徒動員", NULL);
		MENU_ADD(40, "学徒動員／汎用", NULL);
		MENU_ADD(41, "織田／宣戦布告の仕方", NULL);
		MENU_ADD(42, "本能寺／初", NULL);
		MENU_ADD(43, "本能寺／汎用", NULL);
		MENU_ADD(44, "本能寺／煉獄", NULL);
		MENU_ADD(45, "本能寺／香姫行方不明中", NULL);
		MENU_ADD(46, "本能寺／魔人の巣Ａ", NULL);
		MENU_ADD(47, "本能寺／魔人の巣Ｂ", NULL);
		MENU_ADD(48, "本能寺／空っぽ", NULL);
		MENU_ADD(49, "本能寺／式部Ａ", NULL);
		MENU_ADD(50, "本能寺／式部Ｂ", NULL);
		MENU_ADD(51, "本能寺／式部Ｃ", NULL);
		MENU_ADD(52, "ランス屋敷／汎用", NULL);
		MENU_ADD(53, "尾張を取られた", NULL);
		MENU_ADD(54, "本能寺の変ＢＢ", NULL);
		MENU_ADD(55, "コパ傭兵団到着", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				織田／ターン１();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				織田／ターン１／終了禁止();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				織田／ターン１／終了禁止汎用();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				地域／初めて();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				合戦／初めて();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				大奥／初めて();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				武将／初めて();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				捕虜／初めて();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				システム／初めて();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				織田／ターン２();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				織田／花見();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				織田／信長と瓢箪();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				織田／信長と瓢箪２();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				織田／時間切れＧＡＭＥＯＶＥＲ予告();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				織田／時間切れＧＡＭＥＯＶＥＲ();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				織田／第２の瓢箪();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				織田／第３の瓢箪();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				織田／第４の瓢箪();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				織田／第５の瓢箪();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				織田／第Ｘの瓢箪();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				織田／天志教事件開始();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				織田／比叡山焼き討ち();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				織田／門徒の反乱Ａ();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				織田／門徒の反乱Ｂ();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				織田／カオスの話();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				本能寺の変Ａ();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				本能寺の変Ｂ();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				本能寺の変Ｃ();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				本能寺の変Ｄ();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				織田／織田家分裂();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				織田／信長抹殺計画();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				人望の杖();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				織田／汎用会話２１();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				織田／汎用会話２２();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				信長を殺しに行く／返り討ち();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				織田／義勇団１();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				織田／義勇団２();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				学徒動員();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				学徒動員／汎用();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				織田／宣戦布告の仕方();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				本能寺／初();
				break;
			case 43:
				WP_SET_COLOR(0, 0, 0);
				本能寺／汎用();
				break;
			case 44:
				WP_SET_COLOR(0, 0, 0);
				本能寺／煉獄();
				break;
			case 45:
				WP_SET_COLOR(0, 0, 0);
				本能寺／香姫行方不明中();
				break;
			case 46:
				WP_SET_COLOR(0, 0, 0);
				本能寺／魔人の巣Ａ();
				break;
			case 47:
				WP_SET_COLOR(0, 0, 0);
				本能寺／魔人の巣Ｂ();
				break;
			case 48:
				WP_SET_COLOR(0, 0, 0);
				本能寺／空っぽ();
				break;
			case 49:
				WP_SET_COLOR(0, 0, 0);
				本能寺／式部Ａ();
				break;
			case 50:
				WP_SET_COLOR(0, 0, 0);
				本能寺／式部Ｂ();
				break;
			case 51:
				WP_SET_COLOR(0, 0, 0);
				本能寺／式部Ｃ();
				break;
			case 52:
				WP_SET_COLOR(0, 0, 0);
				ランス屋敷／汎用();
				break;
			case 53:
				WP_SET_COLOR(0, 0, 0);
				尾張を取られた();
				break;
			case 54:
				WP_SET_COLOR(0, 0, 0);
				本能寺の変ＢＢ();
				break;
			case 55:
				WP_SET_COLOR(0, 0, 0);
				コパ傭兵団到着();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／魔人()
{
	while (true)
	{
		MENU_ADD(1, "煉獄／登場", NULL);
		MENU_ADD(2, "式部／登場", NULL);
		MENU_ADD(3, "戯骸／登場／北条", NULL);
		MENU_ADD(4, "魔軍／強制登場予告", NULL);
		MENU_ADD(5, "魔軍／上杉壊滅", NULL);
		MENU_ADD(6, "魔軍／上杉壊滅／県政", NULL);
		MENU_ADD(7, "魔軍／武田壊滅", NULL);
		MENU_ADD(8, "魔軍／毛利壊滅", NULL);
		MENU_ADD(9, "魔軍／毛利壊滅／人間", NULL);
		MENU_ADD(10, "魔軍／北条壊滅", NULL);
		MENU_ADD(11, "魔軍／北条壊滅／マサコ", NULL);
		MENU_ADD(12, "魔軍／伊賀壊滅", NULL);
		MENU_ADD(13, "魔軍／明石壊滅", NULL);
		MENU_ADD(14, "魔軍／足利壊滅", NULL);
		MENU_ADD(15, "魔軍／魂縛り１", NULL);
		MENU_ADD(16, "魔軍／魂縛り２", NULL);
		MENU_ADD(17, "魔軍／巫女機関壊滅", NULL);
		MENU_ADD(18, "魔軍／タクガ壊滅", NULL);
		MENU_ADD(19, "魔軍／３Ｇの助言", NULL);
		MENU_ADD(20, "魔軍／攻撃開始", NULL);
		MENU_ADD(21, "魔軍／兵数激減", NULL);
		MENU_ADD(22, "魔軍／魔物参入", NULL);
		MENU_ADD(23, "魔軍／魔物将軍イスン", NULL);
		MENU_ADD(24, "魔軍／魔物将軍ベプチョ", NULL);
		MENU_ADD(25, "魔軍／魔物将軍ウィスピン", NULL);
		MENU_ADD(26, "魔軍／ランスを殺さない訳", NULL);
		MENU_ADD(27, "藤吉郎と瓢箪", NULL);
		MENU_ADD(28, "魔軍／ヨシヒサの作戦", NULL);
		MENU_ADD(29, "魔軍／ヨシヒサ強襲Ａ", NULL);
		MENU_ADD(30, "魔軍／ヨシヒサ強襲Ｂ", NULL);
		MENU_ADD(31, "魔軍／ヨシヒサ強襲Ｃ", NULL);
		MENU_ADD(32, "魔軍／ヨシヒサ強襲Ｄ", NULL);
		MENU_ADD(33, "魔軍／トシヒサ防衛Ａ", NULL);
		MENU_ADD(34, "魔軍／トシヒサ防衛Ｂ", NULL);
		MENU_ADD(35, "魔軍／イエヒサ防衛Ａ", NULL);
		MENU_ADD(36, "魔軍／イエヒサ防衛Ｂ", NULL);
		MENU_ADD(37, "魔軍／イエヒサ防衛Ｃ", NULL);
		MENU_ADD(38, "魔軍／カズヒサの死", NULL);
		MENU_ADD(39, "魔軍／鈴女の助言", NULL);
		MENU_ADD(40, "魔軍／美樹暴走情報", NULL);
		MENU_ADD(41, "魔軍／美樹が支配者", NULL);
		MENU_ADD(42, "魔王／終わりの始まり", NULL);
		MENU_ADD(43, "魔王／健太郎スカウト／人間", NULL);
		MENU_ADD(44, "魔王／健太郎スカウト／魔人", NULL);
		MENU_ADD(45, "魔王／ホーネットからの手紙", NULL);
		MENU_ADD(46, "魔王／ケイブリスからの手紙", NULL);
		MENU_ADD(47, "魔王／崩壊", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				煉獄／登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				式部／登場();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				戯骸／登場／北条();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				魔軍／強制登場予告();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				魔軍／上杉壊滅();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				魔軍／上杉壊滅／県政();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				魔軍／武田壊滅();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				魔軍／毛利壊滅();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				魔軍／毛利壊滅／人間();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				魔軍／北条壊滅();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				魔軍／北条壊滅／マサコ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				魔軍／伊賀壊滅();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				魔軍／明石壊滅();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				魔軍／足利壊滅();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				魔軍／魂縛り１();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				魔軍／魂縛り２();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				魔軍／巫女機関壊滅();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				魔軍／タクガ壊滅();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				魔軍／３Ｇの助言();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				魔軍／攻撃開始();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				魔軍／兵数激減();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				魔軍／魔物参入();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				魔軍／魔物将軍イスン();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				魔軍／魔物将軍ベプチョ();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				魔軍／魔物将軍ウィスピン();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				魔軍／ランスを殺さない訳();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				藤吉郎と瓢箪();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				魔軍／ヨシヒサの作戦();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				魔軍／ヨシヒサ強襲Ａ();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				魔軍／ヨシヒサ強襲Ｂ();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				魔軍／ヨシヒサ強襲Ｃ();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				魔軍／ヨシヒサ強襲Ｄ();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				魔軍／トシヒサ防衛Ａ();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				魔軍／トシヒサ防衛Ｂ();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				魔軍／イエヒサ防衛Ａ();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				魔軍／イエヒサ防衛Ｂ();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				魔軍／イエヒサ防衛Ｃ();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				魔軍／カズヒサの死();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				魔軍／鈴女の助言();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				魔軍／美樹暴走情報();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				魔軍／美樹が支配者();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				魔王／終わりの始まり();
				break;
			case 43:
				WP_SET_COLOR(0, 0, 0);
				魔王／健太郎スカウト／人間();
				break;
			case 44:
				WP_SET_COLOR(0, 0, 0);
				魔王／健太郎スカウト／魔人();
				break;
			case 45:
				WP_SET_COLOR(0, 0, 0);
				魔王／ホーネットからの手紙();
				break;
			case 46:
				WP_SET_COLOR(0, 0, 0);
				魔王／ケイブリスからの手紙();
				break;
			case 47:
				WP_SET_COLOR(0, 0, 0);
				魔王／崩壊();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／明石()
{
	while (true)
	{
		MENU_ADD(1, "明石／少年の国", NULL);
		MENU_ADD(2, "明石／宣戦布告", NULL);
		MENU_ADD(3, "明石／安部平三の死", NULL);
		MENU_ADD(4, "明石／朝比奈百万の死", NULL);
		MENU_ADD(5, "明石／ぬへ始動", NULL);
		MENU_ADD(6, "明石／生野の戦い", NULL);
		MENU_ADD(7, "明石／縄取の戦い", NULL);
		MENU_ADD(8, "明石／夕餉の日常", NULL);
		MENU_ADD(9, "明石／夕餉の戦い", NULL);
		MENU_ADD(10, "明石／火鉢を逃がす", NULL);
		MENU_ADD(12, "明石／降伏受け入れ", NULL);
		MENU_ADD(13, "明石／瓢箪略奪", NULL);
		MENU_ADD(14, "明石／織田へ宣戦布告", NULL);
		MENU_ADD(11, "明石／陥落", NULL);
		MENU_ADD(15, "明石／陥落Ｂ", NULL);
		MENU_ADD(16, "明石／陥落Ｃ", NULL);
		MENU_ADD(17, "明石／陥落Ｄ", NULL);
		MENU_ADD(18, "明石／ボーナスエロ", NULL);
		MENU_ADD(19, "明石／開戦準備", NULL);
		MENU_ADD(20, "明石／裏工作", NULL);
		MENU_ADD(21, "明石／織田へ宣戦布告２", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				明石／少年の国();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				明石／宣戦布告();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				明石／安部平三の死();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				明石／朝比奈百万の死();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				明石／ぬへ始動();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				明石／生野の戦い();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				明石／縄取の戦い();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				明石／夕餉の日常();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				明石／夕餉の戦い();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				明石／火鉢を逃がす();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				明石／陥落();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				明石／降伏受け入れ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				明石／瓢箪略奪();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				明石／織田へ宣戦布告();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				明石／陥落Ｂ();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				明石／陥落Ｃ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				明石／陥落Ｄ();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				明石／ボーナスエロ();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				明石／開戦準備();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				明石／裏工作();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				明石／織田へ宣戦布告２();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／今川()
{
	while (true)
	{
		MENU_ADD(1, "今川／初登場", NULL);
		MENU_ADD(2, "今川／日常１", NULL);
		MENU_ADD(3, "今川／日常２", NULL);
		MENU_ADD(4, "今川／日常３", NULL);
		MENU_ADD(5, "今川／義元の秘密", NULL);
		MENU_ADD(6, "今川／上洛計画１", NULL);
		MENU_ADD(7, "今川／上洛計画２", NULL);
		MENU_ADD(8, "今川／上洛計画３Ａ", NULL);
		MENU_ADD(9, "今川／上洛計画３Ｂ", NULL);
		MENU_ADD(10, "今川／上洛計画３Ｃ", NULL);
		MENU_ADD(11, "今川／上洛計画４Ａ", NULL);
		MENU_ADD(12, "今川／上洛計画４Ｂ", NULL);
		MENU_ADD(13, "今川／上洛計画４Ｃ", NULL);
		MENU_ADD(14, "今川／義元と接触Ａ", NULL);
		MENU_ADD(15, "今川／義元と接触Ｂ", NULL);
		MENU_ADD(16, "今川／義元と接触Ｃ", NULL);
		MENU_ADD(17, "今川／宣戦布告", NULL);
		MENU_ADD(18, "今川／陥落／情報無し", NULL);
		MENU_ADD(19, "今川／陥落／情報有りＡ", NULL);
		MENU_ADD(22, "今川／織田に宣戦布告", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				今川／初登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				今川／日常１();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				今川／日常２();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				今川／日常３();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				今川／義元の秘密();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				今川／上洛計画１();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				今川／上洛計画２();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				今川／上洛計画３Ａ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				今川／上洛計画３Ｂ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				今川／上洛計画３Ｃ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				今川／上洛計画４Ａ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				今川／上洛計画４Ｂ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				今川／上洛計画４Ｃ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				今川／義元と接触Ａ();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				今川／義元と接触Ｂ();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				今川／義元と接触Ｃ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				今川／宣戦布告();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				今川／陥落／情報無し();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				今川／陥落／情報有りＡ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				今川／織田に宣戦布告();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／天志教()
{
	while (true)
	{
		MENU_ADD(1, "天志教／初", NULL);
		MENU_ADD(2, "天志教／月餅の触媒", NULL);
		MENU_ADD(3, "言裏／訪問", NULL);
		MENU_ADD(4, "天志教／比叡山の後始末", NULL);
		MENU_ADD(5, "天志教／魔人を知る", NULL);
		MENU_ADD(6, "天志教／陥落／信長", NULL);
		MENU_ADD(7, "天志教／陥落", NULL);
		MENU_ADD(8, "天志教／降伏受け入れ", NULL);
		MENU_ADD(9, "一揆／初めて", NULL);
		MENU_ADD(10, "一揆／汎用", NULL);
		MENU_ADD(11, "一揆／大暴れ", NULL);
		MENU_ADD(13, "天志教／三好の３人", NULL);
		MENU_ADD(14, "天志教／性眼の出撃", NULL);
		MENU_ADD(15, "天志教／性眼の怪我", NULL);
		MENU_ADD(16, "一揆／事前鎮圧", NULL);
		MENU_ADD(17, "ランスの天志教弾圧", NULL);
		MENU_ADD(19, "天志教／性眼ｖｓ煉獄", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				天志教／初();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				天志教／月餅の触媒();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				言裏／訪問();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				天志教／比叡山の後始末();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				天志教／魔人を知る();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				天志教／陥落／信長();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				天志教／陥落();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				天志教／降伏受け入れ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				一揆／初めて();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				一揆／汎用();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				一揆／大暴れ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				まんまる／陵辱();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				天志教／三好の３人();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				天志教／性眼の出撃();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				天志教／性眼の怪我();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				一揆／事前鎮圧();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				ランスの天志教弾圧();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				まんまる／陵辱２();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				天志教／性眼ｖｓ煉獄();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／北条()
{
	while (true)
	{
		MENU_ADD(1, "北条／登場", NULL);
		MENU_ADD(2, "北条／鬼退治", NULL);
		MENU_ADD(3, "北条／天下を目指さない理由", NULL);
		MENU_ADD(4, "北条／早雲と蘭", NULL);
		MENU_ADD(5, "北条／早雲の疲労", NULL);
		MENU_ADD(6, "蘭／式部と遭遇", NULL);
		MENU_ADD(7, "蘭／事故死", NULL);
		MENU_ADD(8, "蘭／朱雀召還", NULL);
		MENU_ADD(9, "蘭／早雲が朱雀を調べる　復活した", NULL);
		MENU_ADD(29, "蘭／早雲が朱雀を調べる　復活まだ", NULL);
		MENU_ADD(10, "北条／織田に宣戦布告", NULL);
		MENU_ADD(11, "北条／宣戦布告", NULL);
		MENU_ADD(12, "蘭／朱雀合戦後", NULL);
		MENU_ADD(13, "蘭／早雲のストップ", NULL);
		MENU_ADD(14, "北条／早雲の悲しみ", NULL);
		MENU_ADD(15, "北条／ミナモト発生", NULL);
		MENU_ADD(16, "北条／陥落／蘭健在", NULL);
		MENU_ADD(17, "北条／陥落／早雲健在", NULL);
		MENU_ADD(18, "北条／陥落", NULL);
		MENU_ADD(19, "北条／瓢箪略奪", NULL);
		MENU_ADD(20, "北条／瓢箪略奪／武田支配下", NULL);
		MENU_ADD(21, "北条／ボーナスエロ", NULL);
		MENU_ADD(22, "北条／和睦交渉Ａ", NULL);
		MENU_ADD(23, "北条／和睦交渉Ｂ", NULL);
		MENU_ADD(24, "北条／和睦交渉Ｃ", NULL);
		MENU_ADD(25, "北条／尾張の鬼退治Ａ", NULL);
		MENU_ADD(26, "北条／尾張の鬼退治Ｂ", NULL);
		MENU_ADD(27, "北条／尾張の鬼退治Ｃ", NULL);
		MENU_ADD(28, "北条／武田情報", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				北条／登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				北条／鬼退治();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				北条／天下を目指さない理由();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				北条／早雲と蘭();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				北条／早雲の疲労();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				蘭／式部と遭遇();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				蘭／事故死();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				蘭／朱雀召還();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				蘭／早雲が朱雀を調べる共通();
				蘭／早雲が朱雀を調べる／復活した();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				北条／織田に宣戦布告();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				北条／宣戦布告();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				蘭／朱雀合戦後();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				蘭／早雲のストップ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				北条／早雲の悲しみ();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				北条／ミナモト発生();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				北条／陥落／蘭健在();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				北条／陥落／早雲健在();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				北条／陥落();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				北条／瓢箪略奪();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				北条／瓢箪略奪／武田支配下();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				北条／ボーナスエロ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				北条／和睦交渉Ａ();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				北条／和睦交渉Ｂ();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				北条／和睦交渉Ｃ();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				北条／尾張の鬼退治Ａ();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				北条／尾張の鬼退治Ｂ();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				北条／尾張の鬼退治Ｃ();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				北条／武田情報();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				蘭／早雲が朱雀を調べる共通();
				蘭／早雲が朱雀を調べる／復活まだ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／徳川()
{
	while (true)
	{
		MENU_ADD(1, "徳川／初めて", NULL);
		MENU_ADD(2, "徳川／日常１", NULL);
		MENU_ADD(3, "徳川／日常２", NULL);
		MENU_ADD(4, "徳川／日常３", NULL);
		MENU_ADD(5, "徳川／宣戦布告", NULL);
		MENU_ADD(6, "徳川／今川家に援軍を", NULL);
		MENU_ADD(7, "徳川／忍者軍団", NULL);
		MENU_ADD(8, "徳川／陥落Ａ", NULL);
		MENU_ADD(9, "徳川／陥落Ｂ", NULL);
		MENU_ADD(10, "徳川／反旗／子狸", NULL);
		MENU_ADD(24, "徳川／反旗／人", NULL);
		MENU_ADD(11, "徳川／降伏受け入れ", NULL);
		MENU_ADD(12, "徳川／支配下１", NULL);
		MENU_ADD(13, "徳川／支配下２", NULL);
		MENU_ADD(14, "徳川／支配下３", NULL);
		MENU_ADD(15, "徳川／支配下４", NULL);
		MENU_ADD(16, "徳川／支配下５", NULL);
		MENU_ADD(17, "徳川／織田に宣戦布告／子狸", NULL);
		MENU_ADD(23, "徳川／織田に宣戦布告／人", NULL);
		MENU_ADD(18, "徳川／出陣", NULL);
		MENU_ADD(19, "徳川／伊達配下に", NULL);
		MENU_ADD(20, "徳川／家康の情報", NULL);
		MENU_ADD(21, "徳川／陥落Ａ２", NULL);
		MENU_ADD(22, "徳川／陥落Ｃ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				徳川／初めて();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				徳川／日常１();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				徳川／日常２();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				徳川／日常３();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				徳川／宣戦布告();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				徳川／今川家に援軍を();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				徳川／忍者軍団();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				徳川／陥落Ａ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				徳川／陥落Ｂ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				徳川／反旗／子狸();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				徳川／降伏受け入れ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				徳川／支配下１();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				徳川／支配下２();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				徳川／支配下３();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				徳川／支配下４();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				徳川／支配下５();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				徳川／織田に宣戦布告／子狸();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				徳川／出陣();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				徳川／伊達配下に();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				徳川／家康の情報();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				徳川／陥落Ａ２();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				徳川／陥落Ｃ();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				徳川／織田に宣戦布告／人();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				徳川／反旗／人();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／伊賀()
{
	while (true)
	{
		MENU_ADD(1, "伊賀／初登場", NULL);
		MENU_ADD(2, "伊賀／信長の情報", NULL);
		MENU_ADD(3, "伊賀／内乱鎮圧", NULL);
		MENU_ADD(4, "伊賀／宣戦布告", NULL);
		MENU_ADD(5, "伊賀／戦場の刺客", NULL);
		MENU_ADD(6, "伊賀／忍者ファイブ登場", NULL);
		MENU_ADD(7, "伊賀／陥落／鈴女", NULL);
		MENU_ADD(8, "伊賀／陥落", NULL);
		MENU_ADD(9, "伊賀／復活", NULL);
		MENU_ADD(10, "伊賀／瓢箪略奪", NULL);
		MENU_ADD(11, "伊賀／織田に宣戦布告", NULL);
		MENU_ADD(12, "伊賀／ゼス援軍", NULL);
		MENU_ADD(13, "伊賀／鈴女のその後", NULL);
		MENU_ADD(14, "伊賀／降伏受け入れ", NULL);
		MENU_ADD(15, "伊賀／瓢箪献上", NULL);
		MENU_ADD(16, "伊賀／わんわんトラップ", NULL);
		MENU_ADD(17, "大和／くのいち学校発見", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				伊賀／初登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				伊賀／信長の情報();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				伊賀／内乱鎮圧();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				伊賀／宣戦布告();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				伊賀／戦場の刺客();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				伊賀／忍者ファイブ登場();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				伊賀／陥落／鈴女();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				伊賀／陥落();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				伊賀／復活();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				伊賀／瓢箪略奪();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				伊賀／織田に宣戦布告();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				伊賀／ゼス援軍();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				伊賀／鈴女のその後();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				伊賀／降伏受け入れ();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				伊賀／瓢箪献上();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				伊賀／わんわんトラップ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				大和／くのいち学校発見();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／種子島()
{
	while (true)
	{
		MENU_ADD(1, "種子島／初めて", NULL);
		MENU_ADD(2, "種子島／毛利に販売", NULL);
		MENU_ADD(3, "種子島／島津に販売", NULL);
		MENU_ADD(4, "種子島／織田に販売", NULL);
		MENU_ADD(5, "種子島／織田に販売汎用", NULL);
		MENU_ADD(6, "種子島／織田に販売／買う", NULL);
		MENU_ADD(7, "種子島／織田に販売／買わない", NULL);
		MENU_ADD(8, "種子島／宣戦布告", NULL);
		MENU_ADD(9, "種子島／重彦の逆恨み１", NULL);
		MENU_ADD(10, "種子島／重彦の逆恨み２", NULL);
		MENU_ADD(11, "種子島／陥落", NULL);
		MENU_ADD(12, "柚原／出陣", NULL);
		MENU_ADD(13, "種子島／カオスエロ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				種子島／初めて();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				種子島／毛利に販売();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				種子島／島津に販売();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				種子島／織田に販売();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				種子島／織田に販売汎用();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				種子島／織田に販売／買う();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				種子島／織田に販売／買わない();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				種子島／宣戦布告();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				種子島／重彦の逆恨み１();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				種子島／重彦の逆恨み２();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				種子島／陥落();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				柚原／出陣();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				種子島／カオスエロ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／上杉()
{
	while (true)
	{
		MENU_ADD(1, "上杉／初登場", NULL);
		MENU_ADD(2, "上杉／他国援軍初", NULL);
		MENU_ADD(3, "上杉／他国援軍汎用", NULL);
		MENU_ADD(4, "上杉／宣戦布告", NULL);
		MENU_ADD(5, "上杉／ランスｖｓ謙信", NULL);
		MENU_ADD(6, "上杉／ランスｖｓ謙信汎用", NULL);
		MENU_ADD(7, "上杉／謙信の一目惚れ", NULL);
		MENU_ADD(8, "上杉／謙信の結婚相手", NULL);
		MENU_ADD(9, "上杉／謙信の決意", NULL);
		MENU_ADD(10, "上杉／夜襲", NULL);
		MENU_ADD(11, "上杉／反乱軍発生Ａ", NULL);
		MENU_ADD(12, "上杉／反乱軍発生Ｂ", NULL);
		MENU_ADD(13, "上杉／反乱軍発生Ｃ", NULL);
		MENU_ADD(14, "上杉／反乱軍その後", NULL);
		MENU_ADD(15, "上杉／陥落／謙信無し", NULL);
		MENU_ADD(16, "上杉／陥落", NULL);
		MENU_ADD(17, "上杉／瓢箪略奪", NULL);
		MENU_ADD(18, "上杉／瓢箪略奪／武田支配下", NULL);
		MENU_ADD(19, "上杉／織田へ宣戦布告", NULL);
		MENU_ADD(20, "上杉／織田援軍初", NULL);
		MENU_ADD(21, "上杉／織田援軍汎用", NULL);
		MENU_ADD(22, "県政／捕虜謙信／汎用", NULL);
		MENU_ADD(23, "県政／捕虜謙信愛／汎用", NULL);
		MENU_ADD(24, "上杉／反乱軍経過", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				上杉／初登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				上杉／他国援軍初();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				上杉／他国援軍汎用();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				上杉／宣戦布告();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				上杉／ランスｖｓ謙信();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				上杉／ランスｖｓ謙信汎用();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				上杉／謙信の一目惚れ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				上杉／謙信の結婚相手();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				上杉／謙信の決意();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				上杉／夜襲();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				上杉／反乱軍発生Ａ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				上杉／反乱軍発生Ｂ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				上杉／反乱軍発生Ｃ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				上杉／反乱軍その後();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				上杉／陥落／謙信無し();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				上杉／陥落();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				上杉／瓢箪略奪();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				上杉／瓢箪略奪／武田支配下();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				上杉／織田へ宣戦布告();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				上杉／織田援軍初();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				上杉／織田援軍汎用();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				県政／捕虜謙信／汎用();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				県政／捕虜謙信愛／汎用();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				上杉／反乱軍経過();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／毛利()
{
	while (true)
	{
		MENU_ADD(1, "毛利／明石攻撃", NULL);
		MENU_ADD(2, "毛利／元就と三姉妹", NULL);
		MENU_ADD(3, "毛利／日常１", NULL);
		MENU_ADD(4, "毛利／日常２", NULL);
		MENU_ADD(5, "毛利／日常３", NULL);
		MENU_ADD(6, "毛利／娘を失って", NULL);
		MENU_ADD(7, "毛利／陥落／呪い付きＡ", NULL);
		MENU_ADD(8, "毛利／陥落／呪い付きＢ", NULL);
		MENU_ADD(14, "毛利／元就の呪いが解ける", NULL);
		MENU_ADD(9, "毛利／陥落Ａ", NULL);
		MENU_ADD(10, "毛利／陥落Ｂ", NULL);
		MENU_ADD(11, "毛利／宣戦布告", NULL);
		MENU_ADD(12, "毛利／瓢箪略奪", NULL);
		MENU_ADD(13, "毛利姉妹４Ｐ", NULL);
		MENU_ADD(15, "毛利／瓢箪略奪", NULL);
		MENU_ADD(16, "毛利／種子島占領", NULL);
		MENU_ADD(17, "毛利／開戦準備", NULL);
		MENU_ADD(18, "毛利／裏工作", NULL);
		MENU_ADD(19, "毛利／織田に宣戦布告", NULL);
		MENU_ADD(20, "毛利／大決戦準備", NULL);
		MENU_ADD(21, "毛利／大決戦汎用", NULL);
		MENU_ADD(22, "毛利／大決戦ＮＯ", NULL);
		MENU_ADD(23, "毛利／大決戦Ａ", NULL);
		MENU_ADD(24, "毛利／大決戦Ｂ", NULL);
		MENU_ADD(25, "毛利／大決戦Ｃ", NULL);
		MENU_ADD(26, "毛利／魔軍情報", NULL);
		MENU_ADD(27, "毛利／明石占領", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				毛利／明石攻撃();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				毛利／元就と三姉妹();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				毛利／日常１();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				毛利／日常２();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				毛利／日常３();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				毛利／娘を失って();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				毛利／陥落／呪い付きＡ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				毛利／陥落／呪い付きＢ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				毛利／陥落Ａ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				毛利／陥落Ｂ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				毛利／宣戦布告();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				毛利／瓢箪略奪();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				毛利姉妹４Ｐ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				毛利／元就の呪いが解ける();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				毛利／瓢箪略奪();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				毛利／種子島占領();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				毛利／開戦準備();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				毛利／裏工作();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				毛利／織田に宣戦布告();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				毛利／大決戦準備();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				毛利／大決戦汎用();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				毛利／大決戦ＮＯ();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				毛利／大決戦Ａ();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				毛利／大決戦Ｂ();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				毛利／大決戦Ｃ();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				毛利／魔軍情報();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				毛利／明石占領();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／タクガ()
{
	while (true)
	{
		MENU_ADD(1, "タクガ／独立", NULL);
		MENU_ADD(2, "タクガ／鬼の住む大地", NULL);
		MENU_ADD(3, "タクガ／死国門突破作戦", NULL);
		MENU_ADD(4, "タクガ／中っ国奪取", NULL);
		MENU_ADD(5, "タクガ／毛利と同盟", NULL);
		MENU_ADD(6, "タクガ／妖怪退治開始", NULL);
		MENU_ADD(7, "タクガ／妖怪退治１", NULL);
		MENU_ADD(8, "タクガ／鬼の陵辱", NULL);
		MENU_ADD(9, "タクガ／未来の望み", NULL);
		MENU_ADD(10, "タクガ／宣戦布告", NULL);
		MENU_ADD(11, "タクガ／中っ国を追われる譲", NULL);
		MENU_ADD(12, "タクガ／ピンチ美禰", NULL);
		MENU_ADD(13, "タクガ／陥落Ａゴン", NULL);
		MENU_ADD(14, "タクガ／陥落Ｂ", NULL);
		MENU_ADD(15, "タクガ／開戦準備", NULL);
		MENU_ADD(16, "タクガ／織田に宣戦布告", NULL);
		MENU_ADD(17, "タクガ／裏工作", NULL);
		MENU_ADD(18, "タクガ／中っ国を追われる譲なし", NULL);
		MENU_ADD(19, "タクガ／ピンチ美禰なし", NULL);
		MENU_ADD(20, "タクガ／陥落Ａゴンなし", NULL);
		MENU_ADD(21, "タクガ／死国門封鎖Ａ", NULL);
		MENU_ADD(22, "タクガ／死国門封鎖Ｂ", NULL);
		MENU_ADD(23, "タクガ／死国門封鎖Ｃ", NULL);
		MENU_ADD(24, "タクガ／封鎖中１", NULL);
		MENU_ADD(25, "タクガ／封鎖中２", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				タクガ／独立();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				タクガ／鬼の住む大地();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				タクガ／死国門突破作戦();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				タクガ／中っ国奪取();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				タクガ／毛利と同盟();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				タクガ／妖怪退治開始();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				タクガ／妖怪退治１();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				タクガ／鬼の陵辱();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				タクガ／未来の望み();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				タクガ／宣戦布告();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				タクガ／中っ国を追われる譲();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				タクガ／ピンチ美禰();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				タクガ／陥落Ａゴン();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				タクガ／陥落Ｂ();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				タクガ／開戦準備();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				タクガ／織田に宣戦布告();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				タクガ／裏工作();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				タクガ／中っ国を追われる譲なし();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				タクガ／ピンチ美禰なし();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				タクガ／陥落Ａゴンなし();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				タクガ／死国門封鎖Ａ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				タクガ／死国門封鎖Ｂ();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				タクガ／死国門封鎖Ｃ();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				タクガ／封鎖中１();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				タクガ／封鎖中２();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／原()
{
	while (true)
	{
		MENU_ADD(1, "原／宣戦布告", NULL);
		MENU_ADD(2, "原／宣戦布告／神原からの場合", NULL);
		MENU_ADD(3, "原／呉服屋", NULL);
		MENU_ADD(4, "原／餅漬", NULL);
		MENU_ADD(5, "原／汚れの日", NULL);
		MENU_ADD(6, "原／降伏受け入れ", NULL);
		MENU_ADD(7, "原／陥落Ａ", NULL);
		MENU_ADD(8, "原／陥落Ｂ", NULL);
		MENU_ADD(9, "原／陥落Ｃ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				神原／宣戦布告();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				神原／宣戦布告／神原からの場合();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				神原／呉服屋();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				神原／餅漬();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				神原／汚れの日();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				神原／降伏受け入れ();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				神原／陥落Ａ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				神原／陥落Ｂ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				神原／陥落Ｃ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／浅井朝倉()
{
	while (true)
	{
		MENU_ADD(1, "ＡＡ／初めて", NULL);
		MENU_ADD(2, "ＡＡ／日常１", NULL);
		MENU_ADD(3, "ＡＡ／日常２", NULL);
		MENU_ADD(4, "ＡＡ／日常３", NULL);
		MENU_ADD(5, "ＡＡ／宣戦布告", NULL);
		MENU_ADD(6, "ＡＡ／義景の動揺", NULL);
		MENU_ADD(7, "ＡＡ／降伏受け入れ", NULL);
		MENU_ADD(8, "ＡＡ／発禁堕山登場", NULL);
		MENU_ADD(9, "ＡＡ／パンダ襲撃", NULL);
		MENU_ADD(10, "ＡＡ／パンダ襲撃汎用", NULL);
		MENU_ADD(11, "ＡＡ／発禁堕山と雪姫", NULL);
		MENU_ADD(12, "ＡＡ／雪姫の願い", NULL);
		MENU_ADD(13, "ＡＡ／陥落", NULL);
		MENU_ADD(14, "ＡＡ／織田へ宣戦布告", NULL);
		MENU_ADD(15, "ＡＡ／テキサス大地震", NULL);
		MENU_ADD(16, "ＡＡ／大地震に付け込む", NULL);
		MENU_ADD(17, "ＡＡ／交渉接触Ａ", NULL);
		MENU_ADD(18, "ＡＡ／交渉接触Ｂ", NULL);
		MENU_ADD(19, "ＡＡ／交渉接触Ｃ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／初めて();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／日常１();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／日常２();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／日常３();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／宣戦布告();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／義景の動揺();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／降伏受け入れ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／発禁堕山登場();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／パンダ襲撃();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／パンダ襲撃汎用();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／発禁堕山と雪姫();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／雪姫の願い();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／陥落();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／織田へ宣戦布告();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／テキサス大地震();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／大地震に付け込む();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／交渉接触Ａ();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／交渉接触Ｂ();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				ＡＡ／交渉接触Ｃ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／巫女機関()
{
	while (true)
	{
		MENU_ADD(1, "巫女／巫女機関の噂", NULL);
		MENU_ADD(2, "巫女／初訪問", NULL);
		MENU_ADD(3, "巫女／訪問２度目", NULL);
		MENU_ADD(4, "巫女／訪問汎用", NULL);
		MENU_ADD(5, "巫女／宣戦布告", NULL);
		MENU_ADD(6, "巫女／陥落", NULL);
		MENU_ADD(7, "巫女／織田の神社／シィル", NULL);
		MENU_ADD(8, "巫女／オロチの話", NULL);
		MENU_ADD(9, "巫女／地震", NULL);
		MENU_ADD(10, "巫女／２人の巫女", NULL);
		MENU_ADD(11, "巫女／最後の援軍", NULL);
		MENU_ADD(12, "巫女／織田の神社／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				巫女／巫女機関の噂();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				巫女／初訪問();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				巫女／訪問２度目();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				巫女／訪問汎用();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				巫女／宣戦布告();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				巫女／陥落();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				巫女／織田の神社／シィル();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				巫女／オロチの話();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				巫女／地震();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				巫女／２人の巫女();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				巫女／最後の援軍();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				巫女／織田の神社／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／武田()
{
	while (true)
	{
		MENU_ADD(1, "武田／初登場", NULL);
		MENU_ADD(2, "武田／最初の軍議", NULL);
		MENU_ADD(3, "武田／ｖｓ上杉１", NULL);
		MENU_ADD(4, "武田／ｖｓ北条１", NULL);
		MENU_ADD(5, "武田／ｖｓ北条２", NULL);
		MENU_ADD(6, "武田／ｖｓ上杉汎用", NULL);
		MENU_ADD(7, "武田／ｖｓ北条汎用", NULL);
		MENU_ADD(8, "武田／信玄の誕生日", NULL);
		MENU_ADD(9, "武田／上杉征伐１", NULL);
		MENU_ADD(10, "武田／上杉征伐２", NULL);
		MENU_ADD(11, "武田／北条征伐１", NULL);
		MENU_ADD(12, "武田／北条征伐２", NULL);
		MENU_ADD(13, "武田／今川征伐", NULL);
		MENU_ADD(14, "武田／織田に宣戦布告", NULL);
		MENU_ADD(15, "武田／宣戦布告", NULL);
		MENU_ADD(16, "武田／降伏受け入れ", NULL);
		MENU_ADD(17, "武田／瓢箪献上", NULL);
		MENU_ADD(18, "武田／大攻勢前", NULL);
		MENU_ADD(19, "武田／高坂隊１", NULL);
		MENU_ADD(20, "武田／真田隊１", NULL);
		MENU_ADD(21, "武田／馬場隊１", NULL);
		MENU_ADD(22, "武田／山県隊１", NULL);
		MENU_ADD(23, "武田／信玄隊１", NULL);
		MENU_ADD(24, "武田／高坂隊汎用", NULL);
		MENU_ADD(25, "武田／真田隊汎用", NULL);
		MENU_ADD(26, "武田／馬場隊汎用", NULL);
		MENU_ADD(27, "武田／山県隊汎用", NULL);
		MENU_ADD(28, "武田／信玄隊汎用", NULL);
		MENU_ADD(29, "織田／武田大攻勢の後", NULL);
		MENU_ADD(30, "織田／騎馬軍団対策／マリア", NULL);
		MENU_ADD(31, "織田／騎馬軍団対策／重彦", NULL);
		MENU_ADD(32, "武田／騎馬対策後", NULL);
		MENU_ADD(33, "武田／残り１国", NULL);
		MENU_ADD(34, "武田／もっこの対策", NULL);
		MENU_ADD(35, "武田／陥落１", NULL);
		MENU_ADD(36, "武田／陥落２", NULL);
		MENU_ADD(37, "武田／開戦準備", NULL);
		MENU_ADD(38, "武田／裏工作", NULL);
		MENU_ADD(39, "武田／瓢箪略奪", NULL);
		MENU_ADD(40, "武田／大攻勢撃退", NULL);
		MENU_ADD(41, "武田／信玄の暗殺計画", NULL);
		MENU_ADD(42, "武田／信玄の居場所", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				武田／初登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				武田／最初の軍議();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				武田／ｖｓ上杉１();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				武田／ｖｓ北条１();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				武田／ｖｓ北条２();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				武田／ｖｓ上杉汎用();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				武田／ｖｓ北条汎用();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				武田／信玄の誕生日();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				武田／上杉征伐１();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				武田／上杉征伐２();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				武田／北条征伐１();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				武田／北条征伐２();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				武田／今川征伐();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				武田／織田に宣戦布告();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				武田／宣戦布告();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				武田／降伏受け入れ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				武田／瓢箪献上();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				武田／大攻勢前();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				武田／高坂隊１();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				武田／真田隊１();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				武田／馬場隊１();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				武田／山県隊１();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				武田／信玄隊１();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				武田／高坂隊汎用();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				武田／真田隊汎用();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				武田／馬場隊汎用();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				武田／山県隊汎用();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				武田／信玄隊汎用();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				織田／武田大攻勢の後();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				織田／騎馬軍団対策／マリア();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				織田／騎馬軍団対策／重彦();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				武田／騎馬対策後();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				武田／残り１国();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				武田／もっこの対策();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				武田／陥落１();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				武田／陥落２();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				武田／開戦準備();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				武田／裏工作();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				武田／瓢箪略奪();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				武田／大攻勢撃退();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				武田／信玄の暗殺計画();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				武田／信玄の居場所();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／島津()
{
	while (true)
	{
		MENU_ADD(1, "島津／初登場", NULL);
		MENU_ADD(2, "ヨシヒサ／出陣", NULL);
		MENU_ADD(3, "カズヒサ／出陣", NULL);
		MENU_ADD(4, "トシヒサ／出陣", NULL);
		MENU_ADD(5, "イエヒサ／出陣", NULL);
		MENU_ADD(23, "島津／天下を目指す", NULL);
		MENU_ADD(6, "島津／合戦初めて", NULL);
		MENU_ADD(7, "島津／その頃１", NULL);
		MENU_ADD(8, "島津／その頃２", NULL);
		MENU_ADD(9, "島津／その頃３", NULL);
		MENU_ADD(10, "島津／毛利合併", NULL);
		MENU_ADD(11, "島津／タクガ合併", NULL);
		MENU_ADD(12, "島津／種子島合併", NULL);
		MENU_ADD(13, "島津／香姫かどわかし", NULL);
		MENU_ADD(14, "鈴女／島津への注意", NULL);
		MENU_ADD(15, "島津／引き抜き", NULL);
		MENU_ADD(18, "島津／４兄妹の降参", NULL);
		MENU_ADD(19, "島津／４兄弟来る", NULL);
		MENU_ADD(20, "島津／陥落Ａ", NULL);
		MENU_ADD(21, "島津／陥落Ｂ", NULL);
		MENU_ADD(22, "島津／陥落Ｃ", NULL);
		MENU_ADD(24, "島津／織田隣接", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				島津／初登場();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				ヨシヒサ／出陣();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／出陣();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				トシヒサ／出陣();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				イエヒサ／出陣();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				島津／合戦初めて();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				島津／その頃１();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				島津／その頃２();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				島津／その頃３();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				島津／毛利合併();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				島津／タクガ合併();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				島津／種子島合併();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				島津／香姫かどわかし();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				鈴女／島津への注意();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				島津／引き抜き();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				島津／４兄妹の降参();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				島津／４兄弟来る();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				島津／陥落Ａ();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				島津／陥落Ｂ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				島津／陥落Ｃ();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				島津／天下を目指す();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				島津／織田隣接();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／伊達()
{
	while (true)
	{
		MENU_ADD(1, "伊達／開始", NULL);
		MENU_ADD(2, "伊達／妖怪帝国について聞く", NULL);
		MENU_ADD(3, "坂上田村麻呂／遭遇", NULL);
		MENU_ADD(4, "坂上田村麻呂／撃破", NULL);
		MENU_ADD(5, "伊達／宣戦布告", NULL);
		MENU_ADD(7, "伊達／停戦協定", NULL);
		MENU_ADD(8, "伊達／日常１", NULL);
		MENU_ADD(9, "伊達／日常２", NULL);
		MENU_ADD(10, "伊達／日常３", NULL);
		MENU_ADD(11, "伊達／政宗の弱点", NULL);
		MENU_ADD(12, "伊達／ラストバトルＡ", NULL);
		MENU_ADD(13, "伊達／ラストバトルＢ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				伊達／開始();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				伊達／妖怪帝国について聞く();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				坂上田村麻呂／遭遇();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				坂上田村麻呂／撃破();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				伊達／宣戦布告();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				伊達／停戦協定();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				伊達／日常１();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				伊達／日常２();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				伊達／日常３();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				伊達／政宗の弱点();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				伊達／ラストバトルＡ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				伊達／ラストバトルＢ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／地域()
{
	while (true)
	{
		MENU_ADD(1, "ＭＡＺＯ／無敵のお守り", NULL);
		MENU_ADD(2, "信濃／丹下犬", NULL);
		MENU_ADD(3, "柚原／人面犬の噂", NULL);
		MENU_ADD(4, "阿樹／人面犬の噂", NULL);
		MENU_ADD(5, "甲斐／人面犬の噂", NULL);
		MENU_ADD(6, "さいたま／人面犬の噂", NULL);
		MENU_ADD(7, "テキサス／お勉強穴／発見", NULL);
		MENU_ADD(8, "尾張／ボタン狩りＡ", NULL);
		MENU_ADD(9, "尾張／ボタン狩りＢ", NULL);
		MENU_ADD(10, "佐渡／ボタン狩りＡ", NULL);
		MENU_ADD(11, "佐渡／ボタン狩りＢ", NULL);
		MENU_ADD(12, "さいたま／猿狩りＡ", NULL);
		MENU_ADD(13, "さいたま／猿狩りＢ", NULL);
		MENU_ADD(14, "姫路／猿狩りＡ", NULL);
		MENU_ADD(15, "姫路／猿狩りＢ", NULL);
		MENU_ADD(16, "中っ国／パンダ狩りＡ", NULL);
		MENU_ADD(17, "中っ国／パンダ狩りＢ", NULL);
		MENU_ADD(18, "上総／パンダ狩りＡ", NULL);
		MENU_ADD(19, "上総／パンダ狩りＢ", NULL);
		MENU_ADD(20, "まんぼう狩りＡ", NULL);
		MENU_ADD(21, "まんぼう狩りＢ", NULL);
		MENU_ADD(22, "捕虜がいっぱいです", NULL);
		MENU_ADD(23, "蜜柑／ヒラミレモンを拾う", NULL);
		MENU_ADD(24, "迷宮前／汎用", NULL);
		MENU_ADD(25, "迷宮内／脱出", NULL);
		MENU_ADD(26, "伊勢／真珠迷宮／発見", NULL);
		MENU_ADD(27, "京／竜宮城／発見", NULL);
		MENU_ADD(28, "佐渡／佐渡金山／発見", NULL);
		MENU_ADD(29, "ＭＡＺＯ／ＳＭ迷宮／発見", NULL);
		MENU_ADD(30, "上総／里見帝国／発見", NULL);
		MENU_ADD(31, "江戸／魔界都市／発見", NULL);
		MENU_ADD(32, "貝／貝塚／発見", NULL);
		MENU_ADD(33, "三河／徳川埋蔵金／発見", NULL);
		MENU_ADD(34, "大和／平城京／発見", NULL);
		MENU_ADD(35, "なにわ／梅田地下街／発見", NULL);
		MENU_ADD(36, "丹波／丹波鉱山／発見", NULL);
		MENU_ADD(37, "姫路／虎の穴／発見", NULL);
		MENU_ADD(38, "戦艦長門／ビキニ観賞／発見", NULL);
		MENU_ADD(39, "忍者屋敷の建設", NULL);
		MENU_ADD(40, "黄泉平坂／帝の剣", NULL);
		MENU_ADD(41, "天満橋を渡るＡ", NULL);
		MENU_ADD(42, "天満橋を渡るＢ", NULL);
		MENU_ADD(43, "天満橋を渡るＣ", NULL);
		MENU_ADD(44, "天満橋を渡るＤ", NULL);
		MENU_ADD(45, "性転換１", NULL);
		MENU_ADD(46, "性転換Ａ", NULL);
		MENU_ADD(47, "性転換Ｂ１とＢ２", NULL);
		MENU_ADD(48, "性転換Ｃ", NULL);
		MENU_ADD(49, "性転換Ｄ", NULL);
		MENU_ADD(50, "鬼退治１", NULL);
		MENU_ADD(51, "鬼退治２", NULL);
		MENU_ADD(52, "竜宮城エロ１", NULL);
		MENU_ADD(53, "竜宮城エロ１Ａ", NULL);
		MENU_ADD(54, "竜宮城エロ２", NULL);
		MENU_ADD(55, "竜宮城エロ３", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				ＭＡＺＯ／無敵のお守り();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				信濃／丹下犬();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				柚原／人面犬の噂();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				阿樹／人面犬の噂();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				甲斐／人面犬の噂();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				さいたま／人面犬の噂();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				テキサス／お勉強穴／発見();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				尾張／ボタン狩りＡ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				尾張／ボタン狩りＢ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				佐渡／ボタン狩りＡ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				佐渡／ボタン狩りＢ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				さいたま／猿狩りＡ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				さいたま／猿狩りＢ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				姫路／猿狩りＡ();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				姫路／猿狩りＢ();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				中っ国／パンダ狩りＡ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				中っ国／パンダ狩りＢ();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				上総／パンダ狩りＡ();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				上総／パンダ狩りＢ();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				まんぼう狩りＡ();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				まんぼう狩りＢ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				捕虜がいっぱいです();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				蜜柑／ヒラミレモンを拾う();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				迷宮前／汎用();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				迷宮内／脱出();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				伊勢／真珠迷宮／発見();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				京／竜宮城／発見();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				佐渡／佐渡金山／発見();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				ＭＡＺＯ／ＳＭ迷宮／発見();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				上総／里見帝国／発見();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				江戸／魔界都市／発見();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				貝／貝塚／発見();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				三河／徳川埋蔵金／発見();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				大和／平城京／発見();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				なにわ／梅田地下街／発見();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				丹波／丹波鉱山／発見();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				姫路／虎の穴／発見();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				戦艦長門／ビキニ観賞／発見();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				忍者屋敷の建設();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				黄泉平坂／帝の剣();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				天満橋を渡るＡ();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				天満橋を渡るＢ();
				break;
			case 43:
				WP_SET_COLOR(0, 0, 0);
				天満橋を渡るＣ();
				break;
			case 44:
				WP_SET_COLOR(0, 0, 0);
				天満橋を渡るＤ();
				break;
			case 45:
				WP_SET_COLOR(0, 0, 0);
				性転換１();
				break;
			case 46:
				WP_SET_COLOR(0, 0, 0);
				性転換Ａ();
				break;
			case 47:
				WP_SET_COLOR(0, 0, 0);
				性転換Ｂ１();
				性転換Ｂ２();
				break;
			case 48:
				WP_SET_COLOR(0, 0, 0);
				性転換Ｃ();
				break;
			case 49:
				WP_SET_COLOR(0, 0, 0);
				性転換Ｄ();
				break;
			case 50:
				WP_SET_COLOR(0, 0, 0);
				鬼退治１();
				break;
			case 51:
				WP_SET_COLOR(0, 0, 0);
				鬼退治２();
				break;
			case 52:
				WP_SET_COLOR(0, 0, 0);
				竜宮城エロ１();
				break;
			case 53:
				WP_SET_COLOR(0, 0, 0);
				竜宮城エロ１Ａ();
				break;
			case 54:
				WP_SET_COLOR(0, 0, 0);
				竜宮城エロ２();
				break;
			case 55:
				WP_SET_COLOR(0, 0, 0);
				竜宮城エロ３();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／地域２()
{
	while (true)
	{
		MENU_ADD(1, "迷宮／味噌カツ迷宮／クリア", NULL);
		MENU_ADD(2, "伊勢／真珠迷宮／クリア", NULL);
		MENU_ADD(3, "テキサス／お勉強穴／クリア", NULL);
		MENU_ADD(4, "赤ヘル／赤壁迷宮／クリア", NULL);
		MENU_ADD(5, "三河／徳川埋蔵金／クリア", NULL);
		MENU_ADD(6, "陰陽学校の建設", NULL);
		MENU_ADD(7, "陰陽学校の見学", NULL);
		MENU_ADD(8, "鉄砲鍛冶場の見学", NULL);
		MENU_ADD(9, "忍者屋敷の見学", NULL);
		MENU_ADD(10, "足軽屋敷の建設", NULL);
		MENU_ADD(11, "足軽屋敷の見学", NULL);
		MENU_ADD(12, "江戸／黄金熊Ａ", NULL);
		MENU_ADD(13, "江戸／黄金熊Ｂ", NULL);
		MENU_ADD(14, "奥州／妖怪の宝", NULL);
		MENU_ADD(15, "出雲／黄泉平坂／発見", NULL);
		MENU_ADD(16, "赤ヘル／赤壁迷宮／発見", NULL);
		MENU_ADD(17, "大和／平城京／初", NULL);
		MENU_ADD(18, "大和／平城京／クリア", NULL);
		MENU_ADD(19, "６大秘宝", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				迷宮／味噌カツ迷宮／クリア();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				伊勢／真珠迷宮／クリア();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				テキサス／お勉強穴／クリア();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				赤ヘル／赤壁迷宮／クリア();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				三河／徳川埋蔵金／クリア();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				陰陽学校の建設();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				陰陽学校の見学();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				鉄砲鍛冶場の見学();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				忍者屋敷の見学();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				足軽屋敷の建設();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				足軽屋敷の見学();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				江戸／黄金熊Ａ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				江戸／黄金熊Ｂ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				奥州／妖怪の宝();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				出雲／黄泉平坂／発見();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				赤ヘル／赤壁迷宮／発見();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				大和／平城京／初();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				大和／平城京／クリア();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				６大秘宝();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／蘭ルート()
{
	while (true)
	{
		MENU_ADD(1, "蘭／ルートスタート", NULL);
		MENU_ADD(2, "蘭／早雲の見舞い", NULL);
		MENU_ADD(3, "蘭／早雲の見舞い／汎用", NULL);
		MENU_ADD(4, "蘭／早雲の見舞い／汎用２", NULL);
		MENU_ADD(5, "蘭／戯骸の影", NULL);
		MENU_ADD(6, "蘭／信長が魔人？", NULL);
		MENU_ADD(7, "蘭／本能寺Ａ", NULL);
		MENU_ADD(8, "蘭／本能寺Ｂ", NULL);
		MENU_ADD(9, "蘭／本能寺Ｃ", NULL);
		MENU_ADD(10, "蘭／本能寺の後", NULL);
		MENU_ADD(11, "蘭／ランスの誘い", NULL);
		MENU_ADD(12, "蘭／夜這い１", NULL);
		MENU_ADD(13, "蘭／傾国登場", NULL);
		MENU_ADD(14, "蘭／蘭と傾国", NULL);
		MENU_ADD(15, "蘭／いじめ", NULL);
		MENU_ADD(16, "蘭／傾国の噂", NULL);
		MENU_ADD(17, "蘭／傾国の噂２", NULL);
		MENU_ADD(18, "蘭／傾国出奔", NULL);
		MENU_ADD(19, "蘭／鬼を呼び出す", NULL);
		MENU_ADD(20, "蘭／地獄の穴が開いた", NULL);
		MENU_ADD(21, "蘭／鬼の来襲", NULL);
		MENU_ADD(22, "蘭／鬼の来襲／汎用", NULL);
		MENU_ADD(23, "蘭／傾国の居場所", NULL);
		MENU_ADD(24, "蘭／セキメイの墓／初", NULL);
		MENU_ADD(25, "蘭／ラストバトルＡ", NULL);
		MENU_ADD(26, "蘭／ラストバトルＢ", NULL);
		MENU_ADD(27, "蘭／夜這い２", NULL);
		MENU_ADD(28, "蘭／夜這い３", NULL);
		MENU_ADD(29, "蘭／早雲の見舞い／傾国", NULL);
		MENU_ADD(30, "蘭／早雲の見舞い／傾国汎用", NULL);
		MENU_ADD(31, "蘭／傾国出奔後", NULL);
		MENU_ADD(32, "地獄の穴／初めて", NULL);
		MENU_ADD(33, "地獄の穴／封鎖", NULL);
		MENU_ADD(34, "地獄の穴／汎用", NULL);
		MENU_ADD(35, "地獄の穴／封鎖／汎用", NULL);
		MENU_ADD(36, "地獄の穴／封鎖／ラスト", NULL);
		MENU_ADD(37, "鬼の来襲／負け", NULL);
		MENU_ADD(38, "蘭／早雲の見舞い／傾国汎用２", NULL);
		MENU_ADD(39, "蘭／傾国残念／穴塞ぎ", NULL);
		MENU_ADD(40, "蘭／傾国残念／鬼来襲", NULL);
		MENU_ADD(41, "蘭／傾国残念／全て塞がれた", NULL);
		MENU_ADD(42, "蘭／セキメイへの催促", NULL);
		MENU_ADD(43, "蘭／基本接触／早雲入院", NULL);
		MENU_ADD(44, "蘭／基本接触／傾国出奔", NULL);
		MENU_ADD(45, "蘭／信頼", NULL);
		MENU_ADD(46, "蘭／セキメイの墓／魔導Ａ", NULL);
		MENU_ADD(47, "蘭／セキメイの墓／魔導Ｂ", NULL);
		MENU_ADD(48, "蘭／セキメイの墓／魔導Ｃ", NULL);
		MENU_ADD(49, "蘭／愛情", NULL);
		MENU_ADD(50, "蘭／汎用エッチ", NULL);
		MENU_ADD(51, "蘭／エピローグＡ", NULL);
		MENU_ADD(52, "蘭／エピローグＢ", NULL);
		MENU_ADD(53, "蘭／ラストバトルＢＢ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				蘭／ルートスタート();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				蘭／早雲の見舞い();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				蘭／早雲の見舞い／汎用();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				蘭／早雲の見舞い／汎用２();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				蘭／戯骸の影();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				蘭／信長が魔人？();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				蘭／本能寺Ａ();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				蘭／本能寺Ｂ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				蘭／本能寺Ｃ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				蘭／本能寺の後();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				蘭／ランスの誘い();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				蘭／夜這い１();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				蘭／傾国登場();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				蘭／蘭と傾国();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				蘭／いじめ();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				蘭／傾国の噂();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				蘭／傾国の噂２();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				蘭／傾国出奔();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				蘭／鬼を呼び出す();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				蘭／地獄の穴が開いた();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				蘭／鬼の来襲();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				蘭／鬼の来襲／汎用();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				蘭／傾国の居場所();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				蘭／セキメイの墓／初();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				蘭／ラストバトルＡ();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				蘭／ラストバトルＢ();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				蘭／夜這い２();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				蘭／夜這い３();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				蘭／早雲の見舞い／傾国();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				蘭／早雲の見舞い／傾国汎用();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				蘭／傾国出奔後();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				地獄の穴／初めて();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				地獄の穴／封鎖／初();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				地獄の穴／汎用();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				地獄の穴／封鎖／汎用();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				地獄の穴／封鎖／ラスト();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				鬼の来襲／負け();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				蘭／早雲の見舞い／傾国汎用２();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				蘭／傾国残念／穴塞ぎ();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				蘭／傾国残念／鬼来襲();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				蘭／傾国残念／全て塞がれた();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				蘭／セキメイへの催促();
				break;
			case 43:
				WP_SET_COLOR(0, 0, 0);
				蘭／基本接触／早雲入院();
				break;
			case 44:
				WP_SET_COLOR(0, 0, 0);
				蘭／基本接触／傾国出奔();
				break;
			case 45:
				WP_SET_COLOR(0, 0, 0);
				蘭／信頼();
				break;
			case 46:
				WP_SET_COLOR(0, 0, 0);
				蘭／セキメイの墓／魔導Ａ();
				break;
			case 47:
				WP_SET_COLOR(0, 0, 0);
				蘭／セキメイの墓／魔導Ｂ();
				break;
			case 48:
				WP_SET_COLOR(0, 0, 0);
				蘭／セキメイの墓／魔導Ｃ();
				break;
			case 49:
				WP_SET_COLOR(0, 0, 0);
				蘭／愛情();
				break;
			case 50:
				WP_SET_COLOR(0, 0, 0);
				蘭／汎用エッチ();
				break;
			case 51:
				WP_SET_COLOR(0, 0, 0);
				蘭／エピローグＡ();
				break;
			case 52:
				WP_SET_COLOR(0, 0, 0);
				蘭／エピローグＢ();
				break;
			case 53:
				WP_SET_COLOR(0, 0, 0);
				蘭／ラストバトルＢＢ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／五十六ルート()
{
	while (true)
	{
		MENU_ADD(1, "香姫／死亡", NULL);
		MENU_ADD(2, "信長／暗殺Ａ", NULL);
		MENU_ADD(3, "信長／暗殺Ｂ", NULL);
		MENU_ADD(4, "ランス争奪戦スタート", NULL);
		MENU_ADD(5, "ランス／種付けエロ", NULL);
		MENU_ADD(6, "ランス／種つけエロ汎用", NULL);
		MENU_ADD(7, "五十六／種付け時汎用", NULL);
		MENU_ADD(8, "五十六／基本接触", NULL);
		MENU_ADD(9, "五十六／基本接触／エロ後", NULL);
		MENU_ADD(10, "五十六／基本接触／妊娠", NULL);
		MENU_ADD(11, "五十六／種付け希望", NULL);
		MENU_ADD(12, "五十六／種付け希望汎用", NULL);
		MENU_ADD(13, "五十六／種付け沈静", NULL);
		MENU_ADD(14, "五十六／傾国のじらし", NULL);
		MENU_ADD(15, "五十六／傾国のじらし／汎用", NULL);
		MENU_ADD(16, "五十六／傾国の種付け", NULL);
		MENU_ADD(17, "五十六／傾国の種付け／汎用", NULL);
		MENU_ADD(18, "五十六／傾国の懐妊", NULL);
		MENU_ADD(19, "五十六／腹ボテ傾国", NULL);
		MENU_ADD(20, "五十六／傾国妊娠中汎用", NULL);
		MENU_ADD(21, "五十六／魔人信長復活情報", NULL);
		MENU_ADD(22, "傾国／妊娠中１", NULL);
		MENU_ADD(23, "傾国／妊娠中２", NULL);
		MENU_ADD(24, "傾国／妊娠中３", NULL);
		MENU_ADD(25, "傾国／妊娠中／ヒラミレモン", NULL);
		MENU_ADD(26, "五十六／日本丸誕生", NULL);
		MENU_ADD(27, "傾国／子供付き汎用", NULL);
		MENU_ADD(28, "五十六／織田の権力者１", NULL);
		MENU_ADD(29, "五十六／織田の権力者２", NULL);
		MENU_ADD(30, "五十六／傾国の権力者３", NULL);
		MENU_ADD(31, "五十六／傾国の権力者４", NULL);
		MENU_ADD(32, "五十六／傾国の権力者５", NULL);
		MENU_ADD(33, "五十六／五十六の出産祝い", NULL);
		MENU_ADD(34, "五十六／ぽつり種なし", NULL);
		MENU_ADD(35, "五十六／傾国の牛乳", NULL);
		MENU_ADD(36, "五十六／傾国追放", NULL);
		MENU_ADD(37, "五十六／傾国追放後Ａ", NULL);
		MENU_ADD(38, "五十六／傾国追放後Ｂ", NULL);
		MENU_ADD(39, "五十六／傾国追放後Ｃ", NULL);
		MENU_ADD(40, "五十六／傾国追放後Ｄ", NULL);
		MENU_ADD(41, "五十六／傾国追放後Ｅ", NULL);
		MENU_ADD(42, "五十六／妊娠エロ", NULL);
		MENU_ADD(43, "五十六／妊娠エロ汎用", NULL);
		MENU_ADD(44, "シィル／耳かき", NULL);
		MENU_ADD(45, "五十六／懐妊", NULL);
		MENU_ADD(46, "五十六／妊娠中汎用", NULL);
		MENU_ADD(47, "五十六／美樹保護", NULL);
		MENU_ADD(48, "魂縛り／解放", NULL);
		MENU_ADD(49, "五十六／ザビエル出る", NULL);
		MENU_ADD(50, "五十六／ラストバトルＡ", NULL);
		MENU_ADD(51, "五十六／ラストバトルＢ", NULL);
		MENU_ADD(52, "五十六／ラストバトルＣ", NULL);
		MENU_ADD(53, "五十六／エピローグ", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				香姫／死亡();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				信長／暗殺Ａ();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				信長／暗殺Ｂ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				ランス争奪戦スタート();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				ランス／種付けエロ();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				ランス／種つけエロ汎用();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				五十六／種付け時汎用();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				五十六／基本接触();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				五十六／基本接触／エロ後();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				五十六／基本接触／妊娠();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				五十六／種付け希望();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				五十六／種付け希望汎用();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				五十六／種付け沈静();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国のじらし();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国のじらし／汎用();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国の種付け();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国の種付け／汎用();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国の懐妊();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				五十六／腹ボテ傾国();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国妊娠中汎用();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				五十六／魔人信長復活情報();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				傾国／妊娠中１();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				傾国／妊娠中２();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				傾国／妊娠中３();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				傾国／妊娠中／ヒラミレモン();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				五十六／日本丸誕生();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				傾国／子供付き汎用();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				五十六／織田の権力者１();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				五十六／織田の権力者２();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国の権力者３();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国の権力者４();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国の権力者５();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				五十六／五十六の出産祝い();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				五十六／ぽつり種なし();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国の牛乳();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国追放();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国追放後Ａ();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国追放後Ｂ();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国追放後Ｃ();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国追放後Ｄ();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				五十六／傾国追放後Ｅ();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				五十六／妊娠エロ();
				break;
			case 43:
				WP_SET_COLOR(0, 0, 0);
				五十六／妊娠エロ汎用();
				break;
			case 44:
				WP_SET_COLOR(0, 0, 0);
				シィル／耳かき();
				break;
			case 45:
				WP_SET_COLOR(0, 0, 0);
				五十六／懐妊();
				break;
			case 46:
				WP_SET_COLOR(0, 0, 0);
				五十六／妊娠中汎用();
				break;
			case 47:
				WP_SET_COLOR(0, 0, 0);
				五十六／美樹保護();
				break;
			case 48:
				WP_SET_COLOR(0, 0, 0);
				魂縛り／解放();
				break;
			case 49:
				WP_SET_COLOR(0, 0, 0);
				五十六／ザビエル出る();
				break;
			case 50:
				WP_SET_COLOR(0, 0, 0);
				五十六／ラストバトルＡ();
				break;
			case 51:
				WP_SET_COLOR(0, 0, 0);
				五十六／ラストバトルＢ();
				break;
			case 52:
				WP_SET_COLOR(0, 0, 0);
				五十六／ラストバトルＣ();
				break;
			case 53:
				WP_SET_COLOR(0, 0, 0);
				五十六／エピローグ();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／謙信ルート()
{
	while (true)
	{
		MENU_ADD(1, "織田／信長が帝を目指す", NULL);
		MENU_ADD(2, "謙信／帝ソード", NULL);
		MENU_ADD(3, "謙信／信長の呼び出しＡ", NULL);
		MENU_ADD(4, "謙信／信長の呼び出しＢ", NULL);
		MENU_ADD(5, "謙信／帝レースへの悩み", NULL);
		MENU_ADD(6, "信長／逃亡中", NULL);
		MENU_ADD(7, "信長／帝", NULL);
		MENU_ADD(8, "伊達／ラストバトル謙信Ａ", NULL);
		MENU_ADD(9, "伊達／ラストバトル謙信Ｂ", NULL);
		MENU_ADD(10, "謙信／敗北", NULL);
		MENU_ADD(11, "謙信ｖｓ政宗Ａ", NULL);
		MENU_ADD(12, "謙信ｖｓ政宗Ｂ", NULL);
		MENU_ADD(13, "謙信ｖｓのぞみＡ", NULL);
		MENU_ADD(14, "謙信ｖｓのぞみＢ", NULL);
		MENU_ADD(15, "謙信ｖｓ柚原Ａ", NULL);
		MENU_ADD(16, "謙信ｖｓ柚原Ｂ", NULL);
		MENU_ADD(17, "謙信ｖｓ元就Ａ", NULL);
		MENU_ADD(21, "謙信ｖｓ元就Ｂ", NULL);
		MENU_ADD(18, "毛利／陥落謙信Ａ", NULL);
		MENU_ADD(19, "毛利／陥落謙信Ｂ", NULL);
		MENU_ADD(20, "謙信ｖｓ呪い元就", NULL);
		MENU_ADD(22, "謙信ｖｓ熊野五郎Ａ", NULL);
		MENU_ADD(23, "謙信ｖｓ熊野五郎Ｂ", NULL);
		MENU_ADD(24, "謙信ｖｓ鈴谷無双Ａ", NULL);
		MENU_ADD(25, "謙信ｖｓ鈴谷無双Ｂ", NULL);
		MENU_ADD(26, "謙信ｖｓみくまＡ", NULL);
		MENU_ADD(27, "謙信ｖｓみくまＢ", NULL);
		MENU_ADD(28, "謙信ｖｓ平坂最上Ａ", NULL);
		MENU_ADD(29, "謙信ｖｓ平坂最上Ｂ", NULL);
		MENU_ADD(30, "謙信／帝", NULL);
		MENU_ADD(31, "信長／ザビエルに", NULL);
		MENU_ADD(32, "ザビエルの最後の作戦", NULL);
		MENU_ADD(33, "ザビエルとオロチ", NULL);
		MENU_ADD(34, "信長ｖｓ政宗", NULL);
		MENU_ADD(35, "信長ｖｓのぞみ", NULL);
		MENU_ADD(36, "信長ｖｓ馬場", NULL);
		MENU_ADD(37, "信長ｖｓゴン", NULL);
		MENU_ADD(38, "信長ｖｓゴン／タクガ滅亡", NULL);
		MENU_ADD(39, "信長ｖｓ柚原", NULL);
		MENU_ADD(40, "信長ｖｓ元就／呪い付き", NULL);
		MENU_ADD(41, "信長ｖｓ元就／人間", NULL);
		MENU_ADD(42, "信長ｖｓカズヒサ", NULL);
		MENU_ADD(43, "信長ｖｓ熊野五郎", NULL);
		MENU_ADD(44, "信長ｖｓ鈴谷無双", NULL);
		MENU_ADD(45, "信長ｖｓみくま", NULL);
		MENU_ADD(46, "信長ｖｓ平坂最上", NULL);
		MENU_ADD(47, "謙信ｖｓ馬場Ａ", NULL);
		MENU_ADD(48, "謙信ｖｓ馬場Ｂ", NULL);
		MENU_ADD(49, "謙信ｖｓゴンＡ", NULL);
		MENU_ADD(50, "謙信ｖｓゴンＢ", NULL);
		MENU_ADD(56, "カズヒサ／信長から逃げる", NULL);
		MENU_ADD(51, "カズヒサ／探索１", NULL);
		MENU_ADD(52, "謙信ｖｓカズヒサＡ", NULL);
		MENU_ADD(53, "謙信ｖｓカズヒサＢ", NULL);
		MENU_ADD(54, "上杉／ボーナスエロ", NULL);
		MENU_ADD(55, "傾国／帝レースの準備", NULL);
		MENU_ADD(57, "傾国／合戦工作", NULL);
		MENU_ADD(58, "信長ｖｓ偽傾国", NULL);
		MENU_ADD(59, "謙信／ランスを殺さない訳", NULL);
		MENU_ADD(60, "帝の威光で降伏勧告", NULL);
		MENU_ADD(61, "帝の威光で降伏勧告／汎用", NULL);
		MENU_ADD(62, "帝の威光で降伏勧告／魔軍", NULL);
		MENU_ADD(63, "魔軍／支配地奪取", NULL);
		MENU_ADD(64, "謙信／兵数激減", NULL);
		MENU_ADD(65, "謙信／帝ノートＡ", NULL);
		MENU_ADD(66, "謙信／帝ノートＢ", NULL);
		MENU_ADD(67, "謙信／帝ノートＣ", NULL);
		MENU_ADD(68, "謙信／帝ノートＤ", NULL);
		MENU_ADD(69, "謙信／帝ノートＥ", NULL);
		MENU_ADD(70, "謙信／香姫が国主に", NULL);
		MENU_ADD(71, "謙信／魔人信長復活情報", NULL);
		MENU_ADD(72, "謙信／レベルドレイン", NULL);
		MENU_ADD(73, "謙信／特訓／初めて", NULL);
		MENU_ADD(74, "謙信／特訓／汎用１", NULL);
		MENU_ADD(75, "謙信／特訓／汎用２", NULL);
		MENU_ADD(76, "謙信／愛の確認", NULL);
		MENU_ADD(77, "謙信／直江に報告", NULL);
		MENU_ADD(78, "謙信／レベル３０", NULL);
		MENU_ADD(79, "謙信／Ｖ１", NULL);
		MENU_ADD(80, "謙信／Ｖ２", NULL);
		MENU_ADD(81, "謙信／Ｖ３", NULL);
		MENU_ADD(82, "謙信／Ｖ４", NULL);
		MENU_ADD(83, "謙信／政宗の事", NULL);
		MENU_ADD(84, "謙信／柚原の事", NULL);
		MENU_ADD(85, "謙信／鈴谷の事", NULL);
		MENU_ADD(86, "謙信／熊野の事", NULL);
		MENU_ADD(87, "謙信／みくまの事", NULL);
		MENU_ADD(88, "謙信／平坂の事", NULL);
		MENU_ADD(89, "謙信／元就の事", NULL);
		MENU_ADD(90, "謙信／馬場の事", NULL);
		MENU_ADD(91, "謙信／ゴンの事", NULL);
		MENU_ADD(92, "謙信／帝謙信とエッチ", NULL);
		MENU_ADD(93, "謙信／基本接触／帝", NULL);
		MENU_ADD(94, "謙信／大蛇の穴へ行こう", NULL);
		MENU_ADD(95, "ザビエル／大蛇迷宮１", NULL);
		MENU_ADD(96, "ザビエル／大蛇迷宮２", NULL);
		MENU_ADD(97, "ザビエル／大蛇迷宮３", NULL);
		MENU_ADD(98, "謙信／ラストバトルＡ", NULL);
		MENU_ADD(99, "謙信／ラストバトルＢ", NULL);
		MENU_ADD(100, "謙信／エピローグ", NULL);
		MENU_ADD(101, "伊達／ラストバトル謙信Ｃ", NULL);
		MENU_ADD(102, "信長ｖｓ２点", NULL);
		MENU_ADD(103, "謙信／馬場とまだ", NULL);
		MENU_ADD(104, "傾国／謙信を狙う１", NULL);
		MENU_ADD(105, "傾国／謙信を狙う２", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				織田／信長が帝を目指す();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				謙信／帝ソード();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				謙信／信長の呼び出しＡ();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				謙信／信長の呼び出しＢ();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				謙信／帝レースへの悩み();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				信長／逃亡中();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				信長／帝();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				伊達／ラストバトル謙信Ａ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				伊達／ラストバトル謙信Ｂ();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				謙信／敗北();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ政宗Ａ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ政宗Ｂ();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓのぞみＡ();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓのぞみＢ();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ柚原Ａ();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ柚原Ｂ();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ元就Ａ();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				毛利／陥落謙信Ａ();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				毛利／陥落謙信Ｂ();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ呪い元就();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ元就Ｂ();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ熊野五郎Ａ();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ熊野五郎Ｂ();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ鈴谷無双Ａ();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ鈴谷無双Ｂ();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓみくまＡ();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓみくまＢ();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ平坂最上Ａ();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ平坂最上Ｂ();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				謙信／帝();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				信長／ザビエルに();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				ザビエルの最後の作戦();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				ザビエルとオロチ();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ政宗();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓのぞみ();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ馬場();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓゴン();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓゴン／タクガ滅亡();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ柚原();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ元就／呪い付き();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ元就／人間();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓカズヒサ();
				break;
			case 43:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ熊野五郎();
				break;
			case 44:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ鈴谷無双();
				break;
			case 45:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓみくま();
				break;
			case 46:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ平坂最上();
				break;
			case 47:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ馬場Ａ();
				break;
			case 48:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓ馬場Ｂ();
				break;
			case 49:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓゴンＡ();
				break;
			case 50:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓゴンＢ();
				break;
			case 51:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／探索１();
				break;
			case 52:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓカズヒサＡ();
				break;
			case 53:
				WP_SET_COLOR(0, 0, 0);
				謙信ｖｓカズヒサＢ();
				break;
			case 54:
				WP_SET_COLOR(0, 0, 0);
				上杉／ボーナスエロ();
				break;
			case 55:
				WP_SET_COLOR(0, 0, 0);
				傾国／帝レースの準備();
				break;
			case 56:
				WP_SET_COLOR(0, 0, 0);
				カズヒサ／信長から逃げる();
				break;
			case 57:
				WP_SET_COLOR(0, 0, 0);
				傾国／合戦工作();
				break;
			case 58:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ偽傾国();
				break;
			case 59:
				WP_SET_COLOR(0, 0, 0);
				謙信／ランスを殺さない訳();
				break;
			case 60:
				WP_SET_COLOR(0, 0, 0);
				帝の威光で降伏勧告();
				break;
			case 61:
				WP_SET_COLOR(0, 0, 0);
				帝の威光で降伏勧告／汎用();
				break;
			case 62:
				WP_SET_COLOR(0, 0, 0);
				帝の威光で降伏勧告／魔軍();
				break;
			case 63:
				WP_SET_COLOR(0, 0, 0);
				魔軍／支配地奪取();
				break;
			case 64:
				WP_SET_COLOR(0, 0, 0);
				謙信／兵数激減();
				break;
			case 65:
				WP_SET_COLOR(0, 0, 0);
				謙信／帝ノートＡ();
				break;
			case 66:
				WP_SET_COLOR(0, 0, 0);
				謙信／帝ノートＢ();
				break;
			case 67:
				WP_SET_COLOR(0, 0, 0);
				謙信／帝ノートＣ();
				break;
			case 68:
				WP_SET_COLOR(0, 0, 0);
				謙信／帝ノートＤ();
				break;
			case 69:
				WP_SET_COLOR(0, 0, 0);
				謙信／帝ノートＥ();
				break;
			case 70:
				WP_SET_COLOR(0, 0, 0);
				謙信／香姫が国主に();
				break;
			case 71:
				WP_SET_COLOR(0, 0, 0);
				謙信／魔人信長復活情報();
				break;
			case 72:
				WP_SET_COLOR(0, 0, 0);
				謙信／レベルドレイン();
				break;
			case 73:
				WP_SET_COLOR(0, 0, 0);
				謙信／特訓／初めて();
				break;
			case 74:
				WP_SET_COLOR(0, 0, 0);
				謙信／特訓／汎用１();
				break;
			case 75:
				WP_SET_COLOR(0, 0, 0);
				謙信／特訓／汎用２();
				break;
			case 76:
				WP_SET_COLOR(0, 0, 0);
				謙信／愛の確認();
				break;
			case 77:
				WP_SET_COLOR(0, 0, 0);
				謙信／直江に報告();
				break;
			case 78:
				WP_SET_COLOR(0, 0, 0);
				謙信／レベル３０();
				break;
			case 79:
				WP_SET_COLOR(0, 0, 0);
				謙信／Ｖ１();
				break;
			case 80:
				WP_SET_COLOR(0, 0, 0);
				謙信／Ｖ２();
				break;
			case 81:
				WP_SET_COLOR(0, 0, 0);
				謙信／Ｖ３();
				break;
			case 82:
				WP_SET_COLOR(0, 0, 0);
				謙信／Ｖ４();
				break;
			case 83:
				WP_SET_COLOR(0, 0, 0);
				謙信／政宗の事();
				break;
			case 84:
				WP_SET_COLOR(0, 0, 0);
				謙信／柚原の事();
				break;
			case 85:
				WP_SET_COLOR(0, 0, 0);
				謙信／鈴谷の事();
				break;
			case 86:
				WP_SET_COLOR(0, 0, 0);
				謙信／熊野の事();
				break;
			case 87:
				WP_SET_COLOR(0, 0, 0);
				謙信／みくまの事();
				break;
			case 88:
				WP_SET_COLOR(0, 0, 0);
				謙信／平坂の事();
				break;
			case 89:
				WP_SET_COLOR(0, 0, 0);
				謙信／元就の事();
				break;
			case 90:
				WP_SET_COLOR(0, 0, 0);
				謙信／馬場の事();
				break;
			case 91:
				WP_SET_COLOR(0, 0, 0);
				謙信／ゴンの事();
				break;
			case 92:
				WP_SET_COLOR(0, 0, 0);
				謙信／帝謙信とエッチ();
				break;
			case 93:
				WP_SET_COLOR(0, 0, 0);
				謙信／基本接触／帝();
				break;
			case 94:
				WP_SET_COLOR(0, 0, 0);
				謙信／大蛇の穴へ行こう();
				break;
			case 95:
				WP_SET_COLOR(0, 0, 0);
				ザビエル／大蛇迷宮１();
				break;
			case 96:
				WP_SET_COLOR(0, 0, 0);
				ザビエル／大蛇迷宮２();
				break;
			case 97:
				WP_SET_COLOR(0, 0, 0);
				ザビエル／大蛇迷宮３();
				break;
			case 98:
				WP_SET_COLOR(0, 0, 0);
				謙信／ラストバトルＡ();
				break;
			case 99:
				WP_SET_COLOR(0, 0, 0);
				謙信／ラストバトルＢ();
				break;
			case 100:
				WP_SET_COLOR(0, 0, 0);
				謙信／エピローグ();
				break;
			case 101:
				WP_SET_COLOR(0, 0, 0);
				伊達／ラストバトル謙信Ｃ();
				break;
			case 102:
				WP_SET_COLOR(0, 0, 0);
				信長ｖｓ２点();
				break;
			case 103:
				WP_SET_COLOR(0, 0, 0);
				謙信／馬場とまだ();
				break;
			case 104:
				WP_SET_COLOR(0, 0, 0);
				傾国／謙信を狙う１();
				break;
			case 105:
				WP_SET_COLOR(0, 0, 0);
				傾国／謙信を狙う２();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／システム()
{
	while (true)
	{
		MENU_ADD(1, "尾張／味噌カツ迷宮／発見", NULL);
		MENU_ADD(2, "地域／美女発見１", NULL);
		MENU_ADD(3, "地域／美女発見２", NULL);
		MENU_ADD(4, "地域／美女発見３", NULL);
		MENU_ADD(5, "捕虜／女武将１", NULL);
		MENU_ADD(6, "捕虜／女武将２", NULL);
		MENU_ADD(7, "捕虜／女武将３", NULL);
		MENU_ADD(8, "捕虜／姫１", NULL);
		MENU_ADD(9, "捕虜／姫２", NULL);
		MENU_ADD(10, "捕虜／姫３", NULL);
		MENU_ADD(11, "汎用武将／信長に仕官", NULL);
		MENU_ADD(12, "汎用武将／香姫に仕官", NULL);
		MENU_ADD(13, "汎用武将／ランスに仕官", NULL);
		MENU_ADD(14, "大奥／汎用シィル", NULL);
		MENU_ADD(15, "大奥／汎用", NULL);
		MENU_ADD(16, "部下会話／汎用男キャラ／普通に", NULL);
		MENU_ADD(17, "部下会話／汎用男キャラ／信頼に", NULL);
		MENU_ADD(18, "部下会話／汎用女キャラ／普通に", NULL);
		MENU_ADD(19, "部下会話／汎用女キャラ／信頼に", NULL);
		MENU_ADD(20, "部下会話／汎用女キャラ／愛情に", NULL);
		MENU_ADD(27, "部下会話／汎用キャラ／信頼汎用", NULL);
		MENU_ADD(28, "部下会話／汎用女キャラ／愛情汎用", NULL);
		MENU_ADD(35, "部下会話／汎用キャラ／信頼汎用", NULL);
		MENU_ADD(36, "部下会話／汎用女キャラ／愛情汎用", NULL);
		MENU_ADD(37, "部下会話／基本接触", NULL);
		MENU_ADD(21, "商店／初めて", NULL);
		MENU_ADD(22, "商店／汎用", NULL);
		MENU_ADD(23, "商店／買わない", NULL);
		MENU_ADD(24, "商店／足りない", NULL);
		MENU_ADD(25, "商店／買う", NULL);
		MENU_ADD(26, "商店／おこめ券", NULL);
		MENU_ADD(38, "商店／屏風を買う", NULL);
		MENU_ADD(39, "国占領はターンに１個まで", NULL);
		MENU_ADD(40, "商店／エロ話", NULL);
		MENU_ADD(41, "作戦許可書の説明", NULL);
		MENU_ADD(42, "籐吉郎に餌", NULL);
		MENU_ADD(43, "アリスの敗戦処理／初", NULL);
		MENU_ADD(44, "アリスの敗戦処理／汎用", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				尾張／味噌カツ迷宮／発見();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				地域／美女発見１();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				地域／美女発見２();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				地域／美女発見３();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				捕虜／女武将１();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				捕虜／女武将２();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				捕虜／女武将３();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				捕虜／姫１();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				捕虜／姫２();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				捕虜／姫３();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				汎用武将／信長に仕官();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				汎用武将／香姫に仕官();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				汎用武将／ランスに仕官();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				大奥／汎用シィル();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				大奥／汎用();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用男キャラ／普通に();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用男キャラ／信頼に();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ／普通に();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ／信頼に();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ／愛情に();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				商店／初めて();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				商店／汎用();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				商店／買わない();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				商店／足りない();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				商店／買う();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				商店／おこめ券();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用キャラ／信頼汎用();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ／愛情汎用();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用キャラ／信頼汎用();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				部下会話／汎用女キャラ／愛情汎用();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				部下会話／基本接触();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				商店／屏風を買う();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				国占領はターンに１個まで();
				break;
			case 40:
				WP_SET_COLOR(0, 0, 0);
				商店／エロ話();
				break;
			case 41:
				WP_SET_COLOR(0, 0, 0);
				作戦許可書の説明();
				break;
			case 42:
				WP_SET_COLOR(0, 0, 0);
				籐吉郎に餌();
				break;
			case 43:
				WP_SET_COLOR(0, 0, 0);
				アリスの敗戦処理／初();
				break;
			case 44:
				WP_SET_COLOR(0, 0, 0);
				アリスの敗戦処理／汎用();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／正史()
{
	while (true)
	{
		MENU_ADD(1, "魔人／魔人信長復活", NULL);
		MENU_ADD(2, "織田／魔人信長復活情報", NULL);
		MENU_ADD(4, "健太郎／怪我をする", NULL);
		MENU_ADD(5, "健太郎／ヒラミレモン危機", NULL);
		MENU_ADD(8, "健太郎／美樹苦しむ", NULL);
		MENU_ADD(6, "健太郎／地下蜜柑農園にて", NULL);
		MENU_ADD(7, "健太郎／美樹にヒラミレモン", NULL);
		MENU_ADD(9, "魔王美樹誕生／ヒラミ不足", NULL);
		MENU_ADD(3, "魔人／完全復活", NULL);
		MENU_ADD(20, "魂縛り／始まり", NULL);
		MENU_ADD(21, "合戦前／魂縛り", NULL);
		MENU_ADD(22, "合戦後／魂縛り", NULL);
		MENU_ADD(10, "魔人／式部強襲Ａ", NULL);
		MENU_ADD(11, "魔人／式部強襲Ｂ", NULL);
		MENU_ADD(12, "美樹／暴走１", NULL);
		MENU_ADD(13, "美樹／暴走２", NULL);
		MENU_ADD(14, "美樹／暴走３", NULL);
		MENU_ADD(15, "魔王美樹誕生／暴走", NULL);
		MENU_ADD(16, "織田／美樹暴走情報", NULL);
		MENU_ADD(17, "織田／美樹探索１", NULL);
		MENU_ADD(18, "織田／美樹探索２", NULL);
		MENU_ADD(19, "織田／美樹保護", NULL);
		MENU_ADD(23, "石爺／始まり", NULL);
		MENU_ADD(24, "石爺／経過１", NULL);
		MENU_ADD(25, "石爺／経過２", NULL);
		MENU_ADD(26, "石爺／経過３", NULL);
		MENU_ADD(27, "石爺／ＪＡＰＡＮ墜落", NULL);
		MENU_ADD(28, "石爺／地震", NULL);
		MENU_ADD(29, "魔軍／陥落", NULL);
		MENU_ADD(30, "ラストバトルＡ", NULL);
		MENU_ADD(31, "ラストバトルＢ", NULL);
		MENU_ADD(32, "ラストバトルＣ", NULL);
		MENU_ADD(34, "ラストバトルＤ", NULL);
		MENU_ADD(33, "魂縛り／呪いの効果", NULL);
		MENU_ADD(35, "魂縛り／国壊滅", NULL);
		MENU_ADD(36, "魂縛り／国壊滅／汎用", NULL);
		MENU_ADD(37, "魔人／式部強襲Ｚ", NULL);
		MENU_ADD(38, "美樹／氷漬け後／汎用", NULL);
		MENU_ADD(39, "石爺／地震２", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				魔人／魔人信長復活();
				break;
			case 2:
				WP_SET_COLOR(0, 0, 0);
				織田／魔人信長復活情報();
				break;
			case 3:
				WP_SET_COLOR(0, 0, 0);
				魔人／完全復活();
				break;
			case 4:
				WP_SET_COLOR(0, 0, 0);
				健太郎／怪我をする();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				健太郎／ヒラミレモン危機();
				break;
			case 6:
				WP_SET_COLOR(0, 0, 0);
				健太郎／地下蜜柑農園にて();
				break;
			case 7:
				WP_SET_COLOR(0, 0, 0);
				健太郎／美樹にヒラミレモン();
				break;
			case 8:
				WP_SET_COLOR(0, 0, 0);
				健太郎／美樹苦しむ();
				break;
			case 9:
				WP_SET_COLOR(0, 0, 0);
				魔王美樹誕生／ヒラミ不足();
				break;
			case 10:
				WP_SET_COLOR(0, 0, 0);
				魔人／式部強襲Ａ();
				break;
			case 11:
				WP_SET_COLOR(0, 0, 0);
				魔人／式部強襲Ｂ();
				break;
			case 12:
				WP_SET_COLOR(0, 0, 0);
				美樹／暴走１();
				break;
			case 13:
				WP_SET_COLOR(0, 0, 0);
				美樹／暴走２();
				break;
			case 14:
				WP_SET_COLOR(0, 0, 0);
				美樹／暴走３();
				break;
			case 15:
				WP_SET_COLOR(0, 0, 0);
				魔王美樹誕生／暴走();
				break;
			case 16:
				WP_SET_COLOR(0, 0, 0);
				織田／美樹暴走情報();
				break;
			case 17:
				WP_SET_COLOR(0, 0, 0);
				織田／美樹探索１();
				break;
			case 18:
				WP_SET_COLOR(0, 0, 0);
				織田／美樹探索２();
				break;
			case 19:
				WP_SET_COLOR(0, 0, 0);
				織田／美樹保護();
				break;
			case 20:
				WP_SET_COLOR(0, 0, 0);
				魂縛り／始まり();
				break;
			case 21:
				WP_SET_COLOR(0, 0, 0);
				合戦前／魂縛り();
				break;
			case 22:
				WP_SET_COLOR(0, 0, 0);
				合戦後／魂縛り();
				break;
			case 23:
				WP_SET_COLOR(0, 0, 0);
				石爺／始まり();
				break;
			case 24:
				WP_SET_COLOR(0, 0, 0);
				石爺／経過１();
				break;
			case 25:
				WP_SET_COLOR(0, 0, 0);
				石爺／経過２();
				break;
			case 26:
				WP_SET_COLOR(0, 0, 0);
				石爺／経過３();
				break;
			case 27:
				WP_SET_COLOR(0, 0, 0);
				石爺／ＪＡＰＡＮ墜落();
				break;
			case 28:
				WP_SET_COLOR(0, 0, 0);
				石爺／地震();
				break;
			case 29:
				WP_SET_COLOR(0, 0, 0);
				魔軍／陥落();
				break;
			case 30:
				WP_SET_COLOR(0, 0, 0);
				ラストバトルＡ();
				break;
			case 31:
				WP_SET_COLOR(0, 0, 0);
				ラストバトルＢ();
				break;
			case 32:
				WP_SET_COLOR(0, 0, 0);
				ラストバトルＣ();
				break;
			case 33:
				WP_SET_COLOR(0, 0, 0);
				魂縛り／呪いの効果();
				break;
			case 34:
				WP_SET_COLOR(0, 0, 0);
				ラストバトルＤ();
				break;
			case 35:
				WP_SET_COLOR(0, 0, 0);
				魂縛り／国壊滅();
				break;
			case 36:
				WP_SET_COLOR(0, 0, 0);
				魂縛り／国壊滅／汎用();
				break;
			case 37:
				WP_SET_COLOR(0, 0, 0);
				魔人／式部強襲Ｚ();
				break;
			case 38:
				WP_SET_COLOR(0, 0, 0);
				美樹／氷漬け後／汎用();
				break;
			case 39:
				WP_SET_COLOR(0, 0, 0);
				石爺／地震２();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void テスト／とり()
{
	while (true)
	{
		MENU_ADD(1, "メッセージテスト", NULL);
		MENU_ADD(5, "ビジュアルテスト", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				メッセージテスト();
				break;
			case 5:
				WP_SET_COLOR(0, 0, 0);
				びずあるてすと();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void メッセージテスト()
{
	while (true)
	{
		MENU_ADD(1, "現状", NULL);
		MENU_ADD(1000, "終了", NULL);
		int n = MENU_SELECT(-1);
		switch (n)
		{
			case 1:
				WP_SET_COLOR(0, 0, 0);
				直江／潜伏中を捕獲する();
				break;
			default:
				break;
		}
		if (n == 1000)
		{
			break;
		}
	}
}

void びずあるてすと()
{
	ビジュアル(1001, 1, 1000);
	台詞枠(1, 0, 0);
	'がはははは。' A;
	台詞枠(3, 0, 0);
	'あんあん。' A;
	台詞枠(1, 0, 0);
	'いくぞーー。' A;
	ト書き枠(0, 0);
	R();
	'　　＜どぴゅー＞' A;
	枠閉じ(0, 0);
	白画面(0, 0, 0);
	ビジュアル(1001, 1, 1000);
	白画面(1, 300, 0);
	ビジュアル(1001, 1, 1000);
	白画面(1, 1000, 0);
	ビジュアル(1001, 1, 1000);
	台詞枠(1, 0, 0);
	'はへはへ。' R;
	'すっきりーーー。' A;
	枠閉じ(0, 0);
	ビジュアル(0, 1, 1000);
}

