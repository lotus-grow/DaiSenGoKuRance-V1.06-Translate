tagSansenTeki::tagSansenTeki()
{
}

tagSansenTeki::~tagSansenTeki()
{
	this.delete();
}

void tagSansenTeki::open(int nSeiryokuNo)
{
	bool bCreate = this.isCreate();
	this.create(nSeiryokuNo);
	if (bCreate)
	{
		this.setShow(true);
		return;
	}
	効果音(132, false);
	zoomUp(this.m_spBase, 1, (282 + this.m_spBase.getHeight()) - 26, 65, 26, 150);
	this.setShow(true);
	UPDATE();
}

void tagSansenTeki::close()
{
	if (!this.isCreate())
	{
		return;
	}
	this.setShow(false);
	効果音(134, false);
	zoomDown(this.m_spBase, 1, (282 + this.m_spBase.getHeight()) - 26, 65, 26, 150);
	this.delete();
	UPDATE();
}

void tagSansenTeki::create(int nSeiryokuNo)
{
	this.delete();
	this.m_spBase.setCG(10112);
	this.m_spBase.setPos(1, 282);
	this.m_spBase.setZ(201);
	this.m_sTitle.create(45, 287, 202);
	int nNo = 0;
	array@tagSprite aspWork[5];
	this.m_sButton.create(202, -1, -1);
	createButtonFromCg(10082, 3, aspWork);
	nNo = this.m_sButton.addButtonSp(aspWork[0], aspWork[1], aspWork[2], aspWork[3], aspWork[4]);
	this.m_sButton.setButtonPos(nNo, 341 + 217, 288);
	this.m_sButton.setButtonActive(nNo, true);
	this.m_sButton.setButtonID(nNo, 4100);
	int i = 0;
	int j = 0;
	int idx = 0;
	int nX = 0;
	int nY = 0;
	idx = 0;
	nX = 10;
	for (j = 0; j < 2; ++j)
	{
		nY = 315;
		for (i = 0; i < 3; ++i)
		{
			this.m_asBusho[idx++].create(nX, nY, 203, false, false);
			nY += 115;
		}
		nX += 289;
	}
	int cnt = 0;
	int nBushoNo = 0;
	for (i = 0; i < 6; ++i)
	{
		nBushoNo = 21 + i;
		if (this.m_asBusho[i].set(0, nBushoNo, false))
		{
			cnt += キャラ_兵数(0, nBushoNo);
		}
	}
	if (nSeiryokuNo == 25 && ＧＦ[461] == 1)
	{
		this.m_spBase.blendCg(10, 3, 6425, 255);
	}
	else
	{
		this.m_spBase.blendCg(10, 3, 10500 + nSeiryokuNo, 255);
	}
	this.m_sTitle.set("総兵力［", cnt, "］", -1, "");
}

void tagSansenTeki::delete()
{
	int i = 0;
	this.m_spBase.delete();
	this.m_sTitle.delete();
	this.m_sButton.delete();
	for (i = 0; i < 6; ++i)
	{
		this.m_asBusho[i].delete();
	}
}

int tagSansenTeki::checkMouse()
{
	int nNo = 0;
	if (!this.isCreate())
	{
		return 0;
	}
	int i;
	for (i = 0; i < 6; ++i)
	{
		if (this.m_asBusho[i].checkMouse())
		{
			return 4000 + i + 1;
		}
	}
	nNo = this.m_sButton.checkMouseRect(true, true);
	if (nNo > 0)
	{
		return this.m_sButton.getButtonID(nNo);
	}
	return 0;
}

bool tagSansenTeki::checkClick(int nID)
{
	if (nID > 4006)
	{
		return this.m_sButton.checkClick(this.m_sButton.getButtonNo(nID));
	}
	this.m_sButton.soundCancel();
	キー_離し待ち(0);
	return false;
}

void tagSansenTeki::resetSelect()
{
	int i;
	for (i = 0; i < 6; ++i)
	{
		this.m_asBusho[i].setSelect(false, true);
	}
	this.m_sButton.resetSelect();
}

void tagSansenTeki::setSelect(int nID, bool bSelect)
{
	if (nID > 4006)
	{
		this.m_sButton.setButtonSelect(this.m_sButton.getButtonNo(nID), bSelect);
		return;
	}
	if (nID > 4000)
	{
		ref tagBattleBusho rfBusho = this.getBusho(nID);
		if (rfBusho !== NULL)
		{
			rfBusho.setSelect(bSelect, true);
		}
	}
}

void tagSansenTeki::setCursor(int nID)
{
	if (nID > 4006)
	{
		this.m_sButton.setCursor(this.m_sButton.getButtonNo(nID));
		return;
	}
	if (nID > 4000)
	{
		ref tagBattleBusho rfBusho = this.getBusho(nID);
		if (rfBusho !== NULL)
		{
			rfBusho.setCursor();
		}
	}
}

void tagSansenTeki::setShow(bool bShow)
{
	int i = 0;
	this.m_spBase.setShow(bShow);
	this.m_sTitle.setShow(bShow);
	this.m_sButton.setShow(bShow);
	for (i = 0; i < 6; ++i)
	{
		this.m_asBusho[i].setShow(bShow);
	}
}

int tagSansenTeki::getSeiryokuNo(int nID)
{
	ref tagBattleBusho rfBusho = this.getBusho(nID);
	if (rfBusho === NULL)
	{
		return 0;
	}
	return rfBusho.getSeiryokuNo();
}

int tagSansenTeki::getBushoNo(int nID)
{
	ref tagBattleBusho rfBusho = this.getBusho(nID);
	if (rfBusho === NULL)
	{
		return 0;
	}
	return rfBusho.getBushoNo();
}

bool tagSansenTeki::isCreate()
{
	return this.m_spBase.isCreate();
}

ref tagBattleBusho tagSansenTeki::getBusho(int nID)
{
	int idx = nID + -4001;
	if (idx < 0 || idx >= 6)
	{
		return NULL;
	}
	return this.m_asBusho[idx];
}

