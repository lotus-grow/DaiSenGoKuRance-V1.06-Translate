tagTitleBar::tagTitleBar()
{
	this.m_anValue.Fill(0, 2, -1);
}

tagTitleBar::~tagTitleBar()
{
	this.delete();
}

void tagTitleBar::create(int nX, int nY, int nZ)
{
	int i = 0;
	ref tagDrawNumber rfsNumber;
	this.delete();
	this.m_sText.create(40, 1, 0, 0);
	this.m_sText.setPos(nX, nY);
	this.m_sText.setZ(nZ);
	this.m_sText.setFontSize(20);
	this.m_sText.setFontFace(0);
	this.m_sText.setFontBold(false);
	this.m_sText.setFontColor(255, 255, 255);
	this.m_sText.setShadowPixel(0, 0, 0, 0);
	this.m_sText.setShadowColor(128, 128, 128);
	for (i = 0; i < 2; ++i)
	{
		rfsNumber <- this.m_asNumber[i];
		rfsNumber.create(0, 0, true);
		rfsNumber.setZ(nZ);
		rfsNumber.setFontSize(20);
		rfsNumber.setFontFace(0);
		rfsNumber.setFontBold(false);
		rfsNumber.setFontColor(255, 255, 255);
		rfsNumber.setShadowPixel(0, 0, 0, 0);
		rfsNumber.setShadowColor(128, 128, 128);
	}
}

void tagTitleBar::delete()
{
	int i = 0;
	for (i = 0; i < 2; ++i)
	{
		this.m_asNumber[i].delete();
	}
	this.m_sText.delete();
	this.m_anValue.Fill(0, 2, -1);
}

void tagTitleBar::set(string szText1, int nValue1, string szText2, int nValue2, string szText3)
{
	int i = 0;
	int nValue = 0;
	int nX = this.m_sText.getPosX();
	int nY = this.m_sText.getPosY() + 1;
	int nSize = this.m_sText.getFontSize();
	bool bShow = this.m_sText.getShow();
	string szText = "";
	string szNum = "";
	array@string aszText[3];
	ref tagDrawNumber rfsNumber;
	aszText[0] = szText1;
	aszText[1] = szText2;
	aszText[2] = szText3;
	this.m_anValue[0] = nValue1;
	this.m_anValue[1] = nValue2;
	for (i = 0; i < 2; ++i)
	{
		szText += aszText[i];
		rfsNumber <- this.m_asNumber[i];
		nValue = this.m_anValue[i];
		if (nValue >= 0)
		{
			rfsNumber.setPos(nX + getTextWidth(nSize, szText), nY);
			rfsNumber.setValue(nValue);
			rfsNumber.setShow(bShow);
			szNum = îºäpêîéö(nValue, -1, 0);
			szText += îºäpãÛîí(szNum.LengthByte());
		}
		else
		{
			rfsNumber.setShow(false);
		}
	}
	szText += aszText[2];
	this.m_sText.setText(szText);
}

void tagTitleBar::setShow(bool bShow)
{
	int i = 0;
	for (i = 0; i < 2; ++i)
	{
		if (this.m_anValue[i] >= 0)
		{
			this.m_asNumber[i].setShow(bShow);
		}
		else
		{
			this.m_asNumber[i].setShow(false);
		}
	}
	this.m_sText.setShow(bShow);
}

