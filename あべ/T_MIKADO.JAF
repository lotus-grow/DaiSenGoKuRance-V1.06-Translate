void Ｐ帝ノート()
{
	tagMikadoNote sNote;
	sNote.run();
}

tagMikadoData::tagMikadoData()
{
	this.m_nCharaNo = 0;
}

tagMikadoData::~tagMikadoData()
{
	this.delete();
}

void tagMikadoData::create(int nX, int nY, int nZ)
{
	this.delete();
	this.m_spMark.setCG(10372);
	this.m_spMark.setPos(nX, nY);
	this.m_spMark.setZ(nZ + 1);
	this.m_spCover.setCG(10373);
	this.m_spCover.setPos(nX, nY);
	this.m_spCover.setZ(nZ + 1);
	this.m_sPoint.create(10076, 3, 3);
	this.m_sPoint.setPos(nX + 68, nY + 52);
	this.m_sPoint.setZ(nZ);
}

void tagMikadoData::delete()
{
	this.m_spMark.delete();
	this.m_spCover.delete();
	this.m_sPoint.delete();
	this.m_nCharaNo = 0;
}

void tagMikadoData::set(int nCharaNo)
{
	if (帝レース_参加(nCharaNo))
	{
		this.m_spMark.setShow(帝レース_敗北(nCharaNo));
		this.m_spCover.setShow(0);
	}
	else
	{
		this.m_spMark.setShow(0);
		this.m_spCover.setShow(1);
	}
	this.m_sPoint.setValue(帝レース_得点(nCharaNo), 0);
	this.m_sPoint.setShow(true);
	this.m_nCharaNo = nCharaNo;
}

tagMikadoNote::tagMikadoNote()
{
}

tagMikadoNote::~tagMikadoNote()
{
	this.delete();
}

void tagMikadoNote::run()
{
	int nID = 0;
	this.create();
	EFFECT(1, 100, 0);
	while (true)
	{
		nID = this.checkSelect();
		if (nID == 2)
		{
			break;
		}
		if (nID == 1)
		{
			break;
		}
	}
	this.delete();
	EFFECT(1, 100, 0);
}

void tagMikadoNote::create()
{
	int nZ = Ｚ順序最大();
	this.delete();
	this.m_spBase.setCG(10371);
	this.m_spBase.setPos(0, 0);
	this.m_spBase.setZ(nZ);
	this.m_spBase.setShow(1);
	this.m_sTitle.create(182, 26, nZ + 1);
	this.m_sTitle.set("帝レース　出場者一覧", -1, "", -1, "");
	this.m_sTitle.setShow(true);
	int nNo = 0;
	tagSprite spWork1;
	tagSprite spWork2;
	array@tagSprite aspWork1[3];
	array@tagSprite aspWork2[5];
	this.m_sButton.create(nZ + 1, -1, -1);
	createSpriteFromCg(10374, aspWork1);
	spWork1.attach(aspWork1[2].detach());
	spWork2.copy(spWork1, false);
	spWork2.blendColor(255, 255, 95, 102);
	nNo = this.m_sButton.addButtonSp(spWork1, spWork2, NULL, NULL, NULL);
	this.m_sButton.setButtonPos(nNo, 643, 431);
	this.m_sButton.setButtonActive(nNo, true);
	this.m_sButton.setButtonID(nNo, 1);
	createButtonFromCg(10082, 3, aspWork2);
	nNo = this.m_sButton.addButtonSp(aspWork2[0], aspWork2[1], aspWork2[2], aspWork2[3], aspWork2[4]);
	this.m_sButton.setButtonPos(nNo, 597, 26);
	this.m_sButton.setButtonActive(nNo, true);
	this.m_sButton.setButtonID(nNo, 2);
	this.m_sButton.setShow(true);
	int i = 0;
	int j = 0;
	int idx = 0;
	int nX = 0;
	int nY = 0;
	idx = 0;
	for (i = 0; i < 3; ++i)
	{
		nY = 57 + 104 * i;
		for (j = 0; j < 4; ++j)
		{
			nX = 180 + 111 * j;
			this.m_asData[idx++].create(nX, nY, nZ + 1);
		}
	}
	this.m_asData[0].set(1012);
	this.m_asData[1].set(1018);
	this.m_asData[2].set(1060);
	this.m_asData[3].set(1054);
	this.m_asData[4].set(1032);
	this.m_asData[5].set(1074);
	this.m_asData[6].set(1040);
	this.m_asData[7].set(1035);
	this.m_asData[8].set(1062);
	this.m_asData[9].set(1142);
	this.m_asData[10].set(1141);
	this.m_asData[11].set(1048);
}

void tagMikadoNote::delete()
{
	int i = 0;
	for (i = 0; i < 12; ++i)
	{
		this.m_asData[i].delete();
	}
	this.m_spBase.delete();
	this.m_sTitle.delete();
	this.m_sButton.delete();
}

int tagMikadoNote::checkSelect()
{
	int i = 0;
	int nID = 0;
	int nID2 = 0;
	this.resetSelect();
	UPDATE();
	nID2 = 0;
	while (true)
	{
		if (キー_キャンセル())
		{
			this.m_sButton.soundCancel();
			キー_離し待ち(0);
			nID = 2;
			break;
		}
		nID = this.checkMouse();
		if (nID != nID2)
		{
			this.setSelect(nID2, false);
			this.setSelect(nID, true);
			nID2 = nID;
		}
		UPDATE();
		if (キー_決定())
		{
			if (this.checkClick(nID))
			{
				break;
			}
		}
	}
	return nID;
}

int tagMikadoNote::checkMouse()
{
	int nNo = this.m_sButton.checkMouseRect(true, true);
	if (nNo > 0)
	{
		return this.m_sButton.getButtonID(nNo);
	}
	return 0;
}

bool tagMikadoNote::checkClick(int nID)
{
	return this.m_sButton.checkClick(this.m_sButton.getButtonNo(nID));
}

void tagMikadoNote::resetSelect()
{
	this.m_sButton.resetSelect();
}

void tagMikadoNote::setSelect(int nID, bool bSelect)
{
	this.m_sButton.setButtonSelect(this.m_sButton.getButtonNo(nID), bSelect);
}

void tagMikadoNote::setCursor(int nID)
{
	this.m_sButton.setCursor(this.m_sButton.getButtonNo(nID));
}

